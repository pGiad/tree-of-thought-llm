[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n5 * 4 = 20 (left: 5 9 20)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n5 - 1 = 4 (left: 4 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 5 5 10)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n4 + 6 = 10 (left: 6 10)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n6 * 2 = 12 (left: 4 12)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n10 - 4 = 6 (left: 4 6)\n",
                    "5 * 2 = 10 (left: 4 6 10)\n4 * 3 = 12 (left: 6 12)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 10",
                "ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 * 2 = 10 (left: 5 11 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 - 1 = 4 (left: 4 15 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 + 8 = 13 (left: 8 10 13)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n8 * 1.25 = 10 (left: 5 10 13)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 + 5 = 15 (left: 5 8 15)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n3 * 2 = 6 (left: 1 5 7)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 4)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n3 + 2 = 5 (left: 1 5 8)\n",
                    "6 - 1 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n8 - 7 = 1 (left: 1 3 5)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 * 9 = 45 (left: 5 9 45)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n9 - 5 = 4 (left: 4 5 45)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 / 1 = 5 (left: 1 5 45)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n45 + 5 = 50 (left: 5 10 50)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 * 5 = 25 (left: 5 25 50)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n9 - 5 = 4 (left: 4 5 25)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 6 10",
                "ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n4 + 5 = 9 (left: 5 9 15)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n5 * 4 = 20 (left: 1 9 15)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n1 + 15 = 16 (left: 4 10 16)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n4 * 5 = 20 (left: 1 10 20)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n10 / 2 = 5 (left: 1 5 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n10 - 1 = 9 (left: 1 4 9)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n1 + 10 = 11 (left: 4 9 11)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 10 9 15)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9 15)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n9 * 5 = 45 (left: 10 15 45)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n10 / 2 = 5 (left: 5 9 5)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14 5)\n",
                    "10 / 2 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n5 - 9 = -4 (left: 1 5 -4)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n6 + 11 = 17 (left: 11 5 17)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n11 - 6 = 5 (left: 5 5 17)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n5 * 2 = 10 (left: 11 5 17)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n11 / 1 = 11 (left: 5 11 17)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n17 - 11 = 6 (left: 5 6 11)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n5 + 11 = 16 (left: 11 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n11 - 5 = 6 (left: 6 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n5 * 2 = 10 (left: 6 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n6 + 5 = 11 (left: 1 11)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n5 + 2 = 7 (left: 1 5 7)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n5 * 2 = 10 (left: 6 10)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n4 + 5 = 9 (left: 5 9 15)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n5 * 4 = 20 (left: 1 9 15)\n",
                    "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n1 + 15 = 16 (left: 4 10 16)\n"
                ]
            }
        ],
        "idx": 900,
        "ys": [
            "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
            "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n5 * 2 = 10 (left: 6 10)\n",
            "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n4 + 5 = 9 (left: 5 9 15)\n",
            "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n5 * 4 = 20 (left: 1 9 15)\n",
            "4 + 5 = 9 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n1 + 15 = 16 (left: 4 10 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n",
                    "4 * 2 = 8 (left: 3 5 8)\n",
                    "5 - 1 = 4 (left: 2 4 8)\n",
                    "7 / 1 = 7 (left: 2 4 7)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 4 7",
                "ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n"
                ],
                "new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n3 * 2 = 6 (left: 1 5 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 4)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n3 + 2 = 5 (left: 1 5 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n8 - 7 = 1 (left: 1 3 5)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n5 * 3 = 15 (left: 5 8 15)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5 8)\n",
                    "1 + 4 = 5 (left: 3 5 5)\n8 / 3 = 2.67 (left: 2 5 2.67)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n2 + 4 = 6 (left: 4 6 7)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n4 * 2 = 8 (left: 2 8 7)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n7 - 2 = 5 (left: 2 4 5)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n2 * 4 = 8 (left: 4 7 8)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n4 + 2 = 6 (left: 2 6 7)\n",
                    "1 + 2 = 3 (left: 2 4 7)\n7 / 1 = 7 (left: 1 4 7)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n1 + 3 = 4 (left: 3 4 5)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n3 * 1 = 3 (left: 1 3 5)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 1 3 4)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n1 + 5 = 6 (left: 3 4 6)\n",
                    "7 - 2 = 5 (left: 1 3 5)\n3 / 1 = 3 (left: 1 3 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 4 7",
                "ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n"
                ],
                "new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 1 7 20)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 1 5 3)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n3 * 4 = 12 (left: 1 4 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 - 1 = 3 (left: 1 3 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 4 7",
                "ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n"
                ],
                "new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n4 + 3 = 7 (left: 3 7 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n3 * 4 = 12 (left: 12 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 / 2 = 4 (left: 4 5 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n4 + 1 = 5 (left: 3 5 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n"
                ]
            }
        ],
        "idx": 901,
        "ys": [
            "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "2 * 1 = 2 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
            "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
            "2 * 1 = 2 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 - 3 = 5 (left: 5 8)\n",
            "2 * 1 = 2 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n",
                    "8 / 2 = 4 (left: 1 3 4)\n",
                    "11 - 5 = 6 (left: 1 3 6)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 11",
                "ys": [
                    "1 5 = 7 (left: 2 7 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n"
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "1 5 = 7 (left: 2 7 8)\n6 * 1 = 6 (left: 1 6 7)\n",
                    "1 5 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 6 8 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n2 + 8 = 10 (left: 8 11)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n8 - 2 = 6 (left: 2 6 11)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n2 * 8 = 16 (left: 6 9 16)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n6 + 2 = 8 (left: 2 8 16)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n9 / 3 = 3 (left: 1.33 8 16)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n2 * 11 = 22 (left: 8 14 22)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n8 + 2 = 10 (left: 2 10 22)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n5 + 8 = 13 (left: 8 10 13)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n8 * 1.25 = 10 (left: 5 10 13)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "8 + 2 = 10 (left: 5 8 10)\n10 / 2 = 5 (left: 5 5 5)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "1 + 8 = 9 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 11",
                "ys": [
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 4 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "3 * 2 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 + 6 = 10 (left: 8 8 10)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 11",
                "ys": [
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 * 5 = 10 (left: 2 8 11)\n16 - 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 4 = 8 (left: 4 8 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 * 2 = 8 (left: 4 8 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
                ]
            }
        ],
        "idx": 902,
        "ys": [
            "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
            "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
            "1 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
            "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
            "1 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 4 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 4 13)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n",
                    "4 - 3 = 1 (left: 1 1 13)\n",
                    "13 - 4 = 9 (left: 1 4 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n",
                    "4 + 1 = 5 (left: 1 5 4)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 4 13)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 4 13",
                "ys": [
                    "3 + 4 = 7 (left: 4 4 13)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 4 13)\n4 + 4 = 8 (left: 4 8 13)\n",
                    "3 + 4 = 7 (left: 4 4 13)\n4 * 1 = 4 (left: 1 4 13)\n",
                    "3 + 4 = 7 (left: 4 4 13)\n13 - 4 = 9 (left: 1 4 9)\n",
                    "3 + 4 = 7 (left: 4 4 13)\n1 + 4 = 5 (left: 4 5 9)\n",
                    "3 + 4 = 7 (left: 4 4 13)\n4 / 2 = 2 (left: 2 4 9)\n",
                    "3 + 4 = 7 (left: 4 4 13)\n9 - 4 = 5 (left: 2 4 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5 4)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4 4)\n",
                    "1 * 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "4 - 1 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n1 + 4 = 5 (left: 4 5 13)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n4 * 1 = 4 (left: 1 4 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n13 - 4 = 9 (left: 1 4 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n1 + 13 = 14 (left: 4 9 14)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 4 13",
                "ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n"
                ],
                "new_ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 - 1 = 4 (left: 4 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 / 3 = 3 (left: 3 4 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 / 0.5 = 10 (left: 3 10 5)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 * 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n5 * 4 = 20 (left: 5 9 20)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n5 - 1 = 4 (left: 4 5 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 3 5 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 4 5 10)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n1 + 4 = 5 (left: 3 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n3 * 1 = 3 (left: 1 4 3)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n4 - 1 = 3 (left: 1 3 3)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n1 / 1 = 1 (left: 1 3 2)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n3 + 1 = 4 (left: 1 3 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n1 * 4 = 4 (left: 3 4 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n3 - 1 = 2 (left: 1 2 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n4 / 1 = 4 (left: 1 2 4)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n1 + 3 = 4 (left: 2 3)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n3 - 1 = 2 (left: 1 2)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n1 * 3 = 3 (left: 2 3)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 4 13",
                "ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n"
                ],
                "new_ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n5 * 3 = 15 (left: 8 15)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n15 - 5 = 10 (left: 5 10)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n10 / 2 = 5 (left: 5 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n5 * 3 = 15 (left: 5 8 15)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5 8)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n8 / 3 = 2.67 (left: 2 5 2.67)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n3 + 7 = 10 (left: 7 5 10)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n7 - 3 = 4 (left: 4 5 10)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n5 * 3 = 15 (left: 7 10 15)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 2 = 7 (left: 3 7 5)\n7 / 3 = 2.33 (left: 2.33 5 15)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 + 9 = 18 (left: 9 9 13)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9 27)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 + 4 = 13 (left: 4 9 13)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 + 9 = 18 (left: 9 9 13)\n",
                    "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n"
                ]
            }
        ],
        "idx": 903,
        "ys": [
            "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
            "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
            "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 + 9 = 18 (left: 9 9 13)\n",
            "4 * 3 = 12 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 / 1 = 9 (left: 4 9 9)\n",
            "13 / 3 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 7 8 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n",
                    "7 + 3 = 10 (left: 3 8 42)\n",
                    "8 * 3 = 24 (left: 3 9 42)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n"
                ],
                "values": [
                    20.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 7 8 9)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 9",
                "ys": [
                    "6 + 7 = 13 (left: 7 8 9)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "6 + 7 = 13 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "6 + 7 = 13 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "6 + 7 = 13 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "6 + 7 = 13 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n8 + 9 = 17 (left: 9 17 42)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 / 3 = 3 (left: 3 9 42)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n42 - 9 = 33 (left: 3 9 33)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n3 + 8 = 11 (left: 11 18 33)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n18 / 2 = 9 (left: 3 9 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n3 + 7 = 10 (left: 7 10 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n42 - 7 = 35 (left: 3 7 35)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n3 * 7 = 21 (left: 7 21 35)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 + 3 = 10 (left: 3 10 35)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n35 - 3 = 32 (left: 3 7 32)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n3 + 42 = 45 (left: 7 32 45)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n7 + 9 = 16 (left: 9 16 42)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n9 / 3 = 3 (left: 3 9 42)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n42 - 9 = 33 (left: 3 9 33)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n9 * 3 = 27 (left: 3 27 33)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n3 + 7 = 10 (left: 7 10 27)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n7 * 3 = 21 (left: 3 21 27)\n",
                    "8 - 1 = 7 (left: 7 9 42)\n27 - 21 = 6 (left: 3 6 21)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 9",
                "ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n3 + 21 = 24 (left: 21 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 / 3 = 7 (left: 7 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n3 * 7 = 21 (left: 21 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 18 = 24 (left: 3 24)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n8 / 1 = 8 (left: 1 8 13)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n13 - 8 = 5 (left: 1 5 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n1 * 8 = 8 (left: 5 8 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n8 + 1 = 9 (left: 5 9 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 / 1 = 5 (left: 1 5 8)\n",
                    "9 - 1 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 1 3 5)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n3 + 18 = 21 (left: 18 33)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n18 / 3 = 6 (left: 6 33)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n33 - 18 = 15 (left: 3 15 18)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n3 * 18 = 54 (left: 15 18 54)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n18 - 3 = 15 (left: 9 15 15)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n15 / 3 = 5 (left: 5 9 15)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n15 + 3 = 18 (left: 9 12 15)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n9 * 3 = 27 (left: 12 15 27)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 * 2 = 18 (left: 3 18 33)\n12 - 9 = 3 (left: 3 3 15)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    20.0,
                    0.001,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 8 9",
                "ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n3 + 21 = 24 (left: 21 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 - 3 = 18 (left: 3 18 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n18 + 42 = 60 (left: 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n42 / 3 = 14 (left: 14 42)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n42 - 18 = 24 (left: 14 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n18 * 2 = 36 (left: 14 36 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n36 / 6 = 6 (left: 6 14 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n24 + 6 = 30 (left: 14 30 6)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n6 * 4 = 24 (left: 14 30 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n21 - 3 = 18 (left: 18 42)\n30 - 6 = 24 (left: 14 24 24)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n3 + 21 = 24 (left: 21 24)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
                    "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 - 3 = 18 (left: 3 18 21)\n"
                ]
            }
        ],
        "idx": 904,
        "ys": [
            "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
            "7 * 6 = 42 (left: 8 9 42)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
            "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n3 + 21 = 24 (left: 21 24)\n",
            "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
            "9 / 3 = 3 (left: 3 7 42)\n7 * 3 = 21 (left: 3 21 42)\n42 - 21 = 21 (left: 3 21)\n21 - 3 = 18 (left: 3 18 21)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n",
                    "11 * 1 = 11 (left: 1 13 11)\n",
                    "1 + 11 = 12 (left: 11 13 12)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 1 10 13)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "11 - 1 = 10 (left: 1 10 13)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n13 - 10 = 3 (left: 1 3 9)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 13 = 13 (left: 9 13 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n13 / 1 = 13 (left: 9 13 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n9 + 1 = 10 (left: 8 13 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n13 - 9 = 4 (left: 1 4 8)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n1 + 13 = 14 (left: 13 14)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n13 / 1 = 13 (left: 1 13 13)\n",
                    "13 / 1 = 13 (left: 1 13 13)\n13 - 1 = 12 (left: 1 12 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n11 + 11 = 22 (left: 11 11 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n11 * 13 = 143 (left: 11 13 143)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n13 - 11 = 2 (left: 2 11 143)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 11 12 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n11 - 1 = 10 (left: 10 11 13)\n",
                    "11 / 1 = 11 (left: 1 11 13)\n13 - 11 = 2 (left: 1 2 10)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 11 12)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n11 * 12 = 132 (left: 11 12 132)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n11 / 1 = 11 (left: 11 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 11 11 13",
                "ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n"
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n11 + 13 = 24 (left: 13 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 / 1 = 13 (left: 1 13 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n1 * 13 = 13 (left: 12 13 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 - 1 = 10 (left: 1 10 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n4 + 8 = 12 (left: 8 9 12)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9 12)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n9 - 4 = 5 (left: 4 8 5)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n13 - 1 = 12 (left: 12 23)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n12 * 2 = 24 (left: 7.67 24)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n7.67 + 12 = 19.67 (left: 24 19.67)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n9 + 13 = 22 (left: 13 22)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n9 * 1.5 = 13.5 (left: 4 13.5)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n4 + 9 = 13 (left: 9 13)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 11 11 13",
                "ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n"
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n1 + 11 = 12 (left: 11 12)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n11 - 1 = 10 (left: 1 10 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n11 + 11 = 22 (left: 11 11 22)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n11 * 1 = 11 (left: 1 11 22)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n1 + 11 = 12 (left: 11 12 22)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n11 - 1 = 10 (left: 1 10 22)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n22 / 2 = 11 (left: 1 11 11)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n13 + 23 = 36 (left: 23)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n23 - 13 = 10 (left: 10)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n13 * 2 = 26 (left: 10 26)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n10 / 2 = 5 (left: 5 26)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n26 - 10 = 16 (left: 5 16)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n10 + 13 = 23 (left: 13 23)\n5 + 16 = 21 (left: 16)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n12 + 7.67 = 19.67 (left: 7.67)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n7.67 * 2 = 15.34 (left: 12 15.34)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n12 - 7.67 = 4.33 (left: 4.33 7.67)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n7.67 / 3 = 2.56 (left: 2.56 4.33)\n",
                    "11 - 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n23 / 3 = 7.67 (left: 12 7.67)\n4.33 + 2.56 = 6.89 (left: 2.56 6.89)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
                    "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n22 / 2 = 11 (left: 1 11 11)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n"
                ]
            }
        ],
        "idx": 905,
        "ys": [
            "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n11 / 1 = 11 (left: 1 11 11)\n",
            "13 - 1 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 11)\n22 / 2 = 11 (left: 1 11 11)\n",
            "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
            "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12)\n",
            "1 + 11 = 12 (left: 11 11 13)\n143 / 11 = 13 (left: 11 13 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 8 10 11",
                "ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n"
                ],
                "new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n10 - 8 = 2 (left: 2 11 18)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n11 - 10 = 1 (left: 1 2 18)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n18 / 2 = 9 (left: 1 2 9)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n2 * 11 = 22 (left: 1 9 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n9 - 1 = 8 (left: 8 9 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n9 / 3 = 3 (left: 3 8 22)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n10 - 1 = 9 (left: 7 9 11)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n11 - 1 = 10 (left: 7 9 10)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n10 + 1 = 11 (left: 7 9 11)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n11 / 1 = 11 (left: 7 9 11)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n8 + 9 = 17 (left: 9 11 17)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n9 - 1 = 8 (left: 8 11 17)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8 17)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n17 / 1 = 17 (left: 8 11 17)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 + 8 = 19 (left: 9 11 19)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n8 * 1 = 8 (left: 8 11 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n10 - 8 = 2 (left: 2 11 18)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n11 - 10 = 1 (left: 1 2 18)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n18 / 2 = 9 (left: 1 2 9)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n2 * 11 = 22 (left: 1 9 22)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n1 + 9 = 10 (left: 1 10 22)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n9 - 1 = 8 (left: 1 8 22)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n22 / 1 = 22 (left: 1 8 22)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 8 10 11",
                "ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n"
                ],
                "new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n11 - 1 = 10 (left: 10 18 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 / 2 = 9 (left: 9 10 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 * 1 = 10 (left: 9 18 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 + 9 = 18 (left: 9 18 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 * 2 = 18 (left: 9 18 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 - 2 = 7 (left: 7 9 22)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n22 - 9 = 13 (left: 7 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n13 + 3 = 16 (left: 3 9 16)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n11 - 1 = 10 (left: 10 18 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 / 2 = 9 (left: 9 10 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 * 1 = 10 (left: 9 18 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n10 + 11 = 21 (left: 11 17 21)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n11 - 1 = 10 (left: 10 17 21)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n17 / 3 = 5.67 (left: 10 5.67 17)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n10 * 2 = 20 (left: 5.67 17 20)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n17 + 10 = 27 (left: 5.67 20 27)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n5.67 - 1 = 4.67 (left: 4.67 20 27)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n20 / 4 = 5 (left: 4.67 5 27)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 10 11 17)\n27 - 20 = 7 (left: 4.67 5 7)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n9 + 10 = 19 (left: 10 14 19)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n10 - 9 = 1 (left: 1 14 19)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n14 - 10 = 4 (left: 1 4 9)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n9 * 2 = 18 (left: 1 4 18)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n1 + 14 = 15 (left: 4 15 18)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n4 * 9 = 36 (left: 15 18 36)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n7 * 2 = 14 (left: 9 10 14)\n18 - 14 = 4 (left: 4 15 4)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 8 10 11",
                "ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n"
                ],
                "new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n11 + 18 = 29 (left: 18 21 29)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n18 - 11 = 7 (left: 7 21 29)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n21 - 18 = 3 (left: 3 7 29)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n7 * 3 = 21 (left: 3 29 21)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n3 + 21 = 24 (left: 21 24 29)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n29 / 3 = 9.67 (left: 9.67 21 24)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n9 + 10 = 19 (left: 10 19 19)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n10 - 9 = 1 (left: 1 19 19)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n19 / 1 = 19 (left: 10 10 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n11 + 18 = 29 (left: 18 21 29)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n18 - 11 = 7 (left: 7 21 29)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n21 - 18 = 3 (left: 3 7 29)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n7 * 3 = 21 (left: 3 29 21)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n3 + 21 = 24 (left: 21 24 29)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n10 + 11 = 21 (left: 11 18 21)\n29 / 3 = 9.67 (left: 9.67 21 24)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n9 + 10 = 19 (left: 10 19 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n10 - 9 = 1 (left: 1 19 19)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n18 + 1 = 19 (left: 9 10 19)\n19 / 1 = 19 (left: 10 10 19)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n"
                ]
            }
        ],
        "idx": 906,
        "ys": [
            "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
            "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
            "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
            "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
            "1 + 8 = 9 (left: 8 10 11)\n1 + 8 = 9 (left: 9 9 22)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 3 = 5 (left: 2 5 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n",
                    "6 + 2 = 8 (left: 2 8 9)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n",
                    "7 - 2 = 5 (left: 2 5 12)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n",
                    "1 3 = 5 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 9",
                "ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n",
                    "1 3 = 5 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "1 3 = 5 (left: 2 5 9)\n2 + 5 = 7 (left: 5 9)\n",
                    "1 3 = 5 (left: 2 5 9)\n5 * 2 = 10 (left: 2 9 10)\n",
                    "1 3 = 5 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7 10)\n",
                    "1 3 = 5 (left: 2 5 9)\n9 / 3 = 3 (left: 2 5 3)\n",
                    "1 3 = 5 (left: 2 5 9)\n5 + 2 = 7 (left: 3 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 9",
                "ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 * 2 = 10 (left: 10 7 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n7 - 1 = 6 (left: 5 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 * 1 = 6 (left: 2 7 6)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 9",
                "ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n"
                ],
                "new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n7 * 1.75 = 12.25 (left: 0.25 11 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n11 - 5 = 6 (left: 0.25 6 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n0.25 * 4 = 1 (left: 1 6 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n12 / 1.2 = 10 (left: 1 6 10)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n6 + 1 = 7 (left: 1 7 10)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n"
                ]
            }
        ],
        "idx": 907,
        "ys": [
            "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
            "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n11 / 1 = 11 (left: 4 6 11)\n",
            "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
            "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n4 + 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
            "2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n",
                    "9 / 3 = 3 (left: 1 4 3)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n",
                    "1 * 9 = 9 (left: 4 4 9)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 9",
                "ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5 4)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4 4)\n",
                    "9 - 5 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3 4)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 - 1 = 4 (left: 1 4)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 * 5 = 5 (left: 4 5)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 + 1 = 6 (left: 4 6)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 3/2 = 6 (left: 1 6 9)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 1 4 6)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n1 + 9 = 10 (left: 4 6 10)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 9/3 = 4 (left: 1 4 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n1 + 4 = 5 (left: 4 4 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 - 1 = 3 (left: 3 4 3)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 9",
                "ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 - 1 = 4 (left: 4 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 / 3 = 3 (left: 3 4 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n5 + 3 = 8 (left: 3 8 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n3 / 0.5 = 6 (left: 6 8 5)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n5 * 9/3 = 15 (left: 8 15)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n8 + 5 = 13 (left: 3 13)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n3 * 5 = 15 (left: 8 15)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "3 * 1 = 3 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 9",
                "ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 * 2 = 10 (left: 5 11 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 - 1 = 4 (left: 4 15 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n5 * 9/3 = 15 (left: 8 15)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n8 + 5 = 13 (left: 3 13)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n3 * 5 = 15 (left: 8 15)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "3 + 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
                    "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n"
                ]
            }
        ],
        "idx": 908,
        "ys": [
            "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 - 5 = 5 (left: 4 5 15)\n",
            "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
            "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
            "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
            "1 + 3 = 4 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 7)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n",
                    "3 + 12 = 15 (left: 3 4 15)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n",
                    "12 - 3 = 9 (left: 3 9 9)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 7)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 12",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 7)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 7 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n1.5 + 7 = 8.5 (left: 3 4 8.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 * 2 = 6 (left: 4 6 8.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n3 + 12 = 15 (left: 12 15 21)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n12 / 3 = 4 (left: 4 12 21)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n21 - 12 = 9 (left: 3 9 12)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n3 * 12 = 36 (left: 12 21 36)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n12 + 3 = 15 (left: 9 12 15)\n",
                    "3 * 7 = 21 (left: 3 12 21)\n21 / 3 = 7 (left: 7 9 12)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12 15)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12 12)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\nFinal problem:\n",
                    "12 / 3 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n4 * 3/2 = 6 (left: 2 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "12 / 3 = 4 (left: 3 4 4)\n3 + 1 = 4 (left: 3 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 4 7 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 3 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 3 4 9)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 4 9 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 + 3 = 7 (left: 1 7 9)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0,
                    1.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 12",
                "ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n"
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 4 = 9 (left: 9 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 9 = 3 (left: 3 9 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 - 12 = 24 (left: 3 9 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 + 3 = 12 (left: 6 9 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n3 * 0.5 = 1.5 (left: 1.5 4 4.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5 4)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n3 + 5.5 = 8.5 (left: 5.5 6 8.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n5.5 / 1.75 = 3.14 (left: 1.75 6 8.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 3 = 3 (left: 1.75 3 8.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n8.5 + 1.75 = 10.25 (left: 1.75 3 10.25)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n1.75 * 3 = 5.25 (left: 3 6 10.25)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 1.75 = 4.25 (left: 1.75 4.25 10.25)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n10.25 / 2.5 = 4.1 (left: 1.75 4.25 4.1)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n3 + 4.5 = 7.5 (left: 4.5 5.5 7.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n4.5 * 3 = 13.5 (left: 1.5 5.5 13.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n5.5 - 3 = 2.5 (left: 1.5 2.5 13.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n13.5 / 3 = 4.5 (left: 1.5 4.5 7)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 7 12",
                "ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n"
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n36 / 4 = 9 (left: 9 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 - 9 = 3 (left: 3 9 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n36 - 12 = 24 (left: 3 9 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n9 + 3 = 12 (left: 6 9 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n6 + 18 = 24 (left: 18 24 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n18 / 3 = 6 (left: 6 6 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n24 - 6 = 18 (left: 12 18 18)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n18 - 6 = 12 (left: 6 12 18)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n6 * 2 = 12 (left: 12 18 18)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n18 / 2 = 9 (left: 6 9 18)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n18 - 9 = 9 (left: 6 9 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n4.5 + 7 = 11.5 (left: 7 11.5 13.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n7 / 1.5 = 4.67 (left: 0.83 4.67 13.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n13.5 - 4.5 = 9 (left: 0.83 4.67 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n0.83 * 7 = 5.81 (left: 4.67 5.81 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n4.67 + 0.83 = 5.5 (left: 4.67 5.5 9)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n9 - 4.67 = 4.33 (left: 0.33 4.33 5.5)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n5.5 / 1.1 = 5 (left: 0.33 4.33 5)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n12 + 36 = 48 (left: 36 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n36 / 4 = 9 (left: 9 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n36 - 12 = 24 (left: 9 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n12 * 3 = 36 (left: 9 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n9 + 12 = 21 (left: 36 21)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n36 / 2 = 18 (left: 18 21)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n36 / 4 = 9 (left: 9 12 36)\n",
                    "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 - 9 = 3 (left: 3 9 36)\n"
                ]
            }
        ],
        "idx": 909,
        "ys": [
            "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n",
            "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n9 * 2 = 18 (left: 6 18 24)\n",
            "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 * 3 = 36 (left: 12 36 36)\n",
            "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n36 / 4 = 9 (left: 9 12 36)\n",
            "3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 12 12 36)\n12 - 9 = 3 (left: 3 9 36)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 * 4 = 20 (left: 7 9 20)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n",
                    "5 + 4 = 9 (left: 1 7 9)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n",
                    "9 - 4 = 5 (left: 1 3 5)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n",
                    "5 + 1 = 6 (left: 1 2 6)\n"
                ],
                "values": [
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 9",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 0.5 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 4 = 3 (left: 0.5 3 4.5)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "7 / 1 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "1 * 9 = 9 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 9",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4.5 * 0.5 = 2.25 (left: 2.25 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4 + 4 = 8 (left: 4.5 7 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 / 1.5 = 3 (left: 4 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4 + 0.5 = 4.5 (left: 3.5 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 3 = 4 (left: 3 3 4)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n3 * 2 = 6 (left: 1.5 3 4)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 - 1.5 = 3 (left: 1.5 3 3)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "9 - 5 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 9",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4 + 4 = 8 (left: 4.5 7 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4.5 / 1.5 = 3 (left: 4 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4 + 0.5 = 4.5 (left: 3.5 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n7 - 3 = 4 (left: 3 3 4)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n3 * 2 = 6 (left: 1.25 3 4)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4.5 - 1.5 = 3 (left: 1.25 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n8 + 4.5 = 12.5 (left: 4.5 7 12.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n4.5 * 2 = 9 (left: 7 9 12.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n7 - 4.5 = 2.5 (left: 2.5 9 12.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n4 / 0.5 = 8 (left: 8 4.5 7)\n12.5 / 2.5 = 5 (left: 7 9 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n4 + 3 = 7 (left: 3 7 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n3 * 1.5 = 4.5 (left: 3 4.5 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n3 - 1 = 2 (left: 2 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n4.5 + 1 = 5.5 (left: 3 2 5.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n3 * 4.5 = 13.5 (left: 2 5.5 13.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n2 - 0.5 = 1.5 (left: 1.5 5.5 13.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n4 + 7 = 11 (left: 7 9 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n7 * 4 = 28 (left: 9 11 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n9 - 4 = 5 (left: 5 7 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n7 - 1 = 6 (left: 4 6 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n9 / 3 = 3 (left: 3 4 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n4 + 4 = 8 (left: 4.5 3 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n4.5 - 1 = 3.5 (left: 3 3.5 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n3 * 2 = 6 (left: 3 3.5 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n3.5 + 1 = 4.5 (left: 3 4.5 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n3 / 1 = 3 (left: 3 3.5 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n6 - 3 = 3 (left: 3 3.5 3)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4 + 0.5 = 4.5 (left: 3.5 3 4.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n2 - 0.5 = 1.5 (left: 1.5 5.5 13.5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n9 / 3 = 3 (left: 3 4 6)\n"
                ]
            }
        ],
        "idx": 910,
        "ys": [
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n7 - 4 = 3 (left: 4 4.5 3)\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n0.5 + 4 = 4.5 (left: 4 4.5 7)\n4 + 0.5 = 4.5 (left: 3.5 3 4.5)\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 0.5 4 7)\n7 - 4 = 3 (left: 4 3 4.5)\n2 - 0.5 = 1.5 (left: 1.5 5.5 13.5)\n",
            "4 + 5 = 9 (left: 5 7 9)\n0.5 * 9 = 4.5 (left: 4 4.5 7)\n4.5 * 2 = 9 (left: 4 7 9)\n9 / 3 = 3 (left: 3 4 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 8 13)\n",
                    "2 * 1 = 2 (left: 1 8 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n",
                    "13 - 2 = 11 (left: 1 7 11)\n",
                    "1 + 8 = 9 (left: 7 9 11)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 * 1 = 2 (left: 1 8 13)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 8 13",
                "ys": [
                    "2 * 1 = 2 (left: 1 8 13)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n"
                ],
                "new_ys": [
                    "2 * 1 = 2 (left: 1 8 13)\n1 + 8 = 9 (left: 8 9 13)\n",
                    "2 * 1 = 2 (left: 1 8 13)\n8 - 1 = 7 (left: 1 7 13)\n",
                    "2 * 1 = 2 (left: 1 8 13)\n13 - 8 = 5 (left: 1 5 7)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n9 - 1 = 8 (left: 8 11)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n11 - 9 = 2 (left: 1 2 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 + 8 = 10 (left: 8 10 13)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n8 / 2 = 4 (left: 4 8 13)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 - 2 = 11 (left: 8 8 11)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n8 - 2 = 6 (left: 6 8 13)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n2 + 7 = 9 (left: 7 9 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n7 - 2 = 5 (left: 2 5 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n13 / 2 = 6.5 (left: 1.5 5 13)\n",
                    "8 - 1 = 7 (left: 2 7 13)\n13 - 7 = 6 (left: 2 5 6)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 8 13",
                "ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n"
                ],
                "new_ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 + 11 = 20 (left: 11 20)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 * 1.5 = 13.5 (left: 1.5 9 13.5)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n1.5 + 8 = 9.5 (left: 8 9.5 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 - 8 = 1 (left: 1 3 5)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n1 + 7 = 8 (left: 6 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n7 - 1 = 6 (left: 1 6)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n1 / 7 = 0.14 (left: 0.14 6)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 13 16 21)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n13 / 4 = 3 (left: 3 16 21)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 3 8 21)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n3 + 16 = 19 (left: 8 16 19)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n6.5 + 8 = 14.5 (left: 8 8 14.5)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n8 / 1.5 = 5.33 (left: 5.33 8 14.5)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8 8)\n14.5 - 8 = 6.5 (left: 5.33 6.5 8)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 8 13",
                "ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n"
                ],
                "new_ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3 5)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n3 * 9 = 27 (left: 8 9 27)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n1 + 5 = 6 (left: 5 6 6)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 6)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n8 - 3 = 5 (left: 3 5 9)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n1 + 7 = 8 (left: 6 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n7 - 1 = 6 (left: 1 6)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n1 / 7 = 0.14 (left: 0.14 6)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n3 + 16 = 19 (left: 16 16 19)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n16 / 3 = 5.33 (left: 3 5.33 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n16 - 3 = 13 (left: 3 13 16)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n3 * 16 = 48 (left: 16 16 48)\n",
                    "1 + 2 = 3 (left: 2 8 13)\n2 * 8 = 16 (left: 8 13 16)\n8 * 2 = 16 (left: 3 16 16)\n16 + 3 = 19 (left: 16 16 19)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n"
                ]
            }
        ],
        "idx": 911,
        "ys": [
            "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
            "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
            "9 - 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
            "9 - 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
            "7 * 1 = 7 (left: 1 9 11)\n1 + 9 = 10 (left: 9 11)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 6 6 9)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n",
                    "6 - 2 = 4 (left: 4 4 9)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 6)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0,
                    0.001,
                    1.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "4 + 3 = 7 (left: 3 6 7)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 6 9",
                "ys": [
                    "4 + 3 = 7 (left: 3 6 7)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n"
                ],
                "new_ys": [
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 7 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n1.5 + 7 = 8.5 (left: 3 4 8.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 * 2 = 6 (left: 4 6 8.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 9 6)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 3 6 18)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n18 / 6 = 3 (left: 3 3 3)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n4 * 3/2 = 6 (left: 2 4 6)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "9 / 3 = 3 (left: 3 4 4)\n3 + 1 = 4 (left: 3 4 4)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n6 + 6 = 12 (left: 6 6 9)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n6 + 3 = 9 (left: 3 9 9)\n",
                    "4 + 6 = 10 (left: 6 6 9)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n6 * 2 = 12 (left: 4 9 12)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n6 / 2 = 3 (left: 3 4 5)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 6 9",
                "ys": [
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n"
                ],
                "new_ys": [
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n3 + 3 = 6 (left: 3 6 18)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n18 - 3 = 15 (left: 3 9 15)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n3 / 1 = 3 (left: 1 3 9)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 + 3 = 12 (left: 3 6 12)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n6 + 5 = 11 (left: 5 11 13)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 * 2 = 10 (left: 10 11 13)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 + 1 = 6 (left: 6 8 11)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n3 * 0.5 = 1.5 (left: 1.5 4 4.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5 4)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n3 + 5.5 = 8.5 (left: 5.5 6 8.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n5.5 / 1.75 = 3.14 (left: 1.75 6 8.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 3 = 3 (left: 1.75 3 8.5)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n8.5 + 1.75 = 10.25 (left: 1.75 3 10.25)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n1.75 * 3 = 5.25 (left: 3 6 10.25)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 1.75 = 4.25 (left: 1.75 4.25 10.25)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n10.25 / 2.5 = 4.1 (left: 1.75 4.25 4.1)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 6 9",
                "ys": [
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n"
                ]
            }
        ],
        "idx": 912,
        "ys": [
            "6 * 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
            "6 * 2 = 12 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
            "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "4 + 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 4 = 5 (left: 4 4 8)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n"
                ],
                "values": [
                    20.0,
                    0,
                    20.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 4 = 5 (left: 4 4 8)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 8",
                "ys": [
                    "1 4 = 5 (left: 4 4 8)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n"
                ],
                "new_ys": [
                    "1 4 = 5 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "1 4 = 5 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "1 4 = 5 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "1 4 = 5 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "4 * 1 = 4 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n5 * 4 = 20 (left: 8 20 9)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n8 - 4 = 4 (left: 4 5 9)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n5 - 1 = 4 (left: 4 4 9)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n9 + 1 = 10 (left: 4 8 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 4 8 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n4 * 1 = 4 (left: 1 4 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n4 / 1 = 4 (left: 1 4 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 4 = 1 (left: 1 1 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n3 * 1 = 3 (left: 1 4 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 4 = 5 (left: 3 5 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n3 / 1 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 8",
                "ys": [
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n"
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n5 * 4 = 20 (left: 5 9 20)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 / 3 = 3 (left: 1 3 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n5 * 2 = 10 (left: 3 10 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n5 + 8 = 13 (left: 8 9 13)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 5 8 4)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 * 5/2 = 20 (left: 5 20 4)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n5 + 9 = 14 (left: 8 14 4)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n9 / 3 = 3 (left: 5 8 3)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 3 = 5 (left: 5 5 3)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n5 - 1 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 + 4 = 7 (left: 4 7)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n4 * 3/2 = 6 (left: 1 6 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1 1 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n4 / 1 = 4 (left: 3 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n1 * 4 = 4 (left: 3 4 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n4 - 3 = 1 (left: 0.5 1.5 1)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 4 8",
                "ys": [
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n"
                ],
                "new_ys": [
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n0.5 + 1.5 = 2 (left: 1.5 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n1.5 / 0.5 = 3 (left: 3 4)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n1.5 * 0.5 = 0.75 (left: 0.75 2.5)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n2.5 + 0.5 = 3 (left: 1.5 3)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n4 - 0.5 = 3.5 (left: 1.5 3.5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 * 9 = 45 (left: 5 9 45)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n9 - 5 = 4 (left: 4 5 45)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 / 1 = 5 (left: 1 5 45)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n45 + 5 = 50 (left: 5 10 50)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 * 5 = 25 (left: 5 25 50)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n9 - 5 = 4 (left: 4 5 25)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n5 * 3 = 15 (left: 5 8 15)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5 8)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n8 / 3 = 2.67 (left: 2 5 2.67)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "4 + 1 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 5 8 9)\n8 - 1 = 7 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n1.5 / 0.5 = 3 (left: 3 4)\n"
                ]
            }
        ],
        "idx": 913,
        "ys": [
            "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 5 9)\n5 + 5 = 10 (left: 5 10 9)\n",
            "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
            "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n9 + 1 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
            "1 + 4 = 5 (left: 4 4 5)\n1 + 4 = 5 (left: 4 5 5)\n10 - 5 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
            "4 - 1 = 3 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n3 / 2 = 1.5 (left: 0.5 1.5 4)\n1.5 / 0.5 = 3 (left: 3 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 10 11)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n",
                    "10 / 1 = 10 (left: 1 5 11)\n",
                    "11 - 1 = 10 (left: 5 10 10)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 10 11)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 10 11)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 10 11)\n5 + 10 = 15 (left: 10 11 15)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n10 - 5 = 5 (left: 5 11 15)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n1 + 10 = 11 (left: 10 11)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n10 - 1 = 9 (left: 1 9 11)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n11 - 1 = 10 (left: 1 10 9)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n1 * 10 = 10 (left: 9 11)\n",
                    "5 * 1 = 5 (left: 1 10 11)\n9 + 1 = 10 (left: 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n5 + 9 = 14 (left: 9 11 14)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 5 = 6 (left: 5 8 6)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 / 3 = 3 (left: 2 5 3)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n5 * 3 = 15 (left: 3 11 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 + 1 = 12 (left: 3 12 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n3 - 1 = 2 (left: 2 12 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n15 / 3 = 5 (left: 2 5 5)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n5 + 9 = 14 (left: 9 11 14)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 - 5 = 6 (left: 5 8 6)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n5 * 2 = 10 (left: 8 11 10)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 + 1 = 10 (left: 5 8 10)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 11",
                "ys": [
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n5 * 2 = 10 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "1 + 10 = 11 (left: 5 9 11)\n11 / 1 = 11 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 10 11",
                "ys": [
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n5 * 2 = 10 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n7 * 1.75 = 12.25 (left: 0.25 11 12)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n11 - 5 = 6 (left: 0.25 6 12)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n0.25 * 4 = 1 (left: 1 6 12)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n12 / 1.2 = 10 (left: 1 6 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n6 + 1 = 7 (left: 1 7 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 7 9)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n6 * 5/2 = 15 (left: 1 7 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n7 - 5 = 2 (left: 1 6 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n1 + 7 = 8 (left: 6 8 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n6 / 3 = 2 (left: 1 2 15)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n15 - 7 = 8 (left: 1 2 8)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 * 2 = 10 (left: 5 11 10)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
                    "1 + 5 = 6 (left: 5 10 11)\n11 - 5 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n"
                ],
                "values": [
                    0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n"
                ]
            }
        ],
        "idx": 914,
        "ys": [
            "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n",
            "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 / 1 = 11 (left: 5 8 11)\n",
            "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
            "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n8 - 1 = 7 (left: 5 7 11)\n",
            "10 - 1 = 9 (left: 5 9 11)\n9 - 1 = 8 (left: 5 8 11)\n7 + 1 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 5 6 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n",
                    "6 - 3 = 3 (left: 1 3 11)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n",
                    "6 * 3/2 = 9 (left: 3 9 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n",
                    "11 / 3 = 3.67 (left: 3.33 4 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 11",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n4 + 1 = 5 (left: 3 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n3 + 6 = 9 (left: 6 9 11)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n6 * 3/2 = 4.5 (left: 1.5 4.5 11)\n",
                    "4 * 3/2 = 6 (left: 3 6 11)\n11 - 3 = 8 (left: 6 8 4.5)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 3 6 4)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 * 7 = 21 (left: 6 4 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n4 + 9 = 13 (left: 9 7 13)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n9 - 1 = 8 (left: 4 8 13)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n7 * 2 = 14 (left: 4 8 14)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n8 - 4 = 4 (left: 4 4 14)\n",
                    "3 + 6 = 9 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "7 - 3 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 11",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "11 - 4 = 7 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 11",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1 4 5)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n1 + 8 = 9 (left: 4 5 9)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 + 5 = 9 (left: 1 9 9)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ]
            }
        ],
        "idx": 915,
        "ys": [
            "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
            "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
            "3 + 4 = 7 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1 6 8)\n",
            "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
            "3 + 4 = 7 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "8 - 4 = 4 (left: 2 4 11)\n",
                    "9 / 3 = 3 (left: 1 3 4)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 8 9",
                "ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n4 + 8 = 12 (left: 8 9 12)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9 12)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n8 * 1 = 8 (left: 4 9 8)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n9 + 4 = 13 (left: 8 13)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n4 + 8 = 12 (left: 8 11 12)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n8 - 4 = 4 (left: 4 11 12)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n11 - 8 = 3 (left: 3 4 12)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n2 + 8 = 10 (left: 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n8 - 2 = 6 (left: 2 6 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n2 + 8 = 10 (left: 8 9 10)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n8 / 2 = 4 (left: 4 8 9)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n9 - 2 = 7 (left: 2 8 7)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n2 * 9 = 18 (left: 8 9 18)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n8 + 2 = 10 (left: 2 10 18)\n",
                    "4 * 2 = 8 (left: 2 8 9)\n9 / 2 = 4.5 (left: 1.5 10 18)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 8 9",
                "ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 + 4 = 6 (left: 4 8 9)\n9 / 2 = 4.5 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n3 + 8 = 11 (left: 8 11 12)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n12 - 3 = 9 (left: 8 9 9)\n",
                    "2 + 9 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n3 * 4 = 12 (left: 8 8 12)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 8 9",
                "ys": [
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 12 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 9 = 11 (left: 6 11 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n7 - 6 = 1 (left: 1 3 1)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 7 = 9 (left: 5 6 9)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 / 2 = 3 (left: 1 3 5)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n5 * 2 = 10 (left: 1 3 10)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n1 + 6 = 7 (left: 3 7 10)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n10 - 3 = 7 (left: 3 7 21)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n"
                ],
                "values": [
                    0.0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n"
                ]
            }
        ],
        "idx": 916,
        "ys": [
            "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
            "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
            "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
            "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
            "8 - 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 5 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 4 5 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n",
                    "9 + 1 = 10 (left: 4 5 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n",
                    "4 + 1 = 5 (left: 1 5 5)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "1 + 13 = 14 (left: 4 8 14)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 5 13",
                "ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n6 / 1 = 6 (left: 1 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n10 - 1 = 9 (left: 3 4 9)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n4 + 5 = 9 (left: 5 9 13)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 * 4 = 20 (left: 20 13)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n13 - 4 = 9 (left: 5 9 9)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n9 + 4 = 13 (left: 5 5 13)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 * 2 = 10 (left: 10 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n1 + 4 = 5 (left: 4 5 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n4 * 1 = 4 (left: 1 4 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n13 - 4 = 9 (left: 1 4 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n1 + 13 = 14 (left: 4 9 14)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 - 4 = 5 (left: 4 5 5)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n1 + 5 = 6 (left: 5 9)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n5 * 1 = 5 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n5 - 1 = 4 (left: 1 4)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 4 5)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n5 + 1 = 6 (left: 4 6)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n1 + 4 = 5 (left: 4 9)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n4 * 1 = 4 (left: 1 9)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n1 + 9 = 10 (left: 4 10)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n4 / 1 = 4 (left: 1 10)\n",
                    "5 - 1 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 5 13",
                "ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n",
                    "1 + 4 = 5 (left: 4 5 13)\n5 - 1 = 4 (left: 4 9 9)\n9 * 1 = 9 (left: 4 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n",
                    "4 * 1 = 4 (left: 1 4 13)\n9 / 1 = 9 (left: 4 9 9)\n9 * 1 = 9 (left: 4 9 9)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 5 13",
                "ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n"
                ]
            }
        ],
        "idx": 917,
        "ys": [
            "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
            "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
            "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
            "5 * 2 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
            "5 * 2 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 7)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n",
                    "7 / 1 = 7 (left: 4 2 7)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n",
                    "2 + 10 = 12 (left: 4 7 12)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 7 12",
                "ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n4 + 12 = 16 (left: 12 14 16)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 4 = 3 (left: 3 12 14)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 8 12 10)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 - 4 = 8 (left: 4 8 10)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n4 * 12 = 48 (left: 12 14 48)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n14 + 2 = 16 (left: 12 14 16)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 20)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 20)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n3 + 5 = 8 (left: 4 5 8)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n5 * 3 = 15 (left: 4 8 15)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 - 1 = 3 (left: 3 3 15)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n10 - 2 = 8 (left: 2 8 8)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 + 10 = 12 (left: 8 8 12)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n4 + 2 = 6 (left: 2 7 6)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n2 * 4 = 8 (left: 7 8 6)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n2 + 7 = 9 (left: 5 6 9)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n5 - 4 = 1 (left: 1 3.5 5)\n",
                    "2 + 2 = 4 (left: 4 2 7)\n5 * 2 = 10 (left: 3.5 5 10)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n4 + 7 = 11 (left: 7 11 14)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n7 * 2 = 14 (left: 4 7 14)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n7 - 4 = 3 (left: 3 4 14)\n",
                    "2 + 12 = 14 (left: 4 7 14)\n14 / 2 = 7 (left: 4 7 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 7 12",
                "ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n6 * 2 = 12 (left: 12 14 8)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 + 6 = 18 (left: 14 14 18)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n8 + 10 = 18 (left: 10 10 18)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n10 * 8 = 80 (left: 10 18 80)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10 18)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n2 * 4 = 8 (left: 8 10 10)\n18 / 2 = 9 (left: 2 9 10)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 7 12",
                "ys": [
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n"
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n6 + 14 = 20 (left: 14 18 20)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n14 - 6 = 8 (left: 6 8 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n18 / 2 = 9 (left: 6 8 9)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n6 * 2 = 12 (left: 8 12 9)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n8 + 6 = 14 (left: 12 14 9)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n9 - 1 = 8 (left: 8 12 8)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n6 + 12 = 18 (left: 12 8 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n12 / 2 = 6 (left: 6 8 18)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n8 * 2 = 16 (left: 6 12 16)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n12 - 6 = 6 (left: 6 8 6)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n6 + 8 = 14 (left: 12 14 6)\n",
                    "2 * 7 = 14 (left: 4 12 14)\n12 / 2 = 6 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n12 / 3 = 4 (left: 4 6 14)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n"
                ]
            }
        ],
        "idx": 918,
        "ys": [
            "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "7 - 2 = 5 (left: 4 5 7)\n20 / 4 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
            "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
            "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
            "12 - 2 = 10 (left: 4 2 10)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 3 7)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n",
                    "4 * 3 = 12 (left: 2 12 18)\n",
                    "18 - 7 = 11 (left: 2 11 12)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 18)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 7",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 18)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 18)\n3 + 4 = 7 (left: 4 7 18)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n4 * 3/2 = 6 (left: 1 6 18)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n18 - 3 = 15 (left: 4 6 15)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n3 * 4 = 12 (left: 6 12 15)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n4 + 3 = 7 (left: 1 7 15)\n",
                    "7 - 3 = 4 (left: 3 4 18)\n15 / 3 = 5 (left: 2 5 7)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 * 1 = 3 (left: 1 3 6)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n6 - 3 = 3 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 / 1 = 3 (left: 1 3 3)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n3 + 7 = 10 (left: 7 10 18)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n7 * 3 = 21 (left: 3 18 21)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n18 - 7 = 11 (left: 3 11 14)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n3 * 7 = 21 (left: 7 14 21)\n",
                    "3 * 6 = 18 (left: 3 7 18)\n7 + 3 = 10 (left: 3 10 14)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n4 + 10 = 14 (left: 10 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n4 * 10 = 40 (left: 18 40)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 + 4 = 22 (left: 10 22)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 1 = 10 (left: 4 10 22)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n2 + 4 = 6 (left: 4 6 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n18 - 4 = 14 (left: 2 4 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n2 + 18 = 20 (left: 4 14 20)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    20.0,
                    20.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 7",
                "ys": [
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n4 + 18 = 22 (left: 18 22)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n18 / 2 = 9 (left: 9 22)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n22 - 4 = 18 (left: 9 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n4 * 9 = 36 (left: 18 36)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 / 2 = 5 (left: 4 18)\n9 - 4 = 5 (left: 5 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 10)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 * 2 = 20 (left: 4 8 20)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n14 / 2 = 7 (left: 4 7 8)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n4 + 18 = 22 (left: 18 22)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n18 / 4 = 4.5 (left: 4.5 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n18 - 4 = 14 (left: 4 14 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n4 * 9 = 36 (left: 9 18 36)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n9 + 4 = 13 (left: 4 13 18)\n",
                    "3 + 7 = 10 (left: 4 10 18)\n10 * 2 = 20 (left: 4 18)\n18 / 9 = 2 (left: 2 4 9)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 3 6 4)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n3 * 7 = 21 (left: 6 4 21)\n",
                    "3 + 3 = 6 (left: 3 3 7)\n3 + 3 = 6 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 7",
                "ys": [
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n7 + 8 = 15 (left: 8 8 15)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 * 7 = 56 (left: 8 56 15)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8 15)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 2 = 8 (left: 3 8 6)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
                    "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n"
                ]
            }
        ],
        "idx": 919,
        "ys": [
            "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
            "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
            "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
            "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
            "7 / 3 = 2 (left: 2 4 18)\n4 * 2 = 8 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 6 (left: 5 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 5 6 8)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n",
                    "1 5 = 6 (left: 5 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 13",
                "ys": [
                    "9 - 1 = 8 (left: 5 6 8)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n",
                    "1 5 = 6 (left: 5 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "5 - 2 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "1 5 = 6 (left: 5 9 13)\n5 + 9 = 14 (left: 9 13 14)\n",
                    "1 5 = 6 (left: 5 9 13)\n9 / 1.75 = 5.14 (left: 4.24 9 13)\n",
                    "1 5 = 6 (left: 5 9 13)\n13 - 5 = 8 (left: 4.24 5 8)\n",
                    "1 5 = 6 (left: 5 9 13)\n9 * 0.55 = 4.95 (left: 4.24 4.95 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 9 13 15)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n2 + 5 = 7 (left: 3 7)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n5 - 2 = 3 (left: 1 3 3)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n3 * 2 = 6 (left: 1 3 6)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n1 + 3 = 4 (left: 3 4 6)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n3 / 1 = 3 (left: 1 3 3)\n",
                    "9 / 3 = 3 (left: 2 5 3)\n1 + 5 = 6 (left: 3 3 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 13",
                "ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n"
                ],
                "new_ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n9 / 3 = 3 (left: 3 5 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 1 = 7 (left: 3 7 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 + 3 = 11 (left: 3 7 11)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 + 5 = 6 (left: 5 6 6)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 6)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 * 2 = 6 (left: 6 4 4.5)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 9 13",
                "ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n"
                ],
                "new_ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n5 + 9 = 14 (left: 9 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 - 1 = 8 (left: 5 8 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 * 5/2 = 10 (left: 5 8 10)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n5 * 8 = 40 (left: 9 40)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 + 5 = 14 (left: 8 14)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 - 1 = 7 (left: 5 7 14)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n7 * 5/2 = 17.5 (left: 5 7 17.5)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n3 * 0.5 = 1.5 (left: 1.5 4 4.5)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5 4)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n3 + 4 = 7 (left: 4 4.5 7)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n4 * 0.5 = 2 (left: 2 4.5 7)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n4.5 - 3 = 1.5 (left: 2 1.5 7)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 - 1 = 8 (left: 5 8 8)\n",
                    "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 * 5/2 = 10 (left: 5 8 10)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ]
            }
        ],
        "idx": 920,
        "ys": [
            "5 + 1 = 6 (left: 6 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
            "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 - 1 = 8 (left: 5 8 8)\n",
            "9 - 1 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 * 5/2 = 10 (left: 5 8 10)\n",
            "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "5 + 1 = 6 (left: 6 9 13)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 7 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n",
                    "7 - 5 = 2 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n",
                    "6 - 1 = 5 (left: 4 5 12)\n",
                    "12 / 4 = 3 (left: 3 5 8)\n",
                    "13 - 5 = 8 (left: 3 5 8)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 13",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 13)\n2 + 6 = 8 (left: 6 8 13)\n",
                    "7 - 5 = 2 (left: 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "7 - 5 = 2 (left: 2 6 13)\n13 - 2 = 11 (left: 2 6 11)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n7 * 5 = 35 (left: 7 35)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 6 11 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 1 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 6 = 7 (left: 1 7 8)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n6 + 7 = 13 (left: 7 13)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n7 * 2 = 14 (left: 6 14 13)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n13 - 6 = 7 (left: 1 7 13)\n",
                    "5 + 6 = 11 (left: 6 7 13)\n13 / 1 = 13 (left: 6 7 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n5 + 7 = 12 (left: 7 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n7 * 1.75 = 12.25 (left: 0.25 13)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n13 - 5 = 8 (left: 0.25 7 8)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n0.25 * 4 = 1 (left: 3 7 8)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n7 / 2 = 3.5 (left: 3 3.5 8)\n",
                    "6 * 5 = 30 (left: 5 7 13)\n8 - 3.5 = 4.5 (left: 3 3.5 4.5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n7 + 7 = 14 (left: 0 14)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n0 * 7 = 0 (left: 0 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n7 - 0 = 7 (left: 0 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 * 1.5 = 7.5 (left: 6 7.5)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 / 3 = 2.33 (left: 5 2.33)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 - 0.5 = 4.5 (left: 4.5 2.33)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 + 12 = 17 (left: 12 12 17)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 / 2 = 6 (left: 6 12 17)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 + 5 = 17 (left: 7 12 17)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 7 13",
                "ys": [
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 7 12)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 * 2 = 14 (left: 5 12 14)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 * 2 = 10 (left: 7 10 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 10 12 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 12 24 60)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 * 3 = 36 (left: 12 36 60)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n60 / 4 = 15 (left: 12 15 36)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 - 9 = 3 (left: 3 15 36)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n36 / 6 = 6 (left: 3 6 15)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n5 + 6 = 11 (left: 1 11)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n"
                ]
            }
        ],
        "idx": 921,
        "ys": [
            "7 + 5 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7 7)\n",
            "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
            "13 - 6 = 7 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
            "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "7 + 5 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 5 10)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n",
                    "40 / 5 = 8 (left: 5 15 8)\n",
                    "5 * 10 = 50 (left: 15 50 8)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 5 10)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 10",
                "ys": [
                    "5 + 5 = 10 (left: 5 5 10)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 10 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n5 + 10 = 15 (left: 10 15 40)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n10 * 5 = 50 (left: 5 40 50)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n10 - 5 = 5 (left: 5 5 20)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n20 + 5 = 25 (left: 10 15 25)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n15 * 2 = 30 (left: 5 10 30)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 5 = 8 (left: 8 10 30)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n5 + 5 = 10 (left: 5 10 40)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n5 * 2 = 10 (left: 5 10 40)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n10 - 5 = 5 (left: 5 5 35)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n5 + 40 = 45 (left: 5 35 45)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n5 / 1 = 5 (left: 4 5 35)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n35 - 5 = 30 (left: 4 5 30)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n15 + 5 = 20 (left: 4 5 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n2.5 + 5 = 7.5 (left: 5 7.5 40)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n5 * 2.5 = 12.5 (left: 2.5 12.5 40)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n40 - 5 = 35 (left: 2.5 7.5 35)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n2.5 + 2.5 = 5 (left: 0 5 35)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n0 * 5 = 0 (left: 0 0 35)\n",
                    "5 / 2 = 2.5 (left: 2.5 5 40)\n35 / 5 = 7 (left: 0 7 7)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n5 + 15 = 20 (left: 15 20 40)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n15 - 5 = 10 (left: 10 15 40)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n15 - 10 = 5 (left: 5 15 8)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n8 + 5 = 13 (left: 5 15 13)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 10",
                "ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n4 + 5 = 9 (left: 5 9 15)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n5 * 4 = 20 (left: 1 9 15)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n1 + 15 = 16 (left: 4 10 16)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n4 * 5 = 20 (left: 1 10 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n10 / 2 = 5 (left: 1 5 10)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n10 - 1 = 9 (left: 1 4 9)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n1 + 10 = 11 (left: 4 9 11)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 - 5 = 0 (left: 0 5 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n10 / 2 = 5 (left: 0 5 5)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n10 + 15 = 25 (left: 15 20 25)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n15 - 5 = 10 (left: 10 20 25)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n20 / 2 = 10 (left: 10 15 25)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n10 * 2 = 20 (left: 15 20 25)\n",
                    "5 * 8 = 40 (left: 5 10 40)\n40 / 2 = 20 (left: 10 15 20)\n15 + 10 = 25 (left: 10 20 25)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n4 + 20 = 24 (left: 20 20 24)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 / 4 = 5 (left: 4 5 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n4 * 20 = 80 (left: 20 20 80)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 + 4 = 24 (left: 20 20 24)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n15 - 10 = 5 (left: 5 8 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n8 * 2.5 = 20 (left: 5 20 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n5 + 8 = 13 (left: 13 20 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n20 / 4 = 5 (left: 5 13 20)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 8 10",
                "ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n4 + 16 = 20 (left: 16 20 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n16 / 4 = 4 (left: 4 4 20)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n20 - 16 = 4 (left: 4 4 4)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n4 + 4 = 8 (left: 16 8 4)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n16 / 2 = 8 (left: 8 8 4)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n4 - 2 = 2 (left: 2 8 4)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n4 * 5 = 20 (left: 4 20 20)\n20 - 4 = 16 (left: 4 16 20)\n20 - 4 = 16 (left: 2 8 16)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 + 4 = 9 (left: 1 5 9)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 * 1 = 5 (left: 4 5 5)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 - 4 = 1 (left: 1 1 5)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n15 + 8 = 23 (left: 8 23 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n8 * 3 = 24 (left: 3 8 25)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n25 - 8 = 17 (left: 3 8 17)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n3 + 8 = 11 (left: 8 11 17)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n8 / 2 = 4 (left: 4 8 17)\n",
                    "5 + 10 = 15 (left: 5 15 40)\n40 / 5 = 8 (left: 10 15 8)\n10 + 15 = 25 (left: 15 8 25)\n17 - 4 = 13 (left: 8 4 13)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n5 + 10 = 15 (left: 10 15 25)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n10 * 5/2 = 12.5 (left: 5 12.5 25)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n25 - 5 = 20 (left: 5 10 20)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n5 * 10 = 50 (left: 10 20 50)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n10 + 5 = 15 (left: 5 15 50)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n20 / 2 = 10 (left: 5 10 50)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 10 25)\n50 - 25 = 25 (left: 5 10 25)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n"
                ]
            }
        ],
        "idx": 922,
        "ys": [
            "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
            "10 - 5 = 5 (left: 5 5 40)\n30 / 2 = 15 (left: 4 5 15)\n15 - 5 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
            "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
            "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
            "5 + 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n",
                    "6 * 2 = 12 (left: 2 4 12)\n",
                    "4 - 2 = 2 (left: 2 2 12)\n",
                    "12 / 4 = 3 (left: 1.5 2 3)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 12",
                "ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n2 + 6 = 8 (left: 6 8 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n12 - 2 = 10 (left: 4 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n6 - 2 = 4 (left: 2 4 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 6 10 12)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n6 * 2 = 12 (left: 4 6 12)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 4 6 8)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n6 / 2 = 3 (left: 3 4 8)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n4 + 3 = 7 (left: 1 3 7)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n3 * 2 = 6 (left: 1 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 12)\n6 - 1 = 5 (left: 1 5 6)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n2 + 4 = 6 (left: 4 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n12 - 4 = 8 (left: 2 4 8)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n2 + 12 = 14 (left: 4 8 14)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n4 - 2 = 2 (left: 2 2 8)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 * 6 = 12 (left: 4 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 + 2 = 6 (left: 2 6 6)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 12",
                "ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 12",
                "ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 6 4.5)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 * 1.5 = 4.5 (left: 6 4.5 4.5)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n6 - 3 = 3 (left: 1.5 3 3)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 / 1.5 = 2 (left: 1.5 2 3)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n1.5 + 2 = 3.5 (left: 2 3 3.5)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n2 * 1.5 = 3 (left: 3 3 3.5)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3.5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 923,
        "ys": [
            "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
            "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
            "4 * 2 = 8 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
            "2 + 6 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 7 8 11)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n",
                    "7 - 1 = 6 (left: 4 5 8)\n",
                    "5 * 2 = 10 (left: 4 8 10)\n",
                    "8 / 2 = 4 (left: 4 4 10)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n7 * 1.75 = 12.25 (left: 0.25 11 12)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n11 - 5 = 6 (left: 0.25 6 12)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n0.25 * 4 = 1 (left: 1 6 12)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n12 / 1.2 = 10 (left: 1 6 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n6 + 1 = 7 (left: 1 7 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 7 8 12)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7 35)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n3 + 7 = 10 (left: 7 10 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n8 - 1 = 7 (left: 7 11 15)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 - 7 = 4 (left: 4 7 15)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n7 * 2 = 14 (left: 4 11 14)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n8 - 6 = 2 (left: 2 11 14)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n11 - 8 = 3 (left: 2 3 14)\n",
                    "7 * 2 = 14 (left: 6 8 11)\n14 / 2 = 7 (left: 2 3 7)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n1 + 5 = 6 (left: 5 6 7)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n5 * 1 = 5 (left: 1 5 7)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n7 - 1 = 6 (left: 1 5 6)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n1 + 7 = 8 (left: 5 6 8)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n5 - 1 = 4 (left: 1 4 6)\n",
                    "11 - 6 = 5 (left: 1 5 7)\n6 - 5 = 1 (left: 1 1 4)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 11",
                "ys": [
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n8 + 11 = 19 (left: 11 11 19)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 - 1 = 10 (left: 8 10 11)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 / 1 = 11 (left: 8 8 11)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n8 + 1 = 9 (left: 9 11 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 7 10 21)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n7 + 21 = 28 (left: 21 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n21 - 7 = 14 (left: 14 7)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n7 * 3 = 21 (left: 14 21)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n21 / 3 = 7 (left: 7 7)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n4 + 8 = 12 (left: 8 11 12)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n8 - 4 = 4 (left: 4 11 12)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n11 - 8 = 3 (left: 3 4 12)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n8 + 7.33 = 15.33 (left: 7.33 11 15.33)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n7.33 * 2 = 14.66 (left: 11 14.66 15.33)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n11 - 7.33 = 3.67 (left: 3.67 14.66 15.33)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n14.66 / 2 = 7.33 (left: 3.67 7.33 15.33)\n",
                    "6 + 7 = 13 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n15.33 + 3.67 = 19 (left: 7.33 11 19)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ]
            }
        ],
        "idx": 924,
        "ys": [
            "1 + 7 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
            "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
            "8 - 1 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 9 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 7 9 13)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n",
                    "3 * 4 = 12 (left: 3 9 5)\n",
                    "9 - 3 = 6 (left: 3 6 5)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 9 9 13",
                "ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n"
                ],
                "new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "9 / 3 = 3 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 7 10 21)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 7 10 21)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n7 + 9 = 16 (left: 9 13 16)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n13 - 7 = 6 (left: 3 6 9)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 - 3 = 6 (left: 3 6 6)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 9 9 13",
                "ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n"
                ],
                "new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    20.0,
                    0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 9 9 13",
                "ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n"
                ],
                "new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9 13)\n",
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n3 + 9 = 12 (left: 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 9 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 4 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n13 + 27 = 40 (left: 27)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n27 / 3 = 9 (left: 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n13 * 2 = 26 (left: 9 26)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n9 - 1 = 8 (left: 8 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n13 - 9 = 4 (left: 4 8)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    20.0,
                    0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
                    "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n"
                ]
            }
        ],
        "idx": 925,
        "ys": [
            "7 + 6 = 13 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
            "9 - 2 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "7 * 1 = 7 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n",
            "6 + 9 = 15 (left: 7 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 6 9 12)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 12",
                "ys": [
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n"
                ],
                "new_ys": [
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n4.5 + 9 = 13.5 (left: 9 12 13.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n9 / 1.5 = 6 (left: 3.5 6 12)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n12 - 4.5 = 7.5 (left: 3.5 6 7.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n6 * 1.5 = 9 (left: 3.5 7.5 9)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n7.5 - 3.5 = 4 (left: 4 6 9)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n6 + 9 = 15 (left: 9 12 15)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n6 * 2 = 12 (left: 3 9 12)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n9 + 3 = 12 (left: 3 6 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n6 + 9 = 15 (left: 9 12 15)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n6 * 2 = 12 (left: 3 9 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n9 + 3 = 12 (left: 3 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n6 * 2 = 12 (left: 4 9 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n6 / 2 = 3 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 12",
                "ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n6 + 5 = 11 (left: 5 11 13)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 * 2 = 10 (left: 10 11 13)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 + 1 = 6 (left: 6 8 11)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 7.5 = 13.5 (left: 7.5 9.5 13.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n9.5 - 6 = 3.5 (left: 6 3.5 15)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 - 7.5 = 7.5 (left: 3.5 7.5 15.5)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "3 + 6 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n4 + 6 = 10 (left: 6 5 10)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n6 * 4/2 = 6 (left: 2 5 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n5 - 4 = 1 (left: 2 1 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n2 * 6 = 12 (left: 1 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n6 + 1 = 7 (left: 1 7 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n1 + 5 = 6 (left: 6 7 12)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    0.001,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 6 9 12",
                "ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n3.5 + 5 = 8.5 (left: 5 8.5 15.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n5 * 3.5 = 17.5 (left: 3.5 15.5 17.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n15.5 - 5 = 10.5 (left: 3.5 5 10.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n3.5 + 5 = 8.5 (left: 5 8.5 10.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n5 / 1.5 = 3.33 (left: 0.67 3.33 10.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n10.5 - 3.5 = 7 (left: 0.67 3.33 7)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n7 * 1.75 = 12.25 (left: 0.67 3.33 12.25)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n6 + 9.5 = 15.5 (left: 9.5 15.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n9.5 - 2 = 7.5 (left: 6 7.5 15)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n15 / 3 = 5 (left: 1.5 5 7.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n1.5 + 6 = 7.5 (left: 5 7.5 7.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n5 * 9.5 = 47.5 (left: 7.5 15 47.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n7.5 * 2 = 15 (left: 6 9.5 15)\n7.5 - 1.5 = 6 (left: 6 6 47.5)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n3.5 + 15.5 = 19 (left: 15.5 19)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n15.5 / 3.5 = 4.43 (left: 1.07 4.43 19)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n6 + 9.5 = 15.5 (left: 3.5 15.5)\n19 - 15.5 = 3.5 (left: 1.07 3.5 4.43)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n3.5 + 5 = 8.5 (left: 5 8.5 15.5)\n"
                ]
            }
        ],
        "idx": 926,
        "ys": [
            "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
            "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
            "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
            "12 / 3 = 4 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
            "6 * 3/2 = 4.5 (left: 4.5 9 12)\n3.5 + 6 = 9.5 (left: 6 7.5 9.5)\n15 / 3 = 5 (left: 3.5 5 15.5)\n3.5 + 5 = 8.5 (left: 5 8.5 15.5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 9 12 13)\n",
                    "9 / 3 = 3 (left: 3 6 12)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n",
                    "3 * 2 = 6 (left: 6 9 9)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n",
                    "6 - 1 = 5 (left: 1 5 6)\n"
                ],
                "values": [
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 12 13",
                "ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n9 + 12 = 21 (left: 12 13 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n9 * 2 = 18 (left: 12 13 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 + 1 = 13 (left: 9 13 13)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "13 - 6 = 7 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 1 6)\n",
                    "6 / 1 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 12 13",
                "ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 * 1 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 * 2 = 12 (left: 12 14 8)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 + 6 = 18 (left: 14 14 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 9 9 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9 27)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 + 4 = 13 (left: 4 9 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n12 * 3/2 = 18 (left: 9 12 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n12 - 9 = 3 (left: 3 9 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n18 + 3 = 21 (left: 9 12 21)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    20.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 12 13",
                "ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 * 3 = 36 (left: 9 12 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n21 - 12 = 9 (left: 3 6 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n3 + 6 = 9 (left: 6 9 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n6 * 2 = 12 (left: 4 6 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 - 4 = 5 (left: 1 4 5)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 / 1 = 9 (left: 4 5 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 4 = 13 (left: 1 5 13)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n5 * 2 = 10 (left: 1 5 10)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n5 - 1 = 4 (left: 0 4 10)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n10 / 2 = 5 (left: 0 4 5)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n3 + 3 = 6 (left: 3 6 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n18 - 3 = 15 (left: 3 9 15)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n3 / 1 = 3 (left: 1 3 9)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n9 + 3 = 12 (left: 3 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 18)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n"
                ]
            }
        ],
        "idx": 927,
        "ys": [
            "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
            "6 + 9 = 15 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
            "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
            "9 + 3 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
            "9 + 3 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 7 = 10 (left: 1 7 13)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n",
                    "7 - 1 = 6 (left: 2 3 13)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n",
                    "2 + 1 = 3 (left: 1 3 4)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 4 = 5 (left: 3 7 13)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n",
                    "3 7 = 10 (left: 1 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 9 13",
                "ys": [
                    "1 + 4 = 5 (left: 3 7 13)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n",
                    "3 7 = 10 (left: 1 7 13)\n"
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 3 7 13)\n3 + 7 = 10 (left: 7 10 13)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n7 * 3 = 21 (left: 3 13 21)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n13 - 3 = 10 (left: 3 7 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n7 + 3 = 10 (left: 3 10 10)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 2 4 6)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 4 = 6 (left: 3 3 6)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 2 = 3 (left: 2 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 + 4 = 6 (left: 1 6)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n1 + 2 = 3 (left: 2 4)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 1 3)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n",
                    "4 / 1 = 4 (left: 1 2 4)\n2 + 4 = 6 (left: 1 6)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n",
                    "3 7 = 10 (left: 1 7 13)\n7 * 1 = 7 (left: 1 7 13)\n",
                    "3 7 = 10 (left: 1 7 13)\n13 - 7 = 6 (left: 1 6 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    1.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n7 + 8 = 15 (left: 8 13 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n8 - 1 = 7 (left: 7 13 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n13 - 7 = 6 (left: 8 6 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n8 / 2 = 4 (left: 4 6 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n6 + 4 = 10 (left: 4 10 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n4 * 3 = 12 (left: 12 10 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n10 - 4 = 6 (left: 12 6 15)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n0.43 + 7 = 7.43 (left: 7 7.43 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 * 1.43 = 10.01 (left: 3.57 7.43 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n6.57 + 3.57 = 10.14 (left: 0 6.57 10.14)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n6.57 - 0 = 6.57 (left: 0 6.57 10.14)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10.14 / 1.43 = 7.04 (left: 0 6.57 7.04)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n1 + 4 = 5 (left: 3 5)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n3 * 1 = 3 (left: 1 4 3)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n4 - 1 = 3 (left: 1 3 3)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n1 / 1 = 1 (left: 1 3 2)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n3 + 1 = 4 (left: 1 3 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n1 * 4 = 4 (left: 3 4 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n3 - 1 = 2 (left: 1 2 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n2 * 1 = 2 (left: 1 4)\n4 / 1 = 4 (left: 1 2 4)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n2 * 5/2 = 5 (left: 3 5)\n",
                    "3 * 1 = 3 (left: 1 2 4)\n1 + 4 = 5 (left: 2 5)\n5 - 2 = 3 (left: 3 3)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 1 7 20)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 1 5 3)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n3 * 4 = 12 (left: 1 4 12)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 - 1 = 3 (left: 1 3 12)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n5 * 3 = 15 (left: 3 6 15)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 2 3 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 / 1 = 3 (left: 1 3 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n12 + 5 = 17 (left: 5 6 17)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n5 * 6 = 30 (left: 6 12 30)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n6 - 2 = 4 (left: 4 5 12)\n",
                    "3 7 = 10 (left: 1 7 13)\n1 + 7 = 8 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n5 - 1 = 4 (left: 4 6 4)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n3.57 + 6.57 = 10.14 (left: 6.57 10.14 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n6.57 / 1.71 = 3.86 (left: 3.86 6.57 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n10 - 3.57 = 6.43 (left: 3.86 6.43 6.57)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n6.57 + 3.86 = 10.43 (left: 3.86 6.57 10)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n1.71 * 6.57 = 11.17 (left: 3.86 6.57 11.17)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n6.57 - 3.86 = 2.71 (left: 2.71 3.86 6.57)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n6.57 / 0.57 = 11.58 (left: 2.71 6.57 11.58)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n7 - 0.43 = 6.57 (left: 3.57 6.57 10)\n10 - 1.71 = 8.29 (left: 2.71 6.57 8.29)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n3.57 + 6.57 = 10.14 (left: 6.57 5 10.14)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n6.57 / 1.71 = 3.83 (left: 3.83 5 10.14)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n10.14 - 3.83 = 6.31 (left: 3.83 5 6.31)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n5 * 1.71 = 8.55 (left: 3.83 8.55 6.31)\n",
                    "1 + 4 = 5 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n10 / 2 = 5 (left: 3.57 6.57 5)\n6.31 + 3.83 = 10.14 (left: 3.83 5 10.14)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 1 7 20)\n"
                ]
            }
        ],
        "idx": 928,
        "ys": [
            "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 1 7 20)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "12 / 3 = 4 (left: 5 6 4)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n",
                    "5 * 2 = 10 (left: 8 4 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n"
                ],
                "values": [
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 12",
                "ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n6 * 5/2 = 15 (left: 1 7 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 1 6 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n1 + 6 = 7 (left: 6 7 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n6 / 3 = 2 (left: 1 2 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n15 - 7 = 8 (left: 1 2 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 2 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n4 * 3/2 = 6 (left: 1 6 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n1 + 10 = 11 (left: 4 7 11)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n4 * 7 = 28 (left: 1 11 28)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n1 + 7 = 8 (left: 4 8 28)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n4 - 1 = 3 (left: 1 3 28)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n5 + 8 = 13 (left: 8 4 13)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n8 - 5 = 3 (left: 3 4 8)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n8 / 2 = 4 (left: 3 4 4)\n",
                    "6 + 5 = 11 (left: 5 8 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n8 * 2 = 16 (left: 4 12 16)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n8 / 2 = 4 (left: 2 4 6)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n5 + 8 = 13 (left: 8 12 13)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n",
                    "6 * 2 = 12 (left: 5 8 12)\n12 / 2 = 6 (left: 3 4 8)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 12",
                "ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "8 - 5 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 12",
                "ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 * 2 = 10 (left: 10 7 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n7 - 1 = 6 (left: 5 6 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 * 2 = 12 (left: 4 12 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 + 6 = 10 (left: 8 8 10)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            }
        ],
        "idx": 929,
        "ys": [
            "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
            "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
            "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
            "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
            "8 - 1 = 7 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n",
                    "6 * 2 = 12 (left: 2 4 12)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 2 6 8)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 7",
                "ys": [
                    "4 * 2 = 8 (left: 2 6 8)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6 6)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n4 * 2 = 8 (left: 2 4 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 2 4 6)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n6 * 2 = 12 (left: 4 9 12)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 - 4 = 5 (left: 4 6 5)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n6 / 2 = 3 (left: 3 4 5)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n2 + 6 = 8 (left: 6 8 11)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n6 * 2 = 12 (left: 2 6 11)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n2 + 11 = 13 (left: 6 9 13)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n6 / 2 = 3 (left: 1.5 3 9)\n",
                    "4 + 7 = 11 (left: 2 6 11)\n9 - 6 = 3 (left: 1.5 3 3)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 7",
                "ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n6 + 5 = 11 (left: 5 11 13)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 * 2 = 10 (left: 10 11 13)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n5 + 1 = 6 (left: 6 8 11)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n2 + 12 = 14 (left: 12 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n12 / 2 = 6 (left: 6 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\n3 * 2 = 6 (left: 6 3)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 6)\nFinal problem:\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 7",
                "ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n"
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5 3)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 0 12)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n0 * 6 = 0 (left: 0 6)\n",
                    "4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12 8)\n8 - 2 = 6 (left: 6 6)\n6 - 0 = 6 (left: 0 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
                    "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n"
                ]
            }
        ],
        "idx": 930,
        "ys": [
            "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n11 - 6 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
            "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
            "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 8 11 13)\n",
            "2 + 7 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 10 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n",
                    "8 + 2 = 10 (left: 2 3 10)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 10 10",
                "ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n"
                ],
                "new_ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 - 2 = 3 (left: 2 3 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 2 3 5)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n2 + 10 = 12 (left: 3 5 12)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n3 * 5 = 15 (left: 3 5 15)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 - 3 = 2 (left: 2 3 2)\n",
                    "1 5 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n7 * 2 = 14 (left: 2 14 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n2 + 10 = 12 (left: 7 12 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n7 / 1 = 7 (left: 1 7 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n8 - 1 = 7 (left: 1 7 7)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n7 * 2 = 14 (left: 2 14 10)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n2 + 10 = 12 (left: 7 12 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n7 / 1 = 7 (left: 1 7 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n8 - 1 = 7 (left: 1 7 7)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n8 - 2 = 6 (left: 2 5 6)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 10 6)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n5 + 8 = 13 (left: 8 13 20)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n8 * 2 = 16 (left: 5 16 20)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n20 - 5 = 15 (left: 5 8 15)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n5 * 4 = 20 (left: 8 12 20)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n8 + 5 = 13 (left: 3 13 20)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n20 / 2 = 10 (left: 8 10 10)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n8 - 1 = 7 (left: 1 7 10)\n",
                    "2 * 10 = 20 (left: 5 8 20)\n10 - 7 = 3 (left: 1 3 7)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 10 10",
                "ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n"
                ],
                "new_ys": [
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 - 2 = 3 (left: 2 3 10)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 2 3 5)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n2 + 10 = 12 (left: 3 5 12)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n3 * 5 = 15 (left: 3 5 15)\n",
                    "2 * 5 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 - 3 = 2 (left: 2 3 2)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 7 8 12)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7 35)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n3 + 7 = 10 (left: 7 10 7)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 7 8)\n7 - 3 = 4 (left: 4 7 21)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n2 + 10 = 12 (left: 10 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n8 - 2 = 6 (left: 2 5 6)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n2 * 5 = 10 (left: 5 6 10)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n5 + 2 = 7 (left: 2 5 7)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n5 / 2 = 2.5 (left: 1.25 2.5 5)\n",
                    "10 - 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 10 8)\n5 - 2 = 3 (left: 1.25 3 5)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 10 10",
                "ys": [
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n"
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n"
                ]
            }
        ],
        "idx": 931,
        "ys": [
            "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
            "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
            "5 + 2 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
            "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
            "1 5 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 6 7)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n",
                    "6 + 2 = 8 (left: 4 5 8)\n",
                    "5 * 2 = 10 (left: 4 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 7 12",
                "ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n"
                ],
                "new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n6 + 6 = 12 (left: 6 6 7)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n6 * 7 = 42 (left: 6 7 42)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6 42)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n6 / 2 = 3 (left: 1 3 42)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n1 + 42 = 43 (left: 3 42 43)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n42 - 1 = 41 (left: 3 41 42)\n",
                    "6 + 6 = 12 (left: 6 6 7)\n3 * 14 = 42 (left: 3 42 42)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "6 - 2 = 4 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n4 + 5 = 9 (left: 5 6 9)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n5 * 4 = 20 (left: 6 9 20)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n6 - 4 = 2 (left: 1 5 20)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n5 - 1 = 4 (left: 2 4 20)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n20 / 4 = 5 (left: 2 4 5)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n5 + 2 = 7 (left: 3 5 20)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n20 - 5 = 15 (left: 3 5 15)\n",
                    "7 - 1 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 7 12",
                "ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ],
                "new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 - 2 = 6 (left: 4 10 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 6 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n2 + 10 = 12 (left: 8 10 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 6 = 4 (left: 2 4 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 9 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 14 = 20 (left: 12 12 20)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 - 6 = 6 (left: 0 6 6)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0
                ],
                "select_new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 7 12",
                "ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ],
                "new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 10 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n2 * 10 = 20 (left: 5 12 20)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n10 - 2 = 8 (left: 3 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 / 2 = 6 (left: 3 6 8)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 9 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 14 = 20 (left: 12 12 20)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 - 6 = 6 (left: 0 6 6)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0
                ],
                "select_new_ys": [
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n"
                ]
            }
        ],
        "idx": 932,
        "ys": [
            "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
            "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
            "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
            "6 * 7 = 42 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
            "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 6 9 11)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 9 11",
                "ys": [
                    "9 / 3 = 3 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n6 + 9 = 15 (left: 9 11 15)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n9 - 3 = 6 (left: 6 9 11)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n9 / 3 = 3 (left: 3 6 10)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n11 + 1 = 12 (left: 3 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 3 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n6 / 2 = 3 (left: 3 3 6)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n6 * 3 = 18 (left: 3 6 18)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 9 15)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n9 - 3 = 6 (left: 3 6 15)\n",
                    "9 * 1 = 9 (left: 6 9 9)\n15 - 9 = 6 (left: 3 6 6)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n6 + 9 = 15 (left: 9 11 15)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n9 - 3 = 6 (left: 6 9 11)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n9 / 3 = 3 (left: 3 6 10)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 + 1 = 12 (left: 3 6 12)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    20.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 9 11",
                "ys": [
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "5 + 9 = 14 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n8 - 2 = 6 (left: 4 10 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 6 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n2 + 10 = 12 (left: 8 10 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n10 - 6 = 4 (left: 2 4 8)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 + 6 = 15 (left: 3 15)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 9 = 27 (left: 9 27)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 9 11",
                "ys": [
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 10 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n2 * 10 = 20 (left: 5 12 20)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n10 - 2 = 8 (left: 3 8 10)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 / 2 = 6 (left: 3 6 8)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 9 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 14 = 20 (left: 12 12 20)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 - 6 = 6 (left: 0 6 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n"
                ]
            }
        ],
        "idx": 933,
        "ys": [
            "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
            "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
            "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
            "9 - 6 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
            "9 + 2 = 11 (left: 6 9 11)\n11 - 1 = 10 (left: 6 8 10)\n6 * 2 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 5 8 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 8 11 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n",
                    "5 * 2 = 10 (left: 3 6 10)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n",
                    "10 - 3 = 7 (left: 3 5 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 11 12",
                "ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 0.5 5 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n0.5 + 5 = 5.5 (left: 5.5 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5.5 * 9/3 = 15 (left: 5 6 15)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 5)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n6 - 1 = 5 (left: 1 4 5)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n8 + 11 = 19 (left: 11 12 19)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n11 - 8 = 3 (left: 3 12 19)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n12 / 2 = 6 (left: 6 12 19)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n12 - 6 = 6 (left: 6 6 19)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n6 * 3 = 18 (left: 6 12 18)\n",
                    "5 + 8 = 13 (left: 8 11 12)\n12 + 8 = 20 (left: 11 12 20)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 11 12 14)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 / 3 = 3.67 (left: 3.33 12 14)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 3 = 9 (left: 8.67 11 14)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 3.67 8 9)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n3 * 12 = 36 (left: 8.67 11 36)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 / 3 = 4 (left: 3.67 8 11)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 3.67 4 8)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n3 + 5 = 8 (left: 5 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 3 12 15)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n12 - 3 = 9 (left: 3 5 9)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n3 * 5 = 15 (left: 5 12 15)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n5 + 3 = 8 (left: 2 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 1 4 5)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 1 4 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 11 12",
                "ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n4 + 6 = 10 (left: 6 6 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n6 * 2 = 12 (left: 4 6 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n6 - 2 = 4 (left: 4 4 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n0.5 * 5 = 2.5 (left: 2.5 8)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n5 + 0.5 = 5.5 (left: 2.5 5.5 8)\n",
                    "6 + 3 = 9 (left: 3 5 9)\n5 * 3/2 = 7.5 (left: 0.5 5 8)\n8 / 2.5 = 3.2 (left: 2.5 3.2 5.5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 11 12",
                "ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n9 / 3 = 3 (left: 3 5 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 1 = 7 (left: 3 5 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n5 + 3 = 8 (left: 3 8 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
                ]
            }
        ],
        "idx": 934,
        "ys": [
            "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
            "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
            "12 / 2 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
            "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
            "12 / 2 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 8 10)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n",
                    "1 + 8 = 9 (left: 3 4 9)\n",
                    "3 * 2 = 6 (left: 1 4 6)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n",
                    "1 + 10 = 11 (left: 6 9 11)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 10",
                "ys": [
                    "5 + 6 = 11 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "5 + 6 = 11 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "5 + 6 = 11 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n1 + 8 = 9 (left: 8 9 10)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n8 - 1 = 7 (left: 7 8 10)\n",
                    "6 * 5/2 = 15 (left: 1 8 10)\n10 - 8 = 2 (left: 1 7 2)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n1 + 3 = 4 (left: 3 4 10)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 3 7)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n1 + 10 = 11 (left: 3 11 7)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n3 / 1 = 3 (left: 1 3 4)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n1 * 3 = 3 (left: 3 6 3)\n",
                    "8 - 5 = 3 (left: 1 3 10)\n3 + 1 = 4 (left: 1 4 3)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n1 + 3 = 4 (left: 3 4)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n3 * 1 = 3 (left: 1 4 3)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n4 - 1 = 3 (left: 1 3 3)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n1 + 4 = 5 (left: 3 5 3)\n",
                    "10 - 6 = 4 (left: 1 3 4)\n3 / 1 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 10",
                "ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 1 6)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 10",
                "ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n3 * 8 = 24 (left: 9 15 24)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 7 8 12)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7 35)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n3 + 7 = 10 (left: 7 10 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 - 3 = 4 (left: 4 7 21)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ]
            }
        ],
        "idx": 935,
        "ys": [
            "4 + 5 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
            "4 + 5 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 12 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n6 * 5/2 = 15 (left: 1 7 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n7 - 5 = 2 (left: 1 6 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n1 + 6 = 7 (left: 6 7 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n6 / 3 = 2 (left: 1 2 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n15 - 7 = 8 (left: 1 2 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n1 * 2 = 2 (left: 2 2 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n11 + 12 = 23 (left: 12 13 23)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n13 - 2 = 11 (left: 11 11 23)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n5 + 12 = 17 (left: 12 13 17)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n12 - 5 = 7 (left: 5 7 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n13 / 1 = 13 (left: 5 7 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n5 * 2 = 10 (left: 10 7 13)\n",
                    "11 - 6 = 5 (left: 5 12 13)\n7 + 5 = 12 (left: 5 12 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n5 + 7 = 12 (left: 7 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n7 * 1.75 = 12.25 (left: 0.25 13)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n13 - 5 = 8 (left: 0.25 7 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n0.25 * 4 = 1 (left: 3 7 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n7 / 2 = 3.5 (left: 3 3.5 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n8 - 3.5 = 4.5 (left: 3 3.5 4.5)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    20.0,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n11 + 13 = 24 (left: 13 23 24)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n13 - 11 = 2 (left: 2 23 24)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n23 - 13 = 10 (left: 2 10 24)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n2 * 11 = 22 (left: 10 22 24)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n12 - 1 = 11 (left: 11 13 23)\n24 / 2 = 12 (left: 10 12 22)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 2 9 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n2 * 11 = 22 (left: 11 11 22)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 + 2 = 13 (left: 9 11 13)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n10 / 2 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 11 12 13",
                "ys": [
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n"
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 2 9 11)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n2 * 11 = 22 (left: 11 11 22)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n11 + 2 = 13 (left: 9 11 13)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "12 - 5 = 7 (left: 5 7 13)\n3 + 7 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 16)\n"
                ],
                "values": [
                    1.0,
                    20.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 11)\n",
                    "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            }
        ],
        "idx": 936,
        "ys": [
            "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n",
            "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
            "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
            "6 + 11 = 17 (left: 11 12 13)\n23 / 11 = 2 (left: 2 11 11)\n11 / 1 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 11)\n",
            "13 - 7 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 8",
                "ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n8 - 2 = 6 (left: 2 4 6)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 - 2 = 2 (left: 2 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 2 = 6 (left: 6 4 4)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\nFinal problem:\n",
                    "8 / 2 = 4 (left: 4 4 6)\n4 + 4 = 8 (left: 4 8 6)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n4 / 1 = 4 (left: 1 4 4)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n4 + 2 = 6 (left: 1 4 6)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n1 * 4 = 4 (left: 4 4 6)\n",
                    "8 / 2 = 4 (left: 4 4 6)\n4 - 1 = 3 (left: 1 3 4)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 8",
                "ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 - 2 = 2 (left: 2 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 2 = 6 (left: 8 6)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "2 * 8 = 16 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 8 8",
                "ys": [
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 8 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n3 + 4 = 7 (left: 8 7)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n4 / 2 = 2 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 8 14)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 6)\n"
                ]
            }
        ],
        "idx": 937,
        "ys": [
            "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
            "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
            "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 8 14)\n",
            "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 2 = 6 (left: 6 8)\n",
            "8 - 2 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 7 9 12 13)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n",
                    "2 * 13 = 26 (left: 7 9 12 26)\n",
                    "12 / 2 = 6 (left: 2 6 6 26)\n",
                    "26 - 13 = 13 (left: 2 6 6 13)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 12 13",
                "ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n"
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n2 + 6 = 8 (left: 6 8 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n6 * 2 = 12 (left: 2 12 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n9 - 7 = 2 (left: 2 12 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n12 / 3 = 4 (left: 2 4 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n13 - 2 = 11 (left: 4 9 11)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n9 + 4 = 13 (left: 4 12 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n12 - 4 = 8 (left: 4 8 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n13 / 1 = 13 (left: 4 8 13)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n2 + 7 = 9 (left: 7 9 12 14)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n7 * 2 = 14 (left: 2 9 12 14)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n12 - 2 = 10 (left: 2 7 10 14)\n",
                    "7 * 2 = 14 (left: 2 7 12 14)\n14 / 2 = 7 (left: 2 7 7 10)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n2 + 7 = 9 (left: 7 9 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n7 * 2 = 14 (left: 2 9 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n9 - 2 = 7 (left: 2 7 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n10 + 2 = 12 (left: 2 7 12)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n2 * 7 = 14 (left: 7 12 14)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n7 - 2 = 5 (left: 2 5 12)\n",
                    "12 - 2 = 10 (left: 2 7 10 14)\n12 - 7 = 5 (left: 2 5 5)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 7 = 9 (left: 6 8 9)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n6 / 2 = 3 (left: 1.5 3 9)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n7 * 2 = 14 (left: 1.5 3 14)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\nFinal problem:\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n2 + 6 = 8 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "13 - 7 = 6 (left: 2 6 10 7)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n9 + 12 = 21 (left: 12 13 21)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n13 - 1 = 12 (left: 9 12 12)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n9 * 2 = 18 (left: 12 13 18)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 + 1 = 13 (left: 9 13 13)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 7 12 13",
                "ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n"
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 9 9 13)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 * 3 = 27 (left: 9 13 27)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9 27)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 / 1 = 9 (left: 4 9 9)\n",
                    "2 + 7 = 9 (left: 7 9 12 13)\n7 + 9 = 16 (left: 9 12 13)\n12 - 3 = 9 (left: 9 9 13)\n9 + 4 = 13 (left: 4 9 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n"
                ]
            }
        ],
        "idx": 938,
        "ys": [
            "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
            "7 + 2 = 9 (left: 2 6 9 7)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
            "7 + 2 = 9 (left: 2 6 9 7)\n7 / 1 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n",
                    "4 * 3 = 12 (left: 1 4 12)\n",
                    "1 + 12 = 13 (left: 4 6 13)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 12",
                "ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n12 - 2 = 10 (left: 4 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 2 4 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n8 * 2 = 16 (left: 4 12 16)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n8 / 2 = 4 (left: 2 4 6)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n2 + 4 = 6 (left: 4 6 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n12 - 4 = 8 (left: 2 4 8)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n2 + 12 = 14 (left: 4 8 14)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n4 - 2 = 2 (left: 2 2 8)\n",
                    "6 - 2 = 4 (left: 2 4 12)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 * 6 = 12 (left: 4 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 + 2 = 6 (left: 2 6 6)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n4 + 6 = 10 (left: 6 10 14)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n6 * 2 = 12 (left: 4 12 14)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n14 - 4 = 10 (left: 4 6 10)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n4 * 3 = 12 (left: 6 12 14)\n",
                    "2 + 12 = 14 (left: 4 6 14)\n6 + 4 = 10 (left: 4 10 14)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 12",
                "ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 + 6 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 8 12",
                "ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 6 4.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 * 1.5 = 4.5 (left: 6 4.5 4.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n6 - 3 = 3 (left: 1.5 3 3)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 / 1.5 = 2 (left: 1.5 2 3)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n1.5 + 2 = 3.5 (left: 2 3 3.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n2 * 1.5 = 3 (left: 3 3 3.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n3 * 0.5 = 1.5 (left: 1.5 4 4.5)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5 4)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n4 / 1 = 4 (left: 1.5 2.5 4)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
                ]
            }
        ],
        "idx": 939,
        "ys": [
            "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
            "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
            "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
            "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
            "6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 9 13)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n",
                    "1 * 13 = 13 (left: 4 10 13)\n",
                    "4 + 1 = 5 (left: 1 5 13)\n",
                    "13 - 4 = 9 (left: 1 5 9)\n"
                ],
                "values": [
                    0,
                    0.001,
                    20.0,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 4 = 5 (left: 4 6 13)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n4 * 1 = 4 (left: 1 6 13)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n6 - 1 = 5 (left: 4 5 13)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n13 - 4 = 9 (left: 1 5 9)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n6 * 2 = 12 (left: 1 4 12)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n9 - 1 = 8 (left: 1 4 8)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 13 = 14 (left: 4 8 14)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n6 / 1 = 6 (left: 1 3 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n10 - 1 = 9 (left: 3 4 9)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n1 6 = 7 (left: 7 9 13)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n6 + 1 = 7 (left: 1 7 13)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n13 - 6 = 7 (left: 1 1 7)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n1 * 9 = 9 (left: 6 7 9)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 + 1 = 10 (left: 1 6 10)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n13 - 9 = 4 (left: 1 1 4)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 1 4)\n",
                    "13 - 9 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n4 + 9 = 13 (left: 9 13)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n9 / 1.5 = 6 (left: 6 13)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n13 - 4 = 9 (left: 4 6 9)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n4 * 3 = 12 (left: 6 9 12)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "3 + 4 = 7 (left: 4 9 13)\n6 + 3 = 9 (left: 3 9 9)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n4 + 7 = 11 (left: 7 9 11)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n7 * 4 = 28 (left: 9 11 28)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 - 4 = 5 (left: 5 7 28)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n7 - 1 = 6 (left: 5 6 28)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "4 * 3/2 = 6 (left: 1 6 9 13)\n9 - 1 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 4 = 5 (left: 4 5 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n1 + 10 = 11 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n1 * 4 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
                    "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n"
                ]
            }
        ],
        "idx": 940,
        "ys": [
            "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
            "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n5 - 1 = 4 (left: 4 6 8)\n",
            "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 * 1 = 6 (left: 4 6 6)\n",
            "9 - 3 = 6 (left: 1 4 6 13)\n1 + 6 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 / 2 = 3 (left: 3 4 6)\n",
            "9 + 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n4 * 1 = 4 (left: 1 4 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 9 10 12)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n",
                    "10 - 4 = 6 (left: 4 5 6 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n",
                    "5 + 1 = 6 (left: 1 3 6 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 1 3 5 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 12",
                "ys": [
                    "12 / 4 = 3 (left: 1 3 5 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n3 * 1 = 3 (left: 1 5 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 12)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n3 * 1 = 3 (left: 1 3 12)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n12 - 3 = 9 (left: 1 3 9)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n6 - 3 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n4 + 1 = 5 (left: 1 5 12)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n12 - 1 = 11 (left: 1 5 11)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 * 4 = 4 (left: 4 12 5)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n12 / 4 = 3 (left: 3 4 5)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n6 + 1 = 7 (left: 4 5 7)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n5 - 1 = 4 (left: 4 4 7)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n4 * 1 = 4 (left: 4 7 4)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n1 + 4 = 5 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n4 * 1 = 4 (left: 1 4 6)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n6 - 1 = 5 (left: 4 5 5)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n1 + 6 = 7 (left: 4 5 7)\n",
                    "12 - 6 = 6 (left: 1 4 6 6)\n4 + 6 = 10 (left: 5 10 10)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n4 + 10 = 14 (left: 10 10 12)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n10 / 2 = 5 (left: 4 5 12)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 - 4 = 8 (left: 10 10 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n10 * 1 = 10 (left: 4 10 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n10 + 2 = 12 (left: 4 12 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n8 - 2 = 6 (left: 4 6 4)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 12",
                "ys": [
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "5 * 2 = 10 (left: 4 10 10 12)\n12 / 3 = 4 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n5 * 3 = 15 (left: 3 6 15)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n6 - 3 = 3 (left: 2 3 5)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 / 1 = 3 (left: 1 3 5)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 7)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 7)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n4 - 1 = 3 (left: 1 3 7)\n",
                    "6 * 2 = 12 (left: 1 3 12 6)\n1 + 3 = 4 (left: 3 4 6)\n7 - 4 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n5 + 12 = 17 (left: 12 17 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n12 / 3 = 4 (left: 4 12 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n12 - 4 = 8 (left: 8 12 4)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n4 + 5 = 9 (left: 9 12 4)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n12 / 3 = 4 (left: 4 9 4)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 10 12",
                "ys": [
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 + 4 = 16 (left: 8 12 16)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 * 1 = 12 (left: 4 4 12)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n4 + 12 = 16 (left: 8 12 16)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n4 * 3 = 12 (left: 12 12 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n3 * 8 = 24 (left: 9 15 24)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n"
                ],
                "values": [
                    0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 + 4 = 16 (left: 8 12 16)\n"
                ]
            }
        ],
        "idx": 941,
        "ys": [
            "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
            "12 / 4 = 3 (left: 1 3 5 6)\n1 + 3 = 4 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
            "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
            "12 / 4 = 3 (left: 1 3 5 6)\n5 - 1 = 4 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
            "1 + 3 = 4 (left: 1 4 12 6)\n1 4 = 5 (left: 5 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 + 4 = 16 (left: 8 12 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 7 11)\n",
                    "2 * 1 = 2 (left: 1 7 11)\n",
                    "7 - 1 = 6 (left: 2 6 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n",
                    "1 + 7 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n",
                    "11 / 1 = 11 (left: 2 7 11)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 11",
                "ys": [
                    "1 + 7 = 8 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 7 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 7 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n2 + 7 = 9 (left: 7 9 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n11 - 2 = 9 (left: 2 7 9)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n2 + 11 = 13 (left: 7 13 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n1 + 12 = 13 (left: 12 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n12 / 1 = 12 (left: 1 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n8 - 1 = 7 (left: 1 12 7)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n7 * 2 = 14 (left: 7 14)\n",
                    "8 - 1 = 7 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 5 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n6 + 2 = 8 (left: 5 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 1 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 * 2 = 10 (left: 5 10)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 / 3 = 2 (left: 2 5)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n"
                ]
            }
        ],
        "idx": 942,
        "ys": [
            "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
            "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
            "1 + 2 = 3 (left: 2 7 11)\n7 - 2 = 5 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
            "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "11 - 2 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 8)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n",
                    "5 + 4 = 9 (left: 2 4 9)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n",
                    "8 - 4 = 4 (left: 2 4 4)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 6 8)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 8",
                "ys": [
                    "4 + 5 = 9 (left: 5 6 8)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n2 + 8 = 10 (left: 8 10 20)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n8 / 2 = 4 (left: 4 8 20)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n2 * 8 = 16 (left: 8 12 16)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n8 + 2 = 10 (left: 6 10 16)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n16 / 2 = 8 (left: 4 8 10)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n10 - 2 = 8 (left: 2 8 8)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n6 + 8 = 14 (left: 8 20 14)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n20 - 6 = 14 (left: 8 14 14)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 / 2 = 4 (left: 4 14 14)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 * 1 = 14 (left: 8 20 18)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n20 - 8 = 12 (left: 6 12 18)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 5 8)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n5 * 2 = 10 (left: 2 8 10)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n8 - 2 = 6 (left: 2 5 6)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 1 3 6)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "6 - 4 = 2 (left: 2 5 8)\n3 * 2 = 6 (left: 1 3 6)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n4 + 5 = 9 (left: 5 4 9)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n5 - 1 = 4 (left: 4 4 9)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n4 * 2 = 8 (left: 5 8 9)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n9 / 3 = 3 (left: 3 5 8)\n",
                    "8 / 2 = 4 (left: 4 5 4)\n5 + 3 = 8 (left: 3 4 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 8",
                "ys": [
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n"
                ],
                "new_ys": [
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n4 + 20 = 24 (left: 20 14 24)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 / 4 = 5 (left: 5 14 20)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n14 - 4 = 10 (left: 5 10 20)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n10 + 4 = 14 (left: 5 6 14)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n6 / 1 = 6 (left: 2 6 6)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n6 - 2 = 4 (left: 2 4 6)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n9 / 3 = 3 (left: 3 5 8)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 1 = 7 (left: 3 5 7)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n5 + 3 = 8 (left: 3 8 7)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n2 + 8 = 10 (left: 8 10 12)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n12 - 2 = 10 (left: 8 8 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n8 + 14 = 22 (left: 14 18 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n18 / 2 = 9 (left: 9 14 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 * 2 = 28 (left: 8 18 28)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n18 + 8 = 26 (left: 14 26 28)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 6 8",
                "ys": [
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 * 5 = 20 (left: 2 8 20)\n20 - 8 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n6 + 18 = 24 (left: 18 22 24)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n18 - 6 = 12 (left: 6 12 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n22 - 18 = 4 (left: 4 6 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n6 * 2 = 12 (left: 12 18 22)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n18 / 3 = 6 (left: 6 12 18)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n22 + 6 = 28 (left: 12 18 28)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n14 + 4 = 18 (left: 8 14 18)\n14 - 8 = 6 (left: 6 18 22)\n12 - 6 = 6 (left: 6 12 18)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n5 + 9 = 14 (left: 9 8)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 - 1 = 8 (left: 5 8 8)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 * 5/2 = 10 (left: 5 8 10)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n5 * 8 = 40 (left: 9 40)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n9 + 5 = 14 (left: 8 14)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n8 - 1 = 7 (left: 5 7 14)\n",
                    "4 + 5 = 9 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n7 * 5/2 = 17.5 (left: 5 7 17.5)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n"
                ]
            }
        ],
        "idx": 943,
        "ys": [
            "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
            "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
            "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n20 - 14 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
            "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
            "5 * 4 = 20 (left: 6 8 20)\n8 * 2 = 16 (left: 4 20 14)\n5 * 2 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 10 = 16 (left: 10 12 13)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n2 + 6 = 8 (left: 6 8 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 2 = 11 (left: 2 6 11)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12 22)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n22 / 2 = 11 (left: 11 12 22)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n4 + 12 = 16 (left: 12 13 16)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n13 - 4 = 9 (left: 3 9 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n12 - 3 = 9 (left: 3 9 9)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n3 * 4 = 12 (left: 9 9 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n9 + 3 = 12 (left: 6 9 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n10 + 12 = 22 (left: 12 13 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n12 * 1 = 12 (left: 1 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n1 + 12 = 13 (left: 12 13 13)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n12 / 2 = 6 (left: 6 12 13)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 6 = 7 (left: 6 7 12)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 13",
                "ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 * 2 = 24 (left: 12 22 24)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n22 - 12 = 10 (left: 10 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 2 = 14 (left: 6 12 14)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n12 + 24 = 36 (left: 24 22 36)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n24 / 12 = 2 (left: 2 22 36)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n12 * 2 = 24 (left: 2 22 24)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n2 + 22 = 24 (left: 22 24 24)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 / 2 = 11 (left: 11 24 24)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n24 - 22 = 2 (left: 2 2 2)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n12 + 12 = 24 (left: 12 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n12 * 3 = 36 (left: 9 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n18 - 6 = 12 (left: 6 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n12 + 6 = 18 (left: 6 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "10 + 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n12 / 0 = Error (no solution)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    0.001,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 10 12 13",
                "ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 * 2 = 24 (left: 12 22 24)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n22 - 12 = 10 (left: 10 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 + 2 = 14 (left: 6 12 14)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n12 + 12 = 24 (left: 0 12 24)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n0 * 12 = 0 (left: 0 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n12 - 0 = 12 (left: 0 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n1 + 12 = 13 (left: 12 13 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n12 + 2 = 14 (left: 2 10 14)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n2 * 6 = 12 (left: 6 10 14)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 10 12 12)\n12 * 2 = 24 (left: 12 24 22)\n22 - 12 = 10 (left: 12 2 10)\n2 + 10 = 12 (left: 6 8 12)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    20.0,
                    20.0,
                    20.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
                    "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n"
                ]
            }
        ],
        "idx": 944,
        "ys": [
            "6 * 2 = 12 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n12 + 12 = 24 (left: 12 12 22)\n",
            "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
            "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 12)\n",
            "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n",
            "6 + 10 = 16 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 4 9)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n",
                    "1 + 9 = 10 (left: 3 3 10)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n",
                    "Final problem:\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 9 9",
                "ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 3 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n4 * 3/2 = 6 (left: 1 6 9)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 1 4 6)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n1 + 9 = 10 (left: 4 6 10)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n4 * 9/3 = 4 (left: 1 4 4)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n1 + 4 = 5 (left: 4 4 5)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n4 - 1 = 3 (left: 3 4 3)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 3 4 9)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 1 3 9)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 3 6)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n3 / 1 = 3 (left: 1 3 3)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "3 * 1 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n1 + 3 = 4 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n3 * 1 = 3 (left: 1 6)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n6 - 1 = 5 (left: 3 5)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n1 + 6 = 7 (left: 3 7)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n3 / 1 = 3 (left: 1 7)\n",
                    "9 - 3 = 6 (left: 1 3 6)\n6 - 3 = 3 (left: 1 3)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 9 9",
                "ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n3 + 7 = 10 (left: 7 10)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 1 = 6 (left: 1 6 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n3 * 7 = 21 (left: 7 21)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n1 + 7 = 8 (left: 6 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n7 - 1 = 6 (left: 1 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n1 / 7 = 0.14 (left: 0.14 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n4 + 9 = 13 (left: 9 7 13)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n9 - 1 = 8 (left: 4 8 13)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n7 * 2 = 14 (left: 4 8 14)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n8 - 4 = 4 (left: 4 4 14)\n",
                    "1 + 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 9 9",
                "ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n2.33 + 7 = 9.33 (left: 7 9.33)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n7 * 0.33 = 2.31 (left: 2.31 9.33)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n9.33 - 2.31 = 7.02 (left: 2.31 7.02)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n2.31 + 7 = 9.31 (left: 7 9.31)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n7 / 0.33 = 21.18 (left: 21.18 9.31)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33 (left: 2.33 7)\n9.31 - 7 = 2.31 (left: 2.31 2.31)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n1 + 7 = 8 (left: 6 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n7 - 1 = 6 (left: 1 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n1 / 7 = 0.14 (left: 0.14 6)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
                    "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n"
                ]
            }
        ],
        "idx": 945,
        "ys": [
            "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
            "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
            "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
            "9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n6 * 1 = 6 (left: 1 7)\n",
            "9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 4 = 5 (left: 4 4 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n",
                    "7 - 1 = 6 (left: 1 4 6)\n",
                    "1 * 4 = 4 (left: 4 6 4)\n",
                    "4 + 1 = 5 (left: 4 5 4)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 1 = 5 (left: 4 5 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 11",
                "ys": [
                    "4 + 1 = 5 (left: 4 5 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "4 + 1 = 5 (left: 4 5 11)\n4 + 5 = 9 (left: 5 9 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n9 / 3 = 3 (left: 2 3 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 + 1 = 6 (left: 1 3 6)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n1 + 4 = 5 (left: 5 6 6)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n6 - 1 = 5 (left: 1 5 5)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 * 1 = 4 (left: 1 4 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n11 - 4 = 7 (left: 1 4 7)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 11 = 12 (left: 4 7 12)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 / 1 = 4 (left: 1 4 8)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n11 - 1 = 10 (left: 1 4 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 * 4 = 4 (left: 4 10 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "4 / 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 11",
                "ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n"
                ],
                "new_ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 + 10 = 19 (left: 10 5 19)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n10 - 9 = 1 (left: 1 5 19)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n10 / 2 = 5 (left: 1 5 5)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 1 = 6 (left: 1 6 5)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 - 1 = 4 (left: 10 4 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 + 11 = 20 (left: 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n20 - 9 = 11 (left: 9 11 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 - 2 = 9 (left: 9 9 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 1 6)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n3 * 2 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n4 + 5 = 9 (left: 5 11 9)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n5 * 2 = 10 (left: 4 10 11)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 1 7 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n10 / 2 = 5 (left: 1 5 7)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n1 + 11 = 12 (left: 5 12 7)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n5 * 2 = 10 (left: 1 10 7)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n1 + 7 = 8 (left: 5 8 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n10 - 5 = 5 (left: 1 5 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 4 11",
                "ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n"
                ],
                "new_ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 + 10 = 20 (left: 10 10 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 * 4 = 40 (left: 10 4 40)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n4 + 10 = 14 (left: 10 4 14)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 - 4 = 6 (left: 6 4 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 10 15)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n10 - 1 = 9 (left: 1 9 15)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n15 - 10 = 5 (left: 1 5 9)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 5 9 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 1 5 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n5 + 1 = 6 (left: 1 6 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n1 - 5 = -4 (left: -4 6 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 1 10 15)\n10 - 5 = 5 (left: -4 5 6)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n10 + 6 = 16 (left: 6 5 16)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n6 * 5 = 30 (left: 5 16 30)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n5 - 2 = 3 (left: 3 16 30)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n16 / 4 = 4 (left: 3 4 30)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n30 - 20 = 10 (left: 3 4 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n4 * 2.5 = 10 (left: 7 10 10)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 + 11 = 20 (left: 11 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n11 / 9 = 1.22 (left: 1.22 20)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n20 - 11 = 9 (left: 9 9)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 * 2 = 18 (left: 9 18)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n11 - 9 = 2 (left: 2 9 18)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 / 3 = 3 (left: 3 9 18)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n18 + 9 = 27 (left: 9 27)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 - 1.22 = 7.78 (left: 7.78 9 27)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 * 11 = 99 (left: 99)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n11 + 18 = 29 (left: 18 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n18 - 11 = 7 (left: 7 11)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n9 * 2 = 18 (left: 11 18 11)\n11 * 2 = 22 (left: 7 22)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 + 10 = 20 (left: 10 10 4)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n30 - 20 = 10 (left: 3 4 10)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 / 3 = 3 (left: 3 9 18)\n",
                    "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 * 4 = 40 (left: 10 4 40)\n"
                ]
            }
        ],
        "idx": 946,
        "ys": [
            "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 + 10 = 20 (left: 10 10 4)\n",
            "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n30 - 20 = 10 (left: 3 4 10)\n",
            "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n1 + 9 = 10 (left: 10 6 5)\n3 + 4 = 7 (left: 4 7 10)\n",
            "4 + 1 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 9 11 20)\n11 / 1 = 11 (left: 9 11 20)\n9 / 3 = 3 (left: 3 9 18)\n",
            "4 * 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n4 * 2.5 = 10 (left: 10 10 4)\n10 * 4 = 40 (left: 10 4 40)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 2 4 9 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 10",
                "ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n2 + 4 = 6 (left: 4 6 10)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n4 * 2 = 8 (left: 2 8 10)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 4 = 6 (left: 2 4 6)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n2 + 7 = 9 (left: 4 6 9)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n4 + 7 = 11 (left: 2 6 11)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n6 * 2 = 12 (left: 2 4 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n2 + 4 = 6 (left: 4 6 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n4 * 2 = 8 (left: 2 8 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 2 = 7 (left: 2 4 7)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n4 + 9 = 13 (left: 2 13 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 / 3 = 3 (left: 1 3 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n1 2 + 4 = 6 (left: 4 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n10 - 2 = 8 (left: 2 4 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n2 * 4 = 8 (left: 4 8 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n10 / 2 = 5 (left: 1 5 6)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n18 - 4 = 14 (left: 2 4 14)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n2 * 10 = 20 (left: 4 8 20)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n10 + 2 = 12 (left: 2 4 12)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n7 - 1 = 6 (left: 4 5 6)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "10 / 2 = 5 (left: 1 4 5 7)\n4 + 1 = 5 (left: 1 5 4)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 10",
                "ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 1 3 7)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 7 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 3 9)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n9 - 1 = 8 (left: 1 3 8)\n9 - 3 = 6 (left: 1 3 6)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 3 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 2 4 9 10)\n10 - 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 9 10",
                "ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n"
                ]
            }
        ],
        "idx": 947,
        "ys": [
            "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "2 * 9 = 18 (left: 2 4 10 18)\n4 * 2 = 8 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "2 * 9 = 18 (left: 2 4 10 18)\n4 + 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
            "9 - 2 = 7 (left: 2 4 7 10)\n10 - 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 3 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 3 13)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n",
                    "1 + 3 = 4 (left: 2 4 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n",
                    "11 - 1 = 10 (left: 1 6 10)\n",
                    "6 - 1 = 5 (left: 1 5 10)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 3 13",
                "ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n5 * 1 = 5 (left: 1 5 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n6 / 1 = 6 (left: 1 5 6)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n1 + 2 = 3 (left: 2 11)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n2 * 1 = 2 (left: 1 11)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n1 + 11 = 12 (left: 2 9)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n2 + 11 = 13 (left: 9)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n2 + 3 = 5 (left: 3 5 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n3 + 2 = 5 (left: 5 10 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 / 3 = 4 (left: 1 4 10)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n1 + 3 = 4 (left: 3 4 13)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n3 * 1 = 3 (left: 1 3 13)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n13 - 3 = 10 (left: 1 3 10)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n1 + 13 = 14 (left: 3 14 10)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n3 / 1 = 3 (left: 1 3 10)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n10 - 3 = 7 (left: 1 3 7)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n1 * 3 = 3 (left: 3 7 3)\n",
                    "2 * 1 = 2 (left: 1 3 13)\n13 - 1 = 12 (left: 2 7 3)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n1 + 2 = 3 (left: 2 13)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n2 * 1 = 2 (left: 1 13)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n1 + 13 = 14 (left: 2 11)\n",
                    "3 - 1 = 2 (left: 1 2 13)\n2 + 13 = 15 (left: 1 11)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 3 13",
                "ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 7 11 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n7 * 1.75 = 12.25 (left: 0.25 11 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n11 - 5 = 6 (left: 0.25 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n0.25 * 4 = 1 (left: 1 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n12 / 1.2 = 10 (left: 1 6 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n6 + 1 = 7 (left: 1 7 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 6 11 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 / 1 = 6 (left: 5 6 6)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "13 - 2 = 11 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n3 + 10 = 13 (left: 10 13 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n10 - 3 = 7 (left: 7 13 13)\n",
                    "1 + 2 = 3 (left: 2 3 13)\n13 - 3 = 10 (left: 3 10 13)\n13 - 10 = 3 (left: 3 7 13)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 3 13",
                "ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 + 6 = 11 (left: 6 11 5)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n6 - 1 = 5 (left: 5 11 5)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n5 * 2 = 10 (left: 5 11 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n11 / 5 = 2 (left: 2 5 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n11 - 1 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n10 + 5 = 15 (left: 5 15 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 + 12 = 17 (left: 12 12 17)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 / 2 = 6 (left: 6 12 17)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 + 5 = 17 (left: 7 12 17)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n5 + 7 = 12 (left: 7 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n7 - 1 = 6 (left: 6 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n6 * 2 = 12 (left: 7 12 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n7 / 3 = 2 (left: 2 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n6 + 5 = 11 (left: 2 11 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0,
                    20.0,
                    0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n7 - 1 = 6 (left: 6 6 12)\n",
                    "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n"
                ]
            }
        ],
        "idx": 948,
        "ys": [
            "2 * 3 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 5 7 11)\n10 - 1 = 9 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
            "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
            "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
            "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 5 7 6)\n7 - 1 = 6 (left: 6 6 12)\n",
            "2 * 3 = 6 (left: 1 6 11)\n1 + 11 = 12 (left: 5 6 12)\n5 + 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 6 6",
                "ys": [
                    "1 6 = 7 (left: 6 6 6)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n"
                ],
                "new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n6 + 6 = 12 (left: 6 6 7)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n6 * 7 = 42 (left: 6 7 42)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6 42)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n6 / 2 = 3 (left: 1 3 42)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n1 + 42 = 43 (left: 3 42 43)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n42 - 1 = 41 (left: 3 41 42)\n",
                    "6 + 1 = 7 (left: 6 6 7)\n3 * 14 = 42 (left: 3 41 42)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n5 + 6 = 11 (left: 6 6 11)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 11 30)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6 11)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n11 / 1 = 11 (left: 6 6 11)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n11 - 6 = 5 (left: 1 5 6)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 6 6",
                "ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n"
                ],
                "new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n5 * 7 = 35 (left: 7 11 35)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n7 - 1 = 6 (left: 6 11 35)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n11 / 2 = 5.5 (left: 6 6 5.5)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 + 1 = 7 (left: 6 7 11)\n6 + 5.5 = 11.5 (left: 0.5 11.5 5.5)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 * 1 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 6 6 6",
                "ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n"
                ],
                "new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 - 0 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 * 1 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 14 18)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 12 8)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 * 2 = 12 (left: 12 14 8)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 + 6 = 18 (left: 14 14 18)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n"
                ]
            }
        ],
        "idx": 949,
        "ys": [
            "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
            "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n",
            "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
            "1 6 = 7 (left: 6 6 6)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
            "1 6 = 7 (left: 6 6 6)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 2 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n",
                    "7 / 1 = 7 (left: 1 7 7)\n",
                    "7 - 1 = 6 (left: 1 6 7)\n",
                    "7 * 1 = 7 (left: 1 6 7)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 2 9",
                "ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n2 * 9 = 18 (left: 4 9 18)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 / 2 = 4.5 (left: 4 4.5 9)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 4 = 5 (left: 4 5 4.5)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n1 + 2 = 3 (left: 2 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n9 - 1 = 8 (left: 1 2 8)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n1 + 9 = 10 (left: 2 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 1 = 2 (left: 1 2 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 * 9 = 9 (left: 1 9 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n9 - 1 = 8 (left: 1 8 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n9 / 1 = 9 (left: 1 9 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n1 + 1 = 2 (left: 1 2 7)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n1 * 7 = 7 (left: 1 2 7)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 2 6)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n2 + 1 = 3 (left: 1 3 6)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n1 / 1 = 1 (left: 1 1 6)\n",
                    "9 - 2 = 7 (left: 1 1 7)\n6 - 1 = 5 (left: 1 1 5)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n7 * 1 = 7 (left: 1 7 10)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n10 - 1 = 9 (left: 1 7 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 10 = 11 (left: 7 11 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n7 / 1 = 7 (left: 1 7 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n9 - 7 = 2 (left: 1 2 7)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 2 9",
                "ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n4 + 7 = 11 (left: 7 9 11)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n7 * 4 = 28 (left: 9 11 28)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 - 4 = 5 (left: 5 7 28)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n7 - 1 = 6 (left: 5 6 28)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n1 + 8 = 9 (left: 8 11)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n8 - 1 = 7 (left: 1 7 11)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 8 11)\n11 - 8 = 3 (left: 1 3 7)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n9 + 10 = 19 (left: 10 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n10 - 1 = 9 (left: 1 9 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n9 * 1 = 9 (left: 1 9 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n1 + 9 = 10 (left: 9 9 10)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n9 * 3 = 27 (left: 3 6 27)\n",
                    "2 - 1 = 1 (left: 1 1 9)\n1 + 9 = 10 (left: 9 10 9)\n6 + 3 = 9 (left: 3 9 9)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 / 2 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 2 9",
                "ys": [
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 9 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n5 * 3 = 15 (left: 3 6 15)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n6 - 3 = 3 (left: 2 3 5)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 / 1 = 3 (left: 1 3 5)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n8 + 10 = 18 (left: 10 18)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2 18)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n18 / 2 = 9 (left: 2 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n2 * 10 = 20 (left: 9 10 20)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 9 20)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n9 + 8 = 17 (left: 1 8 17)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n",
                    "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n"
                ]
            }
        ],
        "idx": 950,
        "ys": [
            "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
            "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 8 10)\n",
            "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
            "2 * 1 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n",
            "1 + 2 = 3 (left: 2 2 9)\n9 - 2 = 7 (left: 4 7 9)\n9 / 3 = 3 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n",
                    "5 + 1 = 6 (left: 2 4 6)\n",
                    "4 - 1 = 3 (left: 1 2 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 6 11",
                "ys": [
                    "1 3 = 4 (left: 4 6 11)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n4 + 1 = 5 (left: 3 5 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n4 * 2 = 8 (left: 2 8 11)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n11 - 2 = 9 (left: 2 4 9)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 11 = 13 (left: 4 9 13)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n4 * 11 = 44 (left: 2 44 13)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n11 / 2 = 5.5 (left: 2 4 5.5)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 - 4 = -2 (left: -2 4 5.5)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n1 + 4 = 5 (left: 4 5)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n4 * 1 = 4 (left: 1 4)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n5 - 1 = 4 (left: 1 4)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n1 / 4 = 0.25 (left: 0.25 4)\n",
                    "6 - 1 = 5 (left: 1 4 5)\n4 - 1 = 3 (left: 0.25 3)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n1 + 2 = 3 (left: 2 5)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n2 * 1 = 2 (left: 1 5)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n2 + 1 = 3 (left: 1 4)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n1 * 2 = 2 (left: 2 4)\n",
                    "3 - 1 = 2 (left: 1 2 5)\n4 - 2 = 2 (left: 1 2)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 6 11",
                "ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "1 3 = 4 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "1 * 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 2 11 7)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n2 + 11 = 13 (left: 6 7 13)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n6 / 1 = 6 (left: 1 6 13)\n",
                    "3 + 1 = 4 (left: 2 4 11)\n2 + 4 = 6 (left: 4 6 11)\n11 - 6 = 5 (left: 1 5 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 6 11",
                "ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ]
            }
        ],
        "idx": 951,
        "ys": [
            "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
            "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
            "1 3 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
            "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
            "1 3 = 4 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 10 12 13)\n",
                    "10 - 5 = 5 (left: 5 12 13)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n",
                    "10 + 5 = 15 (left: 6 8 15)\n",
                    "6 * 2 = 12 (left: 8 12 15)\n",
                    "8 - 2 = 6 (left: 6 8 15)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    20.0,
                    0,
                    0.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 12 13",
                "ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 6 11 13)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n6 * 5/2 = 15 (left: 1 15 13)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n6 / 3 = 2 (left: 1 2 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n8 - 1 = 7 (left: 1 2 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n3 * 8 = 24 (left: 9 15 24)\n",
                    "13 - 5 = 8 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n6 + 3 = 9 (left: 3 8 9)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "15 / 3 = 5 (left: 5 6 8)\n8 - 3 = 5 (left: 3 5 9)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n10 + 12 = 22 (left: 12 13 22)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n12 * 1 = 12 (left: 1 12 22)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n1 + 12 = 13 (left: 12 13 13)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n12 / 2 = 6 (left: 6 12 13)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 6 = 7 (left: 6 7 12)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 12 13",
                "ys": [
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n"
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "5 + 10 = 15 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 * 2 = 14 (left: 7 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "5 * 2 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 10 12 13",
                "ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 + 13 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n7 + 9 = 16 (left: 9 16)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n9 - 1 = 8 (left: 8 16)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n9 * 2 = 18 (left: 8 18)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n2 + 7 = 9 (left: 7 9)\n16 / 4 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n5 * 1.5 = 7.5 (left: 6 7.5)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n7 / 3 = 2.33 (left: 5 2.33)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n1 * 2 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)\n5 - 0.5 = 4.5 (left: 4.5 2.33)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n"
                ]
            }
        ],
        "idx": 952,
        "ys": [
            "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
            "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
            "12 / 2 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 2 4 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n",
                    "3 - 2 = 1 (left: 1 3 6)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n",
                    "3 + 2 = 5 (left: 1 5 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 1 3 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 2 = 3 (left: 1 3 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 2 4 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 / 1 = 3 (left: 1 2 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n3 / 1 = 3 (left: 2 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 - 1 = 1 (left: 1)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n2 + 4 = 6 (left: 4 6)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n2 * 6 = 12 (left: 4 4 12)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n4 + 2 = 6 (left: 2 6 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 3 5 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 3 9 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 + 2 = 5 (left: 5 9 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n9 / 3 = 3 (left: 1 3 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n6 - 2 = 4 (left: 1 3 4)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 6",
                "ys": [
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "6 / 2 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n1 + 2 = 3 (left: 2 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n2 * 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 1 2)\n2 - 1 = 1 (left: 1 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.001,
                    0.001,
                    0.001,
                    0.001,
                    0,
                    1.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 6",
                "ys": [
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n"
                ],
                "new_ys": [
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 0 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n0 * 6 = 0 (left: 0 6)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n6 - 0 = 6 (left: 0 6)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n1 + 3 = 4 (left: 2 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n3 - 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n1 * 3 = 3 (left: 2 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n1 + 2 = 3 (left: 2 3)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 * 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n1 + 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n1 * 1 = 1 (left: 1 1)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n1 - 1 = 0 (left: 0 1)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 18)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n18 / 3 = 6 (left: 6 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n12 * 2 = 24 (left: 6 24)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n6 - 2 = 4 (left: 4 12)\n",
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n12 - 6 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    0.001,
                    0,
                    0,
                    1.0,
                    0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n18 / 3 = 6 (left: 6 12)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n3 - 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 * 1 = 2 (left: 1 2)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 - 1 = 1 (left: 1 1)\n",
                    "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n1 + 1 = 2 (left: 1 2)\n"
                ]
            }
        ],
        "idx": 953,
        "ys": [
            "2 * 6 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n18 / 3 = 6 (left: 6 12)\n",
            "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 + 2 = 3 (left: 1 3)\n3 - 1 = 2 (left: 1 2)\n",
            "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 * 1 = 2 (left: 1 2)\n",
            "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n1 * 2 = 2 (left: 1 2)\n2 - 1 = 1 (left: 1 1)\n",
            "3 - 1 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 2)\n2 - 1 = 1 (left: 1 1)\n1 + 1 = 2 (left: 1 2)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 7 10 12)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n",
                    "10 * 1 = 10 (left: 6 13 10)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 10 12",
                "ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n"
                ],
                "new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n10 / 2 = 5 (left: 4 5 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n16 - 14 = 2 (left: 4 5 2)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n4 * 6 = 24 (left: 5 2 24)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n5 + 14 = 19 (left: 2 19 24)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n7 - 1 = 6 (left: 6 4 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 * 2 = 8 (left: 6 8 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 4 = 10 (left: 4 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n6 + 7 = 13 (left: 7 6 13)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n7 - 1 = 6 (left: 6 6 13)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n6 * 2 = 12 (left: 7 6 12)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n6 + 2 = 8 (left: 7 8 12)\n",
                    "12 - 6 = 6 (left: 6 7 6)\n7 - 1 = 6 (left: 6 6 8)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n13 + 10 = 23 (left: 3 10 4)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n10 - 1 = 9 (left: 2 9 4)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n4 * 3 = 12 (left: 2 9 12)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n9 / 3 = 3 (left: 2 3 12)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n12 - 2 = 10 (left: 2 3 10)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n2 + 1 = 3 (left: 1 3 10)\n",
                    "7 + 6 = 13 (left: 13 10 4)\n10 - 3 = 7 (left: 1 3 7)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n7 + 10 = 17 (left: 10 12 17)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12 17)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n12 / 2 = 6 (left: 6 10 17)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n10 - 6 = 4 (left: 4 12 17)\n",
                    "6 + 7 = 13 (left: 7 10 12)\n12 + 4 = 16 (left: 10 10 16)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 10 12",
                "ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n"
                ],
                "new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 4 = 8 (left: 4 8 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 * 2 = 8 (left: 4 8 16)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n7 + 4 = 11 (left: 4 11 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n4 * 3 = 12 (left: 1 11 13)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n13 - 4 = 9 (left: 1 4 9)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n1 + 13 = 14 (left: 4 9 14)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n4 / 2 = 2 (left: 1 2 9)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n9 - 7 = 2 (left: 1 2 2)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n6 + 7 = 13 (left: 7 4 13)\n1 * 2 = 2 (left: 2 2 2)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n6 + 4 = 10 (left: 4 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n4 * 3 = 12 (left: 2 4 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n4 - 1 = 3 (left: 1 3 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n10 / 2 = 5 (left: 1 3 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n3 * 2 = 6 (left: 1 6 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n4 * 3/2 = 6 (left: 1 6 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n1 + 10 = 11 (left: 4 7 11)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n4 * 7 = 28 (left: 1 11 28)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n1 + 7 = 8 (left: 4 8 28)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n4 - 1 = 3 (left: 1 3 28)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n10 - 4 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 10 12",
                "ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n"
                ],
                "new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n4 * 1.5 = 6 (left: 1.5 5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n5 - 3 = 2 (left: 1.5 2 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n1.5 + 3 = 4.5 (left: 2 4.5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n2 * 3.5 = 7 (left: 4.5 7 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n7 - 4.5 = 2.5 (left: 2 2.5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n28 / 4 = 7 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n"
                ]
            }
        ],
        "idx": 954,
        "ys": [
            "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
            "7 * 2 = 14 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 5 6)\n",
            "12 / 3 = 4 (left: 6 7 4)\n13 / 3 = 4 (left: 6 4 4)\n1 + 3 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
            "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
            "12 / 3 = 4 (left: 6 7 4)\n4 - 1 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 8 8 12)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n",
                    "7 - 4 = 3 (left: 1 3 4)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 8 12",
                "ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 4 8 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 1 4 3)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n1 + 4 = 5 (left: 4 5 3)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 / 2 = 2 (left: 2 5 3)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n5 - 2 = 3 (left: 2 3 3)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "4 * 2 = 8 (left: 3 4 7)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n7 + 8 = 15 (left: 8 12 15)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n8 * 1.5 = 12 (left: 7 12 12)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n12 - 7 = 5 (left: 5 8 12)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n8 / 2 = 4 (left: 4 5 12)\n",
                    "8 * 2 = 16 (left: 7 8 12)\n12 + 4 = 16 (left: 8 5 16)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n8 + 8 = 16 (left: 8 12 16)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n8 * 2 = 16 (left: 4 12 16)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n12 - 8 = 4 (left: 0 4 8)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n8 / 2 = 4 (left: 0 4 4)\n",
                    "7 + 8 = 15 (left: 8 8 12)\n4 + 8 = 12 (left: 0 4 12)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 8 12",
                "ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 8 8 12",
                "ys": [
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n"
                ]
            }
        ],
        "idx": 955,
        "ys": [
            "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
            "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
            "7 + 4 = 11 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "8 / 2 = 4 (left: 4 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n",
                    "3 + 6 = 9 (left: 4 4 9)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "8 / 2 = 4 (left: 1 3 4)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 8",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "4 * 3/2 = 6 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 1 3 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 1 3 7)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 8 = 9 (left: 3 7 9)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 1 3 9)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n9 - 3 = 6 (left: 1 3 6)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n3 * 2 = 6 (left: 2 4 6)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "4 - 1 = 3 (left: 2 3 4)\n2 + 4 = 6 (left: 3 3 6)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 8",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n4 + 8 = 12 (left: 8 9 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n9 - 4 = 5 (left: 4 8 5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 8",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5 5.5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n4 * 1.5 = 6 (left: 6 5 5.5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n5 - 1.5 = 3.5 (left: 4 3.5 5.5)\n",
                    "6 - 3 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n5.5 + 1.5 = 7 (left: 4 3.5 7)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 956,
        "ys": [
            "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
            "3 + 4 = 7 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
            "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
            "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
            "3 + 4 = 7 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 7 8 11)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    20.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n1 + 7 = 8 (left: 7 8 11)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n7 * 1 = 7 (left: 1 7 11)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n7 / 1 = 7 (left: 1 7 10)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n8 - 1 = 7 (left: 7 11 15)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 - 7 = 4 (left: 4 7 15)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n7 * 2 = 14 (left: 4 11 14)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n7 * 1 = 7 (left: 1 7 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n10 - 1 = 9 (left: 1 7 9)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 10 = 11 (left: 7 11 9)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n7 / 1 = 7 (left: 1 7 9)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n9 - 7 = 2 (left: 1 2 7)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 7 7 11)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n7 * 11 = 77 (left: 7 11 77)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 7 77)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n7 / 1 = 7 (left: 4 7 7)\n",
                    "10 + 1 = 11 (left: 7 7 11)\n7 + 4 = 11 (left: 4 7 11)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    20.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n8 + 11 = 19 (left: 11 11 19)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 - 1 = 10 (left: 8 10 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 / 1 = 11 (left: 8 8 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n8 + 1 = 9 (left: 9 11 11)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n4 + 8 = 12 (left: 8 11 12)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n8 - 4 = 4 (left: 4 11 12)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n11 - 8 = 3 (left: 3 4 12)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n11 / 1 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 / 2 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 16)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "7 / 1 = 7 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n8 + 7.33 = 15.33 (left: 7.33 11 15.33)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n7.33 * 2 = 14.66 (left: 11 14.66 15.33)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n11 - 7.33 = 3.67 (left: 3.67 14.66 15.33)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n14.66 / 2 = 7.33 (left: 3.67 7.33 15.33)\n",
                    "1 + 7 = 8 (left: 7 8 11)\n4 + 7 = 11 (left: 8 11 11)\n11 * 2/3 = 7.33 (left: 8 7.33 11)\n15.33 + 3.67 = 19 (left: 7.33 11 19)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n"
                ]
            }
        ],
        "idx": 957,
        "ys": [
            "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "7 * 1 = 7 (left: 1 7 11)\n11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
            "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
            "11 - 1 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 3 = 5 (left: 2 5 6 13)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n",
                    "6 / 2 = 3 (left: 1 3 6 13)\n",
                    "13 - 2 = 11 (left: 1 3 6 11)\n",
                    "1 * 3 = 3 (left: 2 3 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 13",
                "ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n"
                ],
                "new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n1 5 = 6 (left: 5 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n6 - 1 = 5 (left: 3 5 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n6 / 1 = 6 (left: 3 5 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n11 - 5 = 6 (left: 2 5 6)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 2 4 6)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n6 - 1 = 5 (left: 1 4 5)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 * 1 = 2 (left: 1 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n5 - 1 = 4 (left: 2 4 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n11 / 1 = 11 (left: 2 4 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n11 - 2 = 9 (left: 2 8 9)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n1 + 2 = 3 (left: 2 5 8)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n2 * 1 = 2 (left: 1 5 8)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n5 - 1 = 4 (left: 2 4 8)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n2 + 1 = 3 (left: 1 4 4)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n1 * 5 = 5 (left: 4 4 5)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n4 - 2 = 2 (left: 2 4 5)\n",
                    "11 - 3 = 8 (left: 1 2 5 8)\n5 - 4 = 1 (left: 2 1 5)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n1 + 2 = 3 (left: 2 5 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n2 * 1 = 2 (left: 1 5 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n5 - 1 = 4 (left: 2 4 8)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n8 - 2 = 6 (left: 1 4 6)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n1 + 5 = 6 (left: 2 4 6)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n2 * 5 = 10 (left: 4 6 10)\n",
                    "1 * 2 = 2 (left: 1 2 5 8)\n4 + 2 = 6 (left: 2 6 10)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n2 + 8 = 10 (left: 8 6 13)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n8 / 2 = 4 (left: 4 6 13)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n6 * 2 = 12 (left: 4 8 13)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n13 - 2 = 11 (left: 4 6 11)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n4 + 6 = 10 (left: 8 11 10)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n8 / 2 = 4 (left: 4 11 10)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n6 * 2 = 12 (left: 4 12 7)\n",
                    "2 + 6 = 8 (left: 2 8 6 13)\n4 + 13 = 17 (left: 12 7 17)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 13",
                "ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n"
                ],
                "new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n4 + 6 = 10 (left: 6 11 10)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 * 2 = 12 (left: 4 11 12)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n4 + 1 = 5 (left: 3 5 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n3 + 6 = 9 (left: 6 9 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n6 * 3/2 = 4.5 (left: 1.5 4.5 11)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 * 1 = 5 (left: 3 6 11)\n11 - 3 = 8 (left: 6 8 4.5)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n2 + 5 = 7 (left: 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n6 + 2 = 8 (left: 5 8)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n4 + 3 = 7 (left: 3 7 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n11 - 3 = 8 (left: 3 8 8)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n3 / 1 = 3 (left: 2 3 8)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n8 + 3 = 11 (left: 3 5 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n2 + 1 = 3 (left: 4 3 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n2 + 8 = 10 (left: 8 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n8 - 2 = 6 (left: 2 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 13",
                "ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n"
                ],
                "new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 1 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 * 2 = 10 (left: 5 10)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 / 3 = 2 (left: 2 5)\n",
                    "6 / 3 = 2 (left: 1 2 5 11)\n1 + 2 = 3 (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
                ]
            }
        ],
        "idx": 958,
        "ys": [
            "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
            "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
            "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
            "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
            "3 + 2 = 5 (left: 1 5 6 11)\n5 + 1 = 6 (left: 4 6 11)\n6 / 2 = 3 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 2 = 3 (left: 2 3 5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n",
                    "2 * 5 = 10 (left: 3 6 10)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "3 - 1 = 2 (left: 1 2 7)\n",
                    "7 / 2 = 3.5 (left: 1 2 3.5)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "1 2 = 3 (left: 2 3 5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 12",
                "ys": [
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "1 2 = 3 (left: 2 3 5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n"
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 1 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n4 + 2 = 6 (left: 1 3 6)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 - 1 = 2 (left: 1 2 6)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n6 / 3 = 2 (left: 1 2 2)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n3 * 2 = 6 (left: 2 5 6)\n",
                    "1 2 = 3 (left: 2 3 5)\n5 - 2 = 3 (left: 1 3 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n5 / 1 = 5 (left: 1 3 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n3 + 1 = 4 (left: 1 4 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n1 * 5 = 5 (left: 1 4 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n1 - 1 = 0 (left: 0 4 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n5 - 4 = 1 (left: 0 1 5)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 + 5 = 9 (left: 5 9 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n5 * 2 = 10 (left: 4 10 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n12 - 4 = 8 (left: 4 5 8)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n5 + 1 = 6 (left: 4 6 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n12 / 2 = 6 (left: 4 6 6)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n2 + 10 = 12 (left: 3 7 12)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n3 / 1 = 3 (left: 1 3 7)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n7 - 2 = 5 (left: 1 3 5)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n1 * 3 = 3 (left: 3 5 3)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n3 + 1 = 4 (left: 2 4 3)\n",
                    "5 - 2 = 3 (left: 2 3 10)\n3 / 3 = 1 (left: 1 2 3)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n",
                    "12 / 2 = 6 (left: 2 3 6)\n2 + 3 = 5 (left: 3 5 6)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6 6)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 1 4 6)\n",
                    "12 / 2 = 6 (left: 2 3 6)\n6 / 3 = 2 (left: 1 2 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 12",
                "ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n"
                ],
                "new_ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n1 3 5 9\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n1 + 3 = 4 (left: 3 4 9)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n3 * 1 = 3 (left: 1 3 9)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n9 - 3 = 6 (left: 1 3 6)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n3 / 1 = 3 (left: 1 3 3)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\n1 + 3 = 4 (left: 3 4 3)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n1 3 5 9\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n1 + 3 = 4 (left: 3 4 9)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n3 * 1 = 3 (left: 1 3 9)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 3 = 6 (left: 1 3 6)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n1 + 9 = 10 (left: 3 6 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n3 / 1 = 3 (left: 1 3 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 4.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 * 7 = 21 (left: 4 4.5 21)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 + 3 = 9 (left: 1.5 4.5 9)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n5 - 3 = 2 (left: 2 5)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n5 * 1.5 = 7.5 (left: 2 7.5)\n",
                    "1 2 = 3 (left: 2 3 5)\n2 + 3 = 5 (left: 3 5)\n5 / 0.5 = 10 (left: 2 10)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 + 12 = 17 (left: 12 12 17)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 / 2 = 6 (left: 6 12 17)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 + 5 = 17 (left: 7 12 17)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    20.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 5 12",
                "ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n"
                ],
                "new_ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n1 3 5 9\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n1 + 3 = 4 (left: 3 4 9)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n3 * 1 = 3 (left: 1 3 9)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n9 - 3 = 6 (left: 1 3 6)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n3 / 1 = 3 (left: 1 3 3)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\n1 + 3 = 4 (left: 3 4 3)\n",
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n1 3 5 9\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n1 + 3 = 4 (left: 3 4 9)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n3 * 1 = 3 (left: 1 3 9)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n9 - 3 = 6 (left: 1 3 6)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n1 + 9 = 10 (left: 3 6 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n3 / 1 = 3 (left: 1 3 10)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\nFinal problem:\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 7 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 * 5/2 = 10.5 (left: 5 10.5 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7 10.5)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 * 12 = 60 (left: 7 10.5 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 7 12)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n2 * 12 = 24 (left: 7 24)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 12 24 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 * 3 = 36 (left: 12 36 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n36 / 4 = 9 (left: 9 12 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 9 12 48)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 + 48 = 60 (left: 9 60 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n9 * 6 = 54 (left: 3 54 60)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n3 + 60 = 63 (left: 54 60 63)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 3 8)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 7)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    20.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\nFinal problem:\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n",
                    "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 7 12)\n",
                    "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n"
                ]
            }
        ],
        "idx": 959,
        "ys": [
            "1 2 = 3 (left: 2 3 5)\nFinal problem:\nFinal problem:\nFinal problem:\n",
            "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\nFinal problem:\n",
            "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n",
            "2 + 2 = 4 (left: 4 5 12)\n4 * 3 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 7 12)\n",
            "5 - 2 = 3 (left: 2 3 10)\nFinal problem:\n9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 6 8 13)\n",
                    "6 * 2 = 12 (left: 2 8 13)\n",
                    "8 - 2 = 6 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 13",
                "ys": [
                    "8 - 2 = 6 (left: 2 6 13)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 2 6 13)\n2 + 6 = 8 (left: 6 8 13)\n",
                    "8 - 2 = 6 (left: 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "8 - 2 = 6 (left: 2 6 13)\n13 - 2 = 11 (left: 2 6 11)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n10 / 2 = 5 (left: 2 5 6)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "8 / 2 = 4 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 16)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 + 8 = 10 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n7 + 8 = 15 (left: 8 8 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 * 7 = 56 (left: 8 56 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8 15)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 2 = 8 (left: 3 8 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n"
                ]
            }
        ],
        "idx": 960,
        "ys": [
            "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
            "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n",
            "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
            "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
            "13 - 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 10 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n",
                    "12 - 8 = 4 (left: 4 5 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 10 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n8 + 10 = 18 (left: 10 12 18)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12 18)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n12 / 2 = 6 (left: 6 10 18)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n6 * 2 = 12 (left: 2 8 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n8 + 10 = 18 (left: 10 12 18)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 8 10 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n12 / 2 = 6 (left: 6 10 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n10 - 6 = 4 (left: 4 6 12)\n",
                    "8 * 2 = 16 (left: 8 10 12)\n12 + 4 = 16 (left: 6 10 16)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n8 * 2 = 16 (left: 4 12 16)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n8 / 2 = 4 (left: 2 4 6)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 8 12 13)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n",
                    "10 / 2 = 5 (left: 5 8 12)\n12 / 2 = 6 (left: 3 4 8)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 10 12",
                "ys": [
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "10 - 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 - 2 = 2 (left: 2 4)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 2 = 6 (left: 8 6)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 0 4 4)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "8 8 10 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n4 / 2 = 2 (left: 2 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 12)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 * 6 = 12 (left: 10)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n6 - 2 = 4 (left: 4)\n",
                    "8 + 8 = 16 (left: 8 10 12)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n10 - 6 = 4 (left: 2)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n"
                ]
            }
        ],
        "idx": 961,
        "ys": [
            "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n8 + 4 = 12 (left: 4 12)\n",
            "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
            "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
            "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
            "12 / 2 = 6 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n",
                    "3 * 8 = 24 (left: 1 24 10)\n",
                    "8 - 3 = 5 (left: 1 5 10)\n",
                    "10 - 1 = 9 (left: 1 5 9)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 8 13",
                "ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 13)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n13 - 3 = 10 (left: 8 8 10)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 * 3 = 24 (left: 3 8 24)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n16 - 8 = 8 (left: 1.33 8 8)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n1 + 8 = 9 (left: 8 9 13)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n8 - 1 = 7 (left: 1 7 13)\n",
                    "3 * 1 = 3 (left: 1 8 13)\n13 - 8 = 5 (left: 1 5 7)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n3 + 7 = 10 (left: 7 10 13)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n7 * 3 = 21 (left: 3 13 21)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n13 - 3 = 10 (left: 3 7 10)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n3 / 7 = 0.43 (left: 0.43 7 10)\n",
                    "8 - 1 = 7 (left: 3 7 13)\n7 + 3 = 10 (left: 3 10 10)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n7 * 1 = 7 (left: 1 7 10)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n10 - 1 = 9 (left: 1 7 9)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 10 = 11 (left: 7 11 9)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n7 / 1 = 7 (left: 1 7 9)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n9 - 7 = 2 (left: 1 2 7)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 9 10 12)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 / 3 = 3 (left: 3 9 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n3 * 10 = 30 (left: 6 7 30)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 8 13",
                "ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n1.33 + 8 = 9.33 (left: 8 9.33 16)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n8 / 0.67 = 12 (left: 12 8 14.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n14.67 + 1.33 = 16 (left: 8 8 16)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 / 2 = 5 (left: 2 5 6)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 3 6 4)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 * 7 = 21 (left: 6 4 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n8 + 16 = 24 (left: 16 24)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n16 / 8 = 2 (left: 2 24)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n24 - 16 = 8 (left: 8 16)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n3 + 13 = 16 (left: 8 16 24)\n16 + 8 = 24 (left: 8 24)\n"
                ],
                "values": [
                    0.001,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 8 13",
                "ys": [
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n7.67 + 8 = 15.67 (left: 8 15.67 14.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n8 / 1.33 = 6 (left: 0.67 6 14.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n14.67 - 8 = 6.67 (left: 0.67 6 6.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n0.67 * 7 = 4.69 (left: 6 4.69 6.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n6 / 1 = 6 (left: 0.67 4.69 6.67)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n6 - 0.67 = 5.33 (left: 0.67 4.69 5.33)\n",
                    "1 + 3 = 4 (left: 3 8 13)\n8 / 3 = 2.67 (left: 1.33 8 16)\n16 - 1.33 = 14.67 (left: 7.67 8 14.67)\n14.67 - 6 = 8.67 (left: 0.67 4.69 8.67)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ]
            }
        ],
        "idx": 962,
        "ys": [
            "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
            "13 - 3 = 10 (left: 1 7 10)\n1 + 7 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
            "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
            "1 + 8 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 4 4 10)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 7 10",
                "ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n4 + 10 = 14 (left: 10 28)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 / 2 = 5 (left: 4 28)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n28 - 4 = 24 (left: 10 24)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n4 * 7 = 28 (left: 10 28)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n4 + 4 = 8 (left: 4 8 10)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n4 * 2 = 8 (left: 4 8 10)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6 4)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n4 - 2 = 2 (left: 2 4 4)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n4 + 2 = 6 (left: 2 4 6)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n10 / 2 = 5 (left: 2 4 5)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n4 + 6 = 10 (left: 6 10 28)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n6 * 2 = 12 (left: 4 12 28)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n28 - 4 = 24 (left: 6 12 24)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n6 / 2 = 3 (left: 3 12 24)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n12 + 4 = 16 (left: 3 16 24)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n2 + 4 = 6 (left: 4 6 28)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n4 * 2 = 8 (left: 2 8 28)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n2 * 14 = 28 (left: 4 14 24)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n4 + 2 = 6 (left: 2 6 24)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n24 / 2 = 12 (left: 2 4 12)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n2 + 12 = 14 (left: 4 12 14)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n12 - 2 = 10 (left: 4 10 14)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 6 = 10 (left: 6 10 32)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n6 * 2 = 12 (left: 4 12 32)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n32 / 4 = 8 (left: 4 6 8)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n6 - 2 = 4 (left: 2 4 8)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n2 * 4 = 8 (left: 4 6 8)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 - 2 = 2 (left: 2 2 4)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 7 10",
                "ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n4 + 20 = 24 (left: 20 24)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 / 4 = 5 (left: 4 5 20)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n4 * 20 = 80 (left: 20 80)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "28 + 4 = 32 (left: 4 6 32)\n4 + 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "10 - 4 = 6 (left: 4 6 28)\n24 / 6 = 4 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n2 + 4 = 6 (left: 4 6 24)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n4 * 2 = 8 (left: 2 8 24)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n2 * 12 = 4 (left: 4 6 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n6 + 2 = 8 (left: 4 8 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    20.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 7 10",
                "ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n4 + 16 = 20 (left: 16 20 20)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n16 / 4 = 4 (left: 4 4 20)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n20 - 16 = 4 (left: 4 4 4)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n4 + 4 = 8 (left: 16 8 4)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n16 / 2 = 8 (left: 8 8 4)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n4 - 2 = 2 (left: 2 8 4)\n",
                    "4 * 7 = 28 (left: 4 10 28)\n10 * 2 = 20 (left: 4 20)\n20 - 4 = 16 (left: 4 16 20)\n20 - 4 = 16 (left: 2 8 16)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 4 28)\n28 - 4 = 24 (left: 2 4 24)\n24 / 4 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
                ]
            }
        ],
        "idx": 963,
        "ys": [
            "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
            "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
            "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
            "4 + 4 = 8 (left: 4 4 10)\n2 * 4 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 7 = 8 (left: 8 10 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n",
                    "1 7 = 8 (left: 8 10 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 10 13",
                "ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n",
                    "1 7 = 8 (left: 8 10 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n",
                    "1 7 = 8 (left: 8 10 13)\n8 + 10 = 18 (left: 10 13 18)\n",
                    "1 7 = 8 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13 18)\n",
                    "1 7 = 8 (left: 8 10 13)\n13 / 1 = 13 (left: 2 13 13)\n",
                    "1 7 = 8 (left: 8 10 13)\n13 - 2 = 11 (left: 2 11 13)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "1 7 = 8 (left: 8 10 13)\n13 + 2 = 15 (left: 11 15 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n8 + 10 = 18 (left: 10 13 18)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13 18)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n13 / 1 = 13 (left: 2 13 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n13 - 2 = 11 (left: 2 11 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n13 + 2 = 15 (left: 11 15 26)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n8 + 9 = 17 (left: 9 13 17)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n9 / 1 = 9 (left: 1 9 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n13 - 9 = 4 (left: 1 4 9)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n9 * 1 = 9 (left: 1 13 9)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n1 + 13 = 14 (left: 9 14 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n13 / 1 = 13 (left: 9 13 13)\n",
                    "10 - 1 = 9 (left: 8 9 13)\n13 - 1 = 12 (left: 9 12 13)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 10 13",
                "ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n11 + 13 = 24 (left: 13 26 24)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n13 / 1 = 13 (left: 1 13 26)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n26 - 11 = 15 (left: 1 13 15)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 15 26)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n13 + 1 = 14 (left: 1 14 26)\n",
                    "1 7 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n26 / 2 = 13 (left: 1 13 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n11 + 13 = 24 (left: 13 26 24)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n13 / 1 = 13 (left: 1 13 24)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n26 - 13 = 13 (left: 1 13 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n13 + 1 = 14 (left: 1 13 14)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n26 / 2 = 13 (left: 1 13 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 - 13 = -12 (left: -11 13 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 1 6 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n6 / 1 = 6 (left: 1 6 6)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 10 13",
                "ys": [
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n"
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n13 + 13 = 26 (left: 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n13 * 1 = 13 (left: 1 13 26)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n26 - 13 = 13 (left: 1 13 13)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n1 + 13 = 14 (left: 13 13 14)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n13 / 1 = 13 (left: 1 13 14)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n13 - 1 = 12 (left: 1 12 14)\n",
                    "7 + 1 = 8 (left: 8 10 13)\n2 * 13 = 26 (left: 11 13 26)\n1 * 26 = 26 (left: 13 13 26)\n14 - 1 = 13 (left: 1 12 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 7 8 12)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7 35)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n3 + 7 = 10 (left: 7 10 7)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n7 - 3 = 4 (left: 4 7 21)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0.001,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ]
            }
        ],
        "idx": 964,
        "ys": [
            "13 - 7 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 1 6 9)\n1 + 9 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
            "13 - 7 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n",
                    "10 - 1 = 9 (left: 1 9 13)\n",
                    "13 - 9 = 4 (left: 1 4 9)\n",
                    "9 / 1 = 9 (left: 1 4 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n",
                    "36 / 9 = 4 (left: 4 5 9)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.001,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 1 = 10 (left: 1 10 13)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n",
                    "1 9 = 10 (left: 10 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 10 13",
                "ys": [
                    "9 + 1 = 10 (left: 1 10 13)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n",
                    "1 9 = 10 (left: 10 10 13)\n"
                ],
                "new_ys": [
                    "9 + 1 = 10 (left: 1 10 13)\n1 + 10 = 11 (left: 10 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n13 - 10 = 3 (left: 1 3 9)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 13 = 13 (left: 9 13 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n13 / 1 = 13 (left: 9 13 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n9 + 1 = 10 (left: 8 13 13)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n13 - 9 = 4 (left: 1 4 8)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 + 9 = 13 (left: 9 10 13)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n9 / 1.5 = 6 (left: 3.5 6 10)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n6 + 4 = 10 (left: 3.5 6 10)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 10 19 36)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n36 / 4 = 9 (left: 9 9 30)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n30 - 9 = 21 (left: 9 21 21)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n9 + 21 = 30 (left: 21 30 30)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n21 * 2 = 42 (left: 30 30 42)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n30 / 3 = 10 (left: 10 30 42)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n42 - 30 = 12 (left: 10 12 30)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n5 + 9 = 14 (left: 9 36 14)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n9 / 3 = 3 (left: 3 9 36)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n36 - 9 = 27 (left: 3 9 27)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n9 * 3 = 27 (left: 3 36 27)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n3 + 5 = 8 (left: 5 36 8)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n36 / 4 = 9 (left: 5 9 9)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n9 - 5 = 4 (left: 4 9 9)\n",
                    "9 - 4 = 5 (left: 5 9 36)\n9 * 1 = 9 (left: 4 9 9)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 10 = 20 (left: 10 10 13)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 * 1.3 = 13 (left: 10 10 13)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 - 3 = 7 (left: 7 10 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 / 2 = 5 (left: 5 10 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    20.0
                ],
                "select_new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 10 13",
                "ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n"
                ],
                "new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n4 + 8 = 12 (left: 8 9 12)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9 12)\n",
                    "9 + 1 = 10 (left: 1 10 13)\n1 * 9 = 9 (left: 4 8 9)\n9 - 4 = 5 (left: 4 8 5)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n3.5 + 4 = 7.5 (left: 4 6 7.5)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n4 * 1.75 = 7 (left: 1.25 6 7)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n6 - 0.5 = 5.5 (left: 1.25 4.5 7)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n4.5 * 1.25 = 5.625 (left: 0.125 4.75 5.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n3.5 + 6 = 9.5 (left: 6 9 9.5)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n6 * 0.5 = 3 (left: 3 9 9.5)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 - 3.5 = 5.5 (left: 3 5.5 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n9 + 30 = 39 (left: 30 36 39)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 / 3 = 10 (left: 10 36 39)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n36 - 9 = 27 (left: 21 30 39)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n36 + 9 = 45 (left: 30 45)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 10 13",
                "ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n"
                ],
                "new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n4.5 + 4.75 = 9.25 (left: 4.75 7 9.25)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n4.75 - 0.5 = 4.25 (left: 4.25 7 9.25)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n7 - 4.25 = 2.75 (left: 4.5 4.75 2.75)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n4.75 / 1.5 = 3.17 (left: 4.5 3.17 2.75)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n2.75 + 4.5 = 7.25 (left: 4.75 7.25 3.17)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n1.25 + 3.5 = 4.75 (left: 4.5 4.75 7)\n9.25 - 4.5 = 4.75 (left: 4.75 7 4.75)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n4.75 + 4.875 = 9.625 (left: 4.875 5.625 9.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n4.875 / 0.25 = 19.5 (left: 19.5 5.625 9.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n5.625 - 4.875 = 0.75 (left: 19.5 0.75 9.625)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 3.5 4 6)\n0.125 - 0.25 = 0.875 (left: 4.75 4.875 5.625)\n9.625 + 0.75 = 10.375 (left: 19.5 0.75 10.375)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n9 + 36 = 45 (left: 36 9)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n36 / 4 = 9 (left: 9 9)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n9 * 2 = 18 (left: 18 36)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n36 - 9 = 27 (left: 9 27)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n10 * 3 = 30 (left: 9 30 36)\n30 - 21 = 9 (left: 9 36 9)\n9 + 27 = 36 (left: 36 36)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n"
                ]
            }
        ],
        "idx": 965,
        "ys": [
            "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "1 + 9 = 10 (left: 4 9 10)\n4 * 2.25 = 9 (left: 3.5 6 9)\n9 / 1.5 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
            "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
            "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
            "1 9 = 10 (left: 10 10 13)\n10 + 3 = 13 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 3 11)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n",
                    "11 - 3 = 8 (left: 3 8 12)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 11",
                "ys": [
                    "11 - 3 = 8 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 3 8 12)\n3 + 8 = 11 (left: 8 11 12)\n",
                    "11 - 3 = 8 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.33 8 12)\n",
                    "11 - 3 = 8 (left: 3 8 12)\n12 - 3 = 9 (left: 5 8 9)\n",
                    "11 - 3 = 8 (left: 3 8 12)\n8 * 3 = 24 (left: 5 12 24)\n",
                    "11 - 3 = 8 (left: 3 8 12)\n3 + 12 = 15 (left: 8 15)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n3 + 7 = 10 (left: 7 10 12)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n3 / 1 = 3 (left: 2 7 9)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 + 3 = 10 (left: 2 10 9)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n2 * 7 = 14 (left: 7 9 14)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n9 - 2 = 7 (left: 2 7 7)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n3 + 3 = 6 (left: 3 6 11)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n3 * 3 = 9 (left: 3 9 11)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n11 - 3 = 8 (left: 3 6 8)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n3 + 11 = 14 (left: 6 8 14)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n6 / 2 = 3 (left: 3 3 8)\n",
                    "3 + 3 = 6 (left: 3 3 11)\n8 - 3 = 5 (left: 3 5 6)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n3 + 11 = 14 (left: 11 12 14)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 / 3 = 3.67 (left: 3.33 12 14)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n12 - 3 = 9 (left: 8.67 11 14)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 3.67 8 9)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n3 * 12 = 36 (left: 8.67 9 36)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n12 / 3 = 4 (left: 3.33 4 8)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n14 - 11 = 3 (left: 3 4 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 11",
                "ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 - 1 = 3 (left: 1 3 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 / 1 = 7 (left: 1 3 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 2 = 6 (left: 6 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\nFinal problem:\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 3 7 4)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n3 + 12 = 15 (left: 12 15 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n12 / 3 = 4 (left: 4 12 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n21 - 12 = 9 (left: 3 9 12)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n12 + 3 = 15 (left: 9 12 15)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n3 * 12 = 36 (left: 9 21 36)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n21 - 9 = 12 (left: 3 9 12)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n7 * 3 = 21 (left: 3 12 21)\n12 + 3 = 15 (left: 9 12 15)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "3 + 4 = 7 (left: 3 7 12)\n12 - 3 = 9 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 4 11",
                "ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 8 10)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 / 2 = 5 (left: 2 5 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
                ]
            }
        ],
        "idx": 966,
        "ys": [
            "12 / 3 = 4 (left: 3 4 7)\n4 * 2 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
            "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
            "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
            "12 / 3 = 4 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 7 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "5 * 2 = 10 (left: 5 7 10)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n",
                    "5 - 1 = 4 (left: 4 5 8)\n",
                    "8 - 2 = 6 (left: 4 5 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 7 7",
                "ys": [
                    "1 5 = 3 (left: 3 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n"
                ],
                "new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 * 3 = 21 (left: 7 10 21)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n7 * 5 = 35 (left: 7 35)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 5 5 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 7 = 35 (left: 5 7 35)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5 35)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 / 1 = 5 (left: 1 5 35)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n35 + 5 = 40 (left: 5 7 40)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n7 * 5 = 35 (left: 5 35 40)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n5 + 5 = 10 (left: 5 5 7)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n5 * 7 = 35 (left: 5 7 35)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5 35)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n5 / 1 = 5 (left: 1 5 35)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n35 + 5 = 40 (left: 5 7 40)\n",
                    "7 / 1 = 7 (left: 5 5 7)\n7 * 5 = 35 (left: 5 35 40)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "7 + 1 = 8 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 7 7",
                "ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n"
                ],
                "new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3 * 7 = 21 (left: 3 10 21)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n3 - 1 = 2 (left: 2 3.5 21)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n7 + 7 = 14 (left: 0 14)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n0 * 7 = 0 (left: 0 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 + 7 = 12 (left: 7 7)\n7 - 0 = 7 (left: 0 7)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 * 1.5 = 7.5 (left: 6 7.5)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n7 / 3 = 2.33 (left: 5 2.33)\n",
                    "3 + 2 = 5 (left: 5 7 7)\n5 / 1 = 5 (left: 5 7)\n5 - 0.5 = 4.5 (left: 4.5 2.33)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 7 7",
                "ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n"
                ],
                "new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 * 10 = 70 (left: 7 10 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 / 2 = 3.5 (left: 3 3.5 70)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 3 = 10 (left: 3 3.5 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3 * 7 = 21 (left: 3 3.5 21)\n",
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n3.5 - 3 = 0.5 (left: 0.5 3 21)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n4 + 7 = 11 (left: 7 6 11)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 * 2 = 12 (left: 3 7 12)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 + 4 = 10 (left: 3 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n10 / 2 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n"
                ]
            }
        ],
        "idx": 967,
        "ys": [
            "1 5 = 3 (left: 3 7 7)\n3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n7 + 7 = 14 (left: 7 7 10)\n",
            "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
            "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
            "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
            "1 5 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 6 10 13\n",
                    "3 + 9 = 12 (left: 9 10 13)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n",
                    "10 - 3 = 7 (left: 3 7 9 13)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n",
                    "9 + 3 = 12 (left: 6 7 9 12)\n",
                    "7 * 3 = 21 (left: 3 6 9 12)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 10 13",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n1 3 = 5 (left: 2 5 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 + 2 = 8 (left: 2 8 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n7 - 2 = 5 (left: 2 5 12)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n9 + 10 = 19 (left: 10 13 19)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n10 - 3 = 7 (left: 7 13 19)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n13 / 1 = 13 (left: 7 10 13)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n10 * 9 = 90 (left: 7 13 90)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n13 + 9 = 22 (left: 7 10 22)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n7 - 2 = 5 (left: 5 10 22)\n",
                    "3 + 9 = 12 (left: 9 10 13)\n10 / 2 = 5 (left: 5 5 22)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n2 + 3 = 5 (left: 3 5 10)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n3 * 3 = 9 (left: 3 9 10)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n10 - 3 = 7 (left: 3 7 9)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n9 - 3 = 6 (left: 3 6 7)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n3 + 10 = 13 (left: 6 7 13)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n7 * 3 = 21 (left: 6 13 21)\n",
                    "9 / 3 = 3 (left: 3 3 10 13)\n13 - 3 = 10 (left: 6 10 13)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n3 + 4 = 7 (left: 4 7 9)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n4 * 3/2 = 6 (left: 3 6 9)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n3 * 7 = 21 (left: 6 6 21)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n6 * 4/2 = 12 (left: 3 9 12)\n",
                    "13 - 9 = 4 (left: 3 4 7 9)\n9 - 4 = 5 (left: 3 5 12)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 10 13",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "9 / 3 = 3 (left: 3 3 6 9)\n3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 9 10 13",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 * 2 = 10 (left: 10 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n7 - 1 = 6 (left: 5 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 * 2 = 12 (left: 4 12 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n"
                ]
            }
        ],
        "idx": 968,
        "ys": [
            "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
            "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
            "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
            "3 - 1 = 2 (left: 2 3 6 9)\n2 + 9 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
            "3 - 1 = 2 (left: 2 3 6 9)\n2 * 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "7 - 2 = 5 (left: 2 3 5)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 7",
                "ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n3 * 2 = 6 (left: 1 5 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 4)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n3 + 2 = 5 (left: 1 5 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n8 - 7 = 1 (left: 1 3 5)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 5 6 8)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n5 * 3 = 15 (left: 3 6 15)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 2 3 5)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n3 / 1 = 3 (left: 1 3 5)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "2 + 4 = 6 (left: 3 5 6)\n3 + 1 = 4 (left: 1 4 4)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 6 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 1 7 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n1 + 6 = 7 (left: 1 7 8)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n2 + 4 = 6 (left: 4 6 7)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n4 * 2 = 8 (left: 2 8 7)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n7 - 2 = 5 (left: 2 4 5)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n2 * 4 = 8 (left: 4 7 8)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n4 + 2 = 6 (left: 2 6 7)\n",
                    "3 * 2 = 6 (left: 2 4 7)\n7 / 1 = 7 (left: 1 4 7)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 7",
                "ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 + 7 = 11 (left: 3 7 11)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n3 * 4 = 12 (left: 1 7 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 + 4 = 5 (left: 1 5 6)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n5 - 1 = 4 (left: 1 4 4)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n4 * 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n6 / 2 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "4 - 1 = 3 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 7",
                "ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n4 + 8 = 12 (left: 8 9 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9 12)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n9 - 4 = 5 (left: 4 8 5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
                ]
            }
        ],
        "idx": 969,
        "ys": [
            "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "2 + 3 = 5 (left: 3 4 7)\n3 + 4 = 7 (left: 4 7)\n1 * 7 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
            "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
            "2 + 3 = 5 (left: 3 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n",
                    "4 * 3 = 12 (left: 2 4 6)\n",
                    "6 - 2 = 4 (left: 2 4 4)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 8 12",
                "ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n4 + 6 = 10 (left: 6 6 10)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n6 * 2 = 12 (left: 4 6 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n6 - 2 = 4 (left: 4 4 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 4 6 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n12 - 4 = 8 (left: 2 4 8)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n2 + 12 = 14 (left: 4 8 14)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 - 2 = 2 (left: 2 2 8)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n2 * 6 = 12 (left: 4 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 + 2 = 6 (left: 2 6 6)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 8 12",
                "ys": [
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 8 10 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n12 - 2 = 10 (left: 8 8 10)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12 8)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n3 + 4 = 7 (left: 8 7)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12 8)\n",
                    "4 * 2 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n3 + 4 = 7 (left: 8 7)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n4 * 3/2 = 6 (left: 2 4 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n6 / 2 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 8 12",
                "ys": [
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 4 8 7)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 * 2 = 8 (left: 4 7 8)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n3 + 1 = 4 (left: 4 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 * 6 = 12 (left: 10)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n6 - 2 = 4 (left: 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n10 - 6 = 4 (left: 2)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 + 6 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n4 * 2 = 8 (left: 2 8)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n6 - 2 = 4 (left: 2 4)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\nFinal problem:\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 970,
        "ys": [
            "2 + 4 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
            "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
            "12 / 2 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
            "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
            "4 - 2 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n",
                    "2 * 1 = 2 (left: 1 6 10)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n"
                ],
                "values": [
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 6 10",
                "ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5 5)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "6 - 1 = 5 (left: 2 5 10)\n5 + 2 = 7 (left: 1 5 7)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n1 + 5 = 6 (left: 5 8)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n5 / 1 = 5 (left: 1 5 9)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n5 - 1 = 4 (left: 1 4 9)\n",
                    "10 - 2 = 8 (left: 1 5 8)\n9 - 5 = 4 (left: 1 4 4)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n1 + 12 = 13 (left: 12 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n12 / 1 = 12 (left: 1 8)\n",
                    "6 * 2 = 12 (left: 1 12 8)\n8 - 1 = 7 (left: 1 12 7)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.001,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 6 10",
                "ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 6 10",
                "ys": [
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n"
                ],
                "new_ys": [
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n7 + 8 = 15 (left: 8 8 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 * 7 = 56 (left: 8 56 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8 15)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n15 / 3 = 5 (left: 1 5 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
                ]
            }
        ],
        "idx": 971,
        "ys": [
            "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
            "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
            "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
            "1 + 2 = 3 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
            "1 + 6 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n",
                    "1 + 12 = 13 (left: 4 5 13)\n",
                    "12 / 1 = 12 (left: 1 4 12)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n",
                    "Final problem:\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 12 12",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n5 + 6 = 11 (left: 6 11 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 - 5 = 7 (left: 1 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 6 = 7 (left: 1 7 8)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n1 + 5 = 6 (left: 5 6 12)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n5 * 1 = 5 (left: 1 5 12)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n12 - 5 = 7 (left: 1 5 7)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n1 + 12 = 13 (left: 5 7 13)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n5 - 1 = 4 (left: 1 4 7)\n",
                    "5 * 1 = 5 (left: 1 5 12)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n5 + 5 = 10 (left: 5 10 11)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n5 * 1 = 5 (left: 1 5 10)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n10 - 5 = 5 (left: 1 5 5)\n",
                    "12 - 1 = 11 (left: 5 5 11)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 4 5 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 * 1 = 4 (left: 1 4 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n11 - 4 = 7 (left: 1 4 7)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n1 + 11 = 12 (left: 4 7 12)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 / 1 = 4 (left: 1 4 8)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n11 - 1 = 10 (left: 1 4 10)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n1 * 4 = 4 (left: 4 10 4)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 - 5 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 12 12",
                "ys": [
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 + 10 = 19 (left: 10 5 19)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n10 - 1 = 9 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 * 3 = 15 (left: 9 9 15)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 + 12 = 17 (left: 12 12 17)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 / 2 = 6 (left: 6 12 17)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 + 5 = 17 (left: 7 12 17)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 12 12",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 7 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 * 5/2 = 10.5 (left: 5 10.5 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7 10.5)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 * 12/7 = 10 (left: 5 10 7)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 10 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n5 / 7 = 0.71 (left: 0.71 10 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n10 - 5 = 5 (left: 0.71 5 12)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n12 - 10 = 2 (left: 0.71 2 5)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 12 24 60)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 * 3 = 36 (left: 12 36 60)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n60 / 4 = 15 (left: 12 15 36)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n12 - 9 = 3 (left: 3 15 36)\n",
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n5 * 12 = 60 (left: 12 12 60)\n36 / 6 = 6 (left: 3 6 15)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 5 8 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n5 * 3/1 = 15/1 (left: 1 5 9)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 1 5 6)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n10 - 5 = 5 (left: 1 4 5)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n1 * 9/3 = 3 (left: 1 4 3)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n4 + 1 = 5 (left: 1 3 5)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 5 8)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n8 - 1 = 7 (left: 3 5 7)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n5 + 3 = 8 (left: 3 8 7)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0,
                    0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 10 12)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
                    "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n"
                ]
            }
        ],
        "idx": 972,
        "ys": [
            "1 + 5 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 5 7 12)\n7 + 5 = 12 (left: 2 10 12)\n",
            "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n1 + 9 = 10 (left: 5 6 10)\n",
            "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 / 3 = 3 (left: 3 5 9)\n5 - 1 = 4 (left: 1 4 10)\n",
            "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9 8)\n",
            "5 - 1 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 9 10 5)\n9 - 5 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n",
                    "2 * 5 = 10 (left: 1 8 10)\n",
                    "8 / 2 = 4 (left: 1 4 8)\n",
                    "8 - 1 = 7 (left: 4 7 8)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 6 8",
                "ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 2 = 8 (left: 3 8 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n6 + 8 = 14 (left: 8 14 30)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n8 * 3 = 24 (left: 6 8 24)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 6 = 24 (left: 8 8 24)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n8 / 2 = 4 (left: 4 8 24)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n24 + 4 = 28 (left: 8 8 28)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n8 * 3 = 24 (left: 6 8 24)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n1 + 2 = 3 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n2 * 1 = 2 (left: 1 6)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n6 - 1 = 5 (left: 1 2 5)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n1 + 6 = 7 (left: 2 5 7)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n2 + 6 = 8 (left: 1 5 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n1 * 2 = 2 (left: 2 5 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n5 - 2 = 3 (left: 1 3 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n8 - 5 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 6 8",
                "ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 2 = 8 (left: 3 8 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 1 6 8)\n8 - 1 = 7 (left: 1 6 7)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "6 + 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n8 - 1 = 7 (left: 1 7 8)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 6 8",
                "ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 2 = 8 (left: 3 8 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n7 + 8 = 15 (left: 8 13 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n8 - 1 = 7 (left: 7 13 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n13 - 7 = 6 (left: 8 6 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n8 / 2 = 4 (left: 4 6 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n6 + 4 = 10 (left: 4 10 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n4 * 3 = 12 (left: 12 10 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n10 - 4 = 6 (left: 12 6 15)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n15 / 3 = 5 (left: 12 5 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ]
            }
        ],
        "idx": 973,
        "ys": [
            "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n",
            "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n",
            "5 + 6 = 11 (left: 6 6 8)\n6 + 6 = 12 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
            "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
            "5 + 6 = 11 (left: 6 6 8)\n6 / 2 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 7 = 14 (left: 7 7 11)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n",
                    "11 - 8 = 3 (left: 3 7 15)\n",
                    "15 - 7 = 8 (left: 3 8 7)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "7 * 8 = 56 (left: 7 11 56)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 7 8 11",
                "ys": [
                    "7 * 8 = 56 (left: 7 11 56)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n"
                ],
                "new_ys": [
                    "7 * 8 = 56 (left: 7 11 56)\n7 + 11 = 18 (left: 11 56 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n56 - 11 = 45 (left: 1.57 45 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n45 + 1.57 = 46.57 (left: 28.26 46.57)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n28.26 / 1.57 = 18.05 (left: 18.05 46.57)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n46.57 - 28.26 = 18.31 (left: 18.05 18.31)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n7 + 7 = 14 (left: 7 7 11)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n7 * 11 = 77 (left: 7 11 77)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n11 - 7 = 4 (left: 4 7 77)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n7 / 1 = 7 (left: 4 7 77)\n",
                    "7 + 7 = 14 (left: 7 7 11)\n4 + 7 = 11 (left: 7 11 77)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n7 * 4 = 28 (left: 4 28 56)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n56 / 4 = 14 (left: 4 7 14)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n7 - 4 = 3 (left: 3 4 14)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 3 = 7 (left: 1 7 14)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n3.5 + 7 = 10.5 (left: 7 10.5 56)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n7 / 1.75 = 4 (left: 0.25 4 56)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n56 - 3.5 = 52.5 (left: 0.25 4 52.5)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n0.25 * 4 = 1 (left: 1 4 52.5)\n",
                    "7 / 2 = 3.5 (left: 3.5 7 56)\n4 + 0.25 = 4.25 (left: 1 4.25 52.5)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n7 + 11 = 18 (left: 11 15 18)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n11 - 7 = 4 (left: 4 15 18)\n",
                    "7 + 8 = 15 (left: 7 11 15)\n15 - 11 = 4 (left: 4 7 11)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 7 8 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n7 + 11 = 18 (left: 11 56 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n56 - 11 = 45 (left: 1.57 45 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n45 + 1.57 = 46.57 (left: 28.26 46.57)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n28.26 / 1.57 = 18.05 (left: 18.05 46.57)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n46.57 - 28.26 = 18.31 (left: 18.05 18.31)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 + 14 = 21 (left: 14 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n14 / 7 = 2 (left: 2 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 * 2 = 14 (left: 14 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n2 + 7 = 9 (left: 7 9 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n7 * 2 = 14 (left: 2 14 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n2 + 7 = 9 (left: 7 9 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n7 - 2 = 5 (left: 2 5 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n2 * 7 = 14 (left: 5 14 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n1.57 + 56 = 57.67 (left: 56 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n56 / 1.57 = 35.65 (left: 0.35 18)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n18 * 1.57 = 28.26 (left: 27.74 35.65)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n0.35 - 1.57 = -1.22 (left: 35.65 28.26)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n45 + 28.26 = 73.26 (left: 17.74 28.26)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n17.74 - 1.5 = 16.24 (left: 11.64 16.24)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n11.64 + 1.5 = 13.14 (left: 6.86 13.14)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n6.86 / 0.43 = 15.93 (left: 3.07 15.93)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n3.07 - 0.43 = 2.64 (left: 2.64 15.93)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 7 8 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n5 * 2 = 10 (left: 6 7 10)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 / 3 = 2 (left: 2 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n5 + 2 = 7 (left: 5 7 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 2 = 5 (left: 5 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n2 + 7 = 9 (left: 7 9 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n7 * 2 = 14 (left: 2 14 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n2 + 7 = 9 (left: 7 9 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n7 - 2 = 5 (left: 2 5 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n2 * 7 = 14 (left: 5 14 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n6.87 + 18.87 = 25.74 (left: 18.87 25.74)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n18.87 / 3.14 = 6.01 (left: 6.01 18.87)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n18.87 - 6.87 = 12.00 (left: 6.01 12.00)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n6.01 * 2.99 = 17.98 (left: 12.00 17.98)\n",
                    "7 * 8 = 56 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n12.00 + 6.01 = 18.01 (left: 6.01 18.01)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n1.57 + 56 = 57.67 (left: 56 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n56 / 1.57 = 35.65 (left: 0.35 18)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n18 * 1.57 = 28.26 (left: 27.74 35.65)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n11 / 7 = 1.57 (left: 1.57 56 18)\n0.35 - 1.57 = -1.22 (left: 35.65 28.26)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n45 + 28.26 = 73.26 (left: 17.74 28.26)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n17.74 - 1.5 = 16.24 (left: 11.64 16.24)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n11.64 + 1.5 = 13.14 (left: 6.86 13.14)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n6.86 / 0.43 = 15.93 (left: 3.07 15.93)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n3.07 - 0.43 = 2.64 (left: 2.64 15.93)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n5 + 2 = 7 (left: 5 7 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 2 = 5 (left: 5 5 7)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
                    "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n"
                ]
            }
        ],
        "idx": 974,
        "ys": [
            "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 1 = 6 (left: 5 6 7)\n",
            "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n5 + 2 = 7 (left: 5 7 7)\n",
            "11 - 7 = 4 (left: 4 7 56)\n1 * 7 = 7 (left: 7 14 7)\n7 - 2 = 5 (left: 5 7)\n7 - 2 = 5 (left: 5 5 7)\n",
            "11 - 7 = 4 (left: 4 7 56)\n14 / 7 = 2 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n5 + 2 = 7 (left: 2 7 2)\n",
            "11 - 7 = 4 (left: 4 7 56)\n4 + 7 = 11 (left: 7 11 56)\n18 * 1.57 = 28.26 (left: 45 28.26)\n28.26 / 1.5 = 18.87 (left: 6.87 18.87)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n",
                    "7 - 1 = 6 (left: 4 6 10)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n",
                    "6 + 1 = 7 (left: 4 7 7)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 7 10",
                "ys": [
                    "1 3 = 4 (left: 4 7 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 + 4 = 10 (left: 3 6 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n3 * 2 = 6 (left: 6 6 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 6 = 4 (left: 3 4 4)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 7 10 11)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 * 2 = 14 (left: 4 10 14)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n4 + 1 = 5 (left: 3 6 5)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "10 - 3 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "7 / 1 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n4 + 6 = 10 (left: 6 6 10)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n6 * 2 = 12 (left: 4 6 12)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n6 - 2 = 4 (left: 4 4 12)\n",
                    "7 - 1 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 7 10",
                "ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n4 + 7 = 11 (left: 7 6 11)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 * 2 = 12 (left: 3 7 12)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 + 4 = 10 (left: 3 7 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n4 + 7 = 11 (left: 7 6 11)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 * 2 = 12 (left: 3 7 12)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n6 + 4 = 10 (left: 3 7 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n4 + 6 = 10 (left: 6 6 10)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n6 * 2 = 12 (left: 4 6 12)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n6 - 2 = 4 (left: 4 4 12)\n",
                    "3 + 1 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 4 6 6)\n12 / 4 = 3 (left: 3 4 4)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 7 10",
                "ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n"
                ],
                "new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n7 - 3 = 4 (left: 3 6 4)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 4 21)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 4.5)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 * 7 = 21 (left: 4 4.5 21)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 + 3 = 9 (left: 1.5 4.5 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "1 3 = 4 (left: 4 7 10)\n7 - 1 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 + 8 = 13 (left: 8 10 13)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n8 * 1.25 = 10 (left: 5 10 13)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "1 3 = 4 (left: 4 7 10)\n6 / 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 / 2 = 5 (left: 5 5 5)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n"
                ]
            }
        ],
        "idx": 975,
        "ys": [
            "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
            "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
            "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
            "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
            "1 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "9 + 3 = 12 (left: 3 3 12)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 9 12",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n9 / 3 = 3 (left: 3 9 12)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n12 - 3 = 9 (left: 3 9 9)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 12)\n9 / 3 = 3 (left: 3 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n6 / 2 = 3 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n6 * 3 = 18 (left: 3 6 18)\n",
                    "9 / 3 = 3 (left: 3 3 9)\nFinal problem:\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 9 12",
                "ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 + 6 = 15 (left: 3 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 9 = 27 (left: 9 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 9 12",
                "ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 - 0 = 6 (left: 0 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n12 / 2 = 6 (left: 0 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n14 - 6 = 8 (left: 6 9 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n6 + 14 = 20 (left: 12 12 20)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 - 6 = 6 (left: 0 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 2 = 6 (left: 6 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 6)\nFinal problem:\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n"
                ]
            }
        ],
        "idx": 976,
        "ys": [
            "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
            "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
            "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12)\n",
            "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
            "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 7 10)\n",
                    "5 * 3 = 15 (left: 3 7 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n",
                    "10 - 5 = 5 (left: 2 5 5)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n",
                    "5 - 2 = 3 (left: 1 3 14)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "Final problem:\n"
                ],
                "values": [
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 2 5 10)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 7 10",
                "ys": [
                    "7 - 3 = 4 (left: 2 5 10)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 - 2 = 3 (left: 2 3 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n10 / 2 = 5 (left: 2 3 5)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n2 + 10 = 12 (left: 3 5 12)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n3 * 5 = 15 (left: 3 5 15)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 - 3 = 2 (left: 2 3 2)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "14 / 2 = 7 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 3 4 8)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 1 3 8)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 1 3 7)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n1 + 8 = 9 (left: 3 7 9)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 1 3 9)\n",
                    "7 + 1 = 8 (left: 1 3 8)\n9 - 3 = 6 (left: 1 3 6)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n2 + 5 = 7 (left: 5 7 14)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n5 * 2 = 10 (left: 2 10 14)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n14 - 5 = 9 (left: 2 5 9)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n2 + 14 = 16 (left: 5 9 16)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "7 * 2 = 14 (left: 2 5 14)\n9 - 5 = 4 (left: 3 4 5)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 7 10",
                "ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5 5)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "7 - 3 = 4 (left: 2 5 10)\n5 * 2 = 10 (left: 2 5 10)\n5 + 2 = 7 (left: 1 5 7)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 + 6 = 10 (left: 8 8 10)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 7 10",
                "ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 4 = 8 (left: 4 8 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 * 2 = 8 (left: 4 8 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
                ]
            }
        ],
        "idx": 977,
        "ys": [
            "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
            "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
            "5 + 3 = 8 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
            "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
            "5 + 3 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 10 = 14 (left: 10 12 13)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n",
                    "4 * 3 = 12 (left: 6 9 12)\n",
                    "10 + 3 = 13 (left: 6 9 13)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 10 12 13",
                "ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n"
                ],
                "new_ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n3 + 6 = 9 (left: 6 6.5 9)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n6 * 0.5 = 3 (left: 3 6.5 9)\n",
                    "13 / 2 = 6.5 (left: 3 6 6.5)\n6.5 - 3 = 3.5 (left: 3 3.5 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n4 + 12 = 16 (left: 12 13 16)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n13 - 4 = 9 (left: 3 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 - 3 = 9 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n3 * 4 = 12 (left: 9 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n9 + 3 = 12 (left: 6 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n10 + 12 = 22 (left: 12 13 22)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n12 * 1 = 12 (left: 1 12 22)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n1 + 12 = 13 (left: 12 13 13)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n12 / 2 = 6 (left: 6 12 13)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 6 = 7 (left: 6 7 12)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n4 + 6 = 10 (left: 6 10 13)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n6 * 2 = 12 (left: 4 12 13)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n13 - 4 = 9 (left: 4 6 9)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n6 / 2 = 3 (left: 3 4 9)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n4 + 3 = 7 (left: 3 7 9)\n",
                    "12 / 2 = 6 (left: 4 6 13)\n9 - 3 = 6 (left: 3 6 6)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 10 12 13",
                "ys": [
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n"
                ],
                "new_ys": [
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "4 + 10 = 14 (left: 10 12 13)\n13 - 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n13 - 3 = 10 (left: 3 10 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 * 12 = 36 (left: 12 13 36)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 + 3 = 15 (left: 9 12 15)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 2 = 6 (left: 1.5 6 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n6 * 2 = 12 (left: 3 6 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 10 12 13",
                "ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n"
                ],
                "new_ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n12 + 13 = 25 (left: 13 15 25)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n13 - 1 = 12 (left: 12 15 25)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n15 - 2 = 13 (left: 12 13 25)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n13 * 1 = 13 (left: 12 15 25)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n15 / 3 = 5 (left: 5 12 25)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n25 - 12 = 13 (left: 5 13 13)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n13 + 5 = 18 (left: 5 13 18)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n5 * 2 = 10 (left: 5 13 18)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n3 + 12 = 15 (left: 12 13 15)\n13 - 5 = 8 (left: 5 8 18)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n4 + 12 = 16 (left: 12 13 16)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n13 - 4 = 9 (left: 3 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n12 - 3 = 9 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n3 * 4 = 12 (left: 9 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n9 + 3 = 12 (left: 6 9 12)\n",
                    "10 - 4 = 6 (left: 4 12 13)\n12 / 4 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 12 13)\n9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ]
            }
        ],
        "idx": 978,
        "ys": [
            "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
            "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
            "12 - 3 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
            "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
            "12 - 3 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n",
                    "3 * 2 = 6 (left: 2 5 10 12)\n",
                    "10 - 2 = 8 (left: 2 3 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n",
                    "3 / 1 = 3 (left: 1 2 3 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 10 12",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n3 + 5 = 8 (left: 5 8 12)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n5 * 3 = 15 (left: 3 10 12)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n12 / 3 = 4 (left: 1 4 5)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n5 + 3 = 8 (left: 1 4 8)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n3 + 1 = 4 (left: 2 4 6)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n6 - 1 = 5 (left: 2 3 5)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n3 * 1 = 3 (left: 2 3 5)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 + 3 = 4 (left: 2 4 5)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n2 + 3 = 5 (left: 2 5 5)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n6 - 2 = 4 (left: 2 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n8 / 2 = 4 (left: 2 4 4)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n1 + 2 = 3 (left: 2 3 6)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n2 * 1 = 2 (left: 1 3 6)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n3 - 1 = 2 (left: 1 2 6)\n",
                    "3 * 1 = 3 (left: 1 2 3 6)\n6 / 2 = 3 (left: 1 2 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n1 + 2 = 3 (left: 2 3 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n3 / 1 = 3 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 10 12",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 3 5 10 12)\n1 * 12 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 2 = 6 (left: 6 4 4)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 * 2 = 8 (left: 6 8 8)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "6 - 3 = 3 (left: 1 2 3 3)\n2 * 1 = 2 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 10 12",
                "ys": [
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
                ]
            }
        ],
        "idx": 979,
        "ys": [
            "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "1 + 3 = 4 (left: 2 4 6 8)\n2 + 4 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
            "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
            "12 / 2 = 6 (left: 1 3 6 8)\n1 3 = 4 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 7)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n",
                    "3 + 6 = 9 (left: 4 6 9)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 6 7)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 6",
                "ys": [
                    "3 + 4 = 7 (left: 4 6 7)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 7)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 7)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 1 3 7)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n7 - 4 = 3 (left: 1 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 3 6 4)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n3 * 1 = 3 (left: 3 3 4)\n",
                    "6 / 2 = 3 (left: 3 3 4)\n4 - 1 = 3 (left: 2 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 6",
                "ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "6 * 3/3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 6",
                "ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n"
                ],
                "new_ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "6 - 3 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n"
                ],
                "values": [
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ]
            }
        ],
        "idx": 980,
        "ys": [
            "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
            "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
            "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
            "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
            "4 * 3/2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 8 8 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n",
                    "8 - 5 = 3 (left: 3 3 8)\n",
                    "8 / 3 = 2 with remainder 2 (left: 2 2 6)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n",
                    "2 * 8 = 16 (left: 2 7 16)\n",
                    "7 - 2 = 5 (left: 2 5 16)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n",
                    "5 * 8/2 = 10 (left: 0 5 10)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n",
                    "10 / 5 = 2 with remainder 0 (left: 0 0 5)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 8 8 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 8 8",
                "ys": [
                    "5 + 8 = 13 (left: 8 8 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n"
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "5 + 8 = 13 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "5 + 8 = 13 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 5 = 6 (left: 5 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 / 1 = 5 (left: 1 5 9)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 - 1 = 4 (left: 1 4 9)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n9 - 5 = 4 (left: 1 4 4)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n5 + 6 = 11 (left: 6 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n6 * 5/2 = 15 (left: 3 8 15)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6 15)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n3 * 8 = 24 (left: 9 15 24)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 + 4 = 9 (left: 1 5 9)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 * 1 = 5 (left: 4 5 5)\n",
                    "5 - 0 = 5 (left: 5 5 10)\n5 - 4 = 1 (left: 1 1 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 8 8",
                "ys": [
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "8 * 5/2 = 10 (left: 3 8 8)\n3 + 8 = 11 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n5 * 1.5 = 7.5 (left: 6 7.5)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 / 3 = 2.33 (left: 5 2.33)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n5 - 0.5 = 4.5 (left: 4.5 2.33)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n5 * 9/3 = 15 (left: 8 15)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n8 + 5 = 13 (left: 3 13)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n3 * 5 = 15 (left: 8 15)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 8 8",
                "ys": [
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ],
                "new_ys": [
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n5 + 6 = 11 (left: 1 11)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n"
                ],
                "values": [
                    0.001,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
                    "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
                    "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n"
                ]
            }
        ],
        "idx": 981,
        "ys": [
            "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
            "16 / 2 = 8 (left: 1 5 8)\n5 * 1 = 5 (left: 1 8)\n8 / 1 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
            "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 * 5 = 5 (left: 5 6)\n",
            "16 / 2 = 8 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6)\n1 + 6 = 7 (left: 5 7)\n",
            "1 + 5 = 6 (left: 5 6 8)\n15 - 9 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n",
                    "8 + 6 = 14 (left: 8 12 14)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n",
                    "8 * 1.5 = 12 (left: 4 6 12)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 8 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 * 2 = 16 (left: 8 14)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 - 2 = 2 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 2 = 6 (left: 8 6)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 + 8 = 16 (left: 8 14 16)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 * 2 = 16 (left: 8 14 16)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 / 2 = 4 (left: 4 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n8 + 12 = 20 (left: 12 16 20)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n12 * 2 = 24 (left: 8 16 24)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n16 - 8 = 8 (left: 8 12 8)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n12 / 4 = 3 (left: 3 8 8)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n8 + 12 = 20 (left: 8 16 20)\n",
                    "8 * 2 = 16 (left: 8 12 16)\n16 * 2 = 32 (left: 8 12 32)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n8 * 2 = 16 (left: 4 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n8 / 2 = 4 (left: 2 4 6)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n6 + 2 = 8 (left: 4 6 8)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    0.001,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 8 12",
                "ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 / 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 - 8 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 8 12",
                "ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n2 * 6 = 12 (left: 10)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n6 - 2 = 4 (left: 4)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n10 - 6 = 4 (left: 2)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 + 6 = 8 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n4 * 2 = 8 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n6 - 2 = 4 (left: 2 4)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\nFinal problem:\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n8 - 4 = 4 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n"
                ]
            }
        ],
        "idx": 982,
        "ys": [
            "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 4 12)\n",
            "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
            "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
            "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n8 / 2 = 4 (left: 4 8)\n",
            "6 + 8 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n6 * 2 = 12 (left: 8 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 4 9)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n",
                    "3 + 2 = 5 (left: 2 3 5)\n",
                    "2 * 4 = 8 (left: 3 3 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 9",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n3 * 2 = 6 (left: 1 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n6 / 2 = 3 (left: 1 3 4)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n4 + 2 = 6 (left: 1 3 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n3 - 1 = 2 (left: 1 2 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n6 / 3 = 2 (left: 1 2 2)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 3.5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n3 + 4 = 7 (left: 4 9 7)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n4 * 3/2 = 6 (left: 1 6 9)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n9 - 3 = 6 (left: 1 4 6)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n1 + 9 = 10 (left: 4 6 10)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n4 * 9/3 = 4 (left: 1 4 4)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n1 + 4 = 5 (left: 4 4 5)\n",
                    "2 + 3 = 5 (left: 3 4 9)\n4 - 1 = 3 (left: 3 4 3)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n2 + 4 = 6 (left: 4 6 9)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n4 * 2 = 8 (left: 2 8 9)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n9 - 2 = 7 (left: 2 4 7)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n2 + 9 = 11 (left: 4 7 11)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n4 / 2 = 2 (left: 1 2 7)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n9 - 4 = 5 (left: 1 2 5)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n2 * 9 = 18 (left: 1 5 18)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n1 + 9 = 10 (left: 2 5 10)\n",
                    "3 * 2 = 6 (left: 2 4 9)\n5 / 1 = 5 (left: 1 2 5)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n2 + 3 = 5 (left: 3 5 9)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "4 - 1 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 9",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 7 9)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 9)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n1.5 + 7 = 8.5 (left: 3 4 8.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 * 2 = 6 (left: 4 6 8.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n3.5 + 2 = 5.5 (left: 2 5.5 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n5 - 2 = 3 (left: 3.5 3 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n5 / 1 = 5 (left: 3.5 3 5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 9",
                "ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 - 1 = 7 (left: 5 6 7)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n1.5 + 3 = 4.5 (left: 3 4 4.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n3 * 0.5 = 1.5 (left: 1.5 4 4.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n9 - 6 = 3 (left: 1.5 3 4)\n4 - 1.5 = 2.5 (left: 1.5 2.5 4)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n3 + 5.5 = 8.5 (left: 5.5 6 8.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n5.5 / 1.75 = 3.14 (left: 1.75 6 8.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 3 = 3 (left: 1.75 3 8.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n8.5 + 1.75 = 10.25 (left: 1.75 3 10.25)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n1.75 * 3 = 5.25 (left: 3 6 10.25)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n6 - 1.75 = 4.25 (left: 1.75 4.25 10.25)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n4 + 1.5 = 5.5 (left: 3 5.5 6)\n10.25 / 2.5 = 4.1 (left: 1.75 4.25 4.1)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n3 + 4.5 = 7.5 (left: 4.5 5.5 7.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n4.5 * 3 = 13.5 (left: 1.5 5.5 13.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n5.5 - 3 = 2.5 (left: 1.5 2.5 13.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n13.5 / 3 = 4.5 (left: 1.5 4.5 7)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "9 - 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 - 1 = 7 (left: 5 6 7)\n"
                ]
            }
        ],
        "idx": 983,
        "ys": [
            "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n6 - 1.5 = 4.5 (left: 3 4.5 5.5)\n1.5 + 5.5 = 7 (left: 4.5 7 13.5)\n",
            "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
            "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
            "3 - 1 = 2 (left: 2 3 7)\n1 * 7 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 - 1 = 7 (left: 5 6 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 7 11",
                "ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n"
                ],
                "new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n5 * 7 = 35 (left: 7 11 35)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n7 - 1 = 6 (left: 6 11 35)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n11 / 2 = 5.5 (left: 6 7 5.5)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n2 + 7 = 9 (left: 7 9 11)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "6  * 2  = 12  (left: 2 7 11)\n11 - 2 = 9 (left: 2 7 9)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n2 + 5 = 7 (left: 5 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n6 + 2 = 8 (left: 5 8)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 7 11",
                "ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n"
                ],
                "new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n5 + 8 = 13 (left: 8 7 13)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n8 - 5 = 3 (left: 3 7 8)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n7 * 2 = 14 (left: 3 8 14)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n8 / 2 = 4 (left: 3 4 14)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 * 2 = 10 (left: 5 10)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n6 / 3 = 2 (left: 2 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 * 2 = 10 (left: 5 10)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n6 / 3 = 2 (left: 2 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 * 2 = 10 (left: 6 10 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n12 / 3 = 4 (left: 5 6 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n6 + 1 = 7 (left: 5 7 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n5 - 1 = 4 (left: 4 8)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n8 / 2 = 4 (left: 4 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n4 * 3 = 12 (left: 4 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n4 - 3 = 1 (left: 1 12)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0.001,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0,
                    0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 7 11",
                "ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n"
                ],
                "new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 7 3)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 3 6 3)\n",
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n5 - 1 = 4 (left: 4 8)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n8 / 2 = 4 (left: 4 4)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n4 * 3 = 12 (left: 4 12)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n11 - 5 = 6 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n4 - 3 = 1 (left: 1 12)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n5 - 1 = 4 (left: 4 8)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n8 / 2 = 4 (left: 4 4)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n4 * 3 = 12 (left: 4 12)\n",
                    "7  - 2  = 5  (left: 2 5 11)\n5 / 1 = 5 (left: 5 6)\n5 - 2 = 3 (left: 3 5)\n4 - 3 = 1 (left: 1 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n5 + 6 = 11 (left: 6 11 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n12 - 5 = 7 (left: 1 7 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n1 + 6 = 7 (left: 1 7 8)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n4 + 7 = 11 (left: 7 11 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n7 - 1 = 6 (left: 6 11 4)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n11 / 4 = 2.75 (left: 4 6 2.75)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n4 * 2 = 8 (left: 6 8 2.75)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n6 + 2.75 = 8.75 (left: 8 8.75 2.75)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n2.75 - 1 = 1.75 (left: 8 8 1.75)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n8 / 4 = 2 (left: 2 8 1.75)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n5 - 1 = 4 (left: 4 7 4)\n8 + 1.75 = 9.75 (left: 2 9.75 1.75)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.001,
                    0,
                    0,
                    0.001,
                    0,
                    0.001,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
                    "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n"
                ]
            }
        ],
        "idx": 984,
        "ys": [
            "1  + 6  = 8  (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n14 - 8 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
            "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12 12)\n",
            "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n12 / 3 = 4 (left: 1 4 7)\n",
            "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n1 + 5 = 6 (left: 4 6 7)\n",
            "11  - 6  = 5  (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n7 - 1 = 6 (left: 5 6 12)\n4 * 2 = 8 (left: 1 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n",
                    "5 * 2 = 10 (left: 1 7 10)\n",
                    "7 + 1 = 8 (left: 1 7 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n",
                    "Final problem:\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 12 12",
                "ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n12 * 3 = 36 (left: 9 12 36)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n12 - 9 = 3 (left: 3 9 36)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 / 3 = 3 (left: 3 3 36)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n36 / 4 = 9 (left: 3 9 9)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n4 + 9 = 13 (left: 9 7 13)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n9 - 1 = 8 (left: 4 8 13)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n7 * 2 = 14 (left: 4 8 14)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n8 - 4 = 4 (left: 4 4 14)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 9 12)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n9 / 3 = 3 (left: 3 9 12)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 6 9 9)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n9 * 3 = 27 (left: 9 12 27)\n",
                    "9 / 3 = 3 (left: 3 9 12)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n1 + 5 = 6 (left: 5 6 7)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n5 * 1 = 5 (left: 1 5 7)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n7 - 1 = 6 (left: 1 5 6)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n1 + 7 = 8 (left: 5 6 8)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n5 - 1 = 4 (left: 1 4 6)\n",
                    "9 - 4 = 5 (left: 1 5 7)\n6 - 5 = 1 (left: 1 1 4)\n"
                ],
                "values": [
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 12 12",
                "ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 * 3 = 36 (left: 9 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n21 - 12 = 9 (left: 6 9 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 4 8 7)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n4 * 2 = 8 (left: 4 7 8)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n3 + 1 = 4 (left: 4 3 6)\n",
                    "12 - 5 = 7 (left: 4 9 7)\n14 / 2 = 7 (left: 4 4 7)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 4 = 5 (left: 4 5 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n7 - 1 = 6 (left: 1 4 6)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n4 - 1 = 3 (left: 1 3 6)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n4 * 1 = 4 (left: 1 4 7)\n6 - 4 = 2 (left: 1 2 3)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 / 2 = 3 (left: 3 4 4)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 3 = 7 (left: 1 4 7)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 * 2 = 8 (left: 1 4 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n1 + 8 = 9 (left: 4 8 9)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    1.0,
                    0,
                    20.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    0.001,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 9 12 12",
                "ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 * 3 = 36 (left: 9 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n21 - 12 = 9 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n3 + 6 = 9 (left: 6 9 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n6 * 2 = 12 (left: 4 6 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n9 - 4 = 5 (left: 1 4 5)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n9 / 1 = 9 (left: 4 5 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n9 + 4 = 13 (left: 1 5 13)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n5 * 2 = 10 (left: 1 5 10)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n5 - 1 = 4 (left: 0 4 10)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n10 / 2 = 5 (left: 0 4 5)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 * 3 = 36 (left: 9 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n21 - 12 = 9 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n3 + 6 = 9 (left: 6 9 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n6 * 2 = 12 (left: 4 6 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n9 - 4 = 5 (left: 1 4 5)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n9 / 1 = 9 (left: 4 5 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n9 + 4 = 13 (left: 1 5 13)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n5 * 2 = 10 (left: 1 5 10)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n5 - 1 = 4 (left: 0 4 10)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n10 / 2 = 5 (left: 0 4 5)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n4 + 6 = 10 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 1 4 7)\n1 + 7 = 8 (left: 4 6 8)\n6 * 2 = 12 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n6 + 9 = 15 (left: 9 15 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n9 / 3 = 3 (left: 3 9 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n21 - 9 = 12 (left: 3 6 12)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n6 + 3 = 9 (left: 3 9 15)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n9 / 1 = 9 (left: 3 3 9)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n21 - 12 = 9 (left: 3 6 9)\n",
                    "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n"
                ]
            }
        ],
        "idx": 985,
        "ys": [
            "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
            "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n",
            "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n",
            "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n12 + 12 = 24 (left: 12 12 21)\n21 - 12 = 9 (left: 3 6 9)\n",
            "5 + 9 = 14 (left: 9 12 12)\n9 + 12 = 21 (left: 12 12 21)\n9 + 12 = 21 (left: 12 12 21)\n12 - 3 = 9 (left: 6 9 21)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 7 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n"
                ],
                "values": [
                    1.0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 7 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 12",
                "ys": [
                    "1 + 2 = 3 (left: 2 7 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n2 + 6 = 8 (left: 6 8 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 - 2 = 4 (left: 2 4 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n12 / 2 = 6 (left: 2 4 6)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n2 + 12 = 14 (left: 4 6 14)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n4 * 3 = 12 (left: 1 4 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n1 + 12 = 13 (left: 4 6 13)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 1 6)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n1 7 = 8 (left: 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n12 - 1 = 11 (left: 1 7 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n1 * 7 = 7 (left: 7 11 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n11 - 7 = 4 (left: 1 4 6)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n1 + 12 = 13 (left: 4 6 13)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n12 / 1 = 12 (left: 4 6 12)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 12",
                "ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 6 8 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n12 - 2 = 10 (left: 4 6 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 2 4 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n1 + 8 = 9 (left: 8 9 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n8 - 1 = 7 (left: 1 7 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 + 1 = 8 (left: 1 8 12)\n12 / 2 = 6 (left: 1 6 7)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n1.5 + 3.5 = 5 (left: 3.5 10)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n3.5 / 0.5 = 7 (left: 1.5 7 10)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n10 - 1.5 = 8.5 (left: 3.5 8.5 7)\n",
                    "1 + 2 = 3 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n7 * 1.5 = 10.5 (left: 3.5 8.5 10.5)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 7 13)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n7 - 1 = 6 (left: 6 13)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n7 * 2 = 14 (left: 6 14)\n",
                    "12 / 2 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n13 - 6 = 7 (left: 1 7)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    0.001,
                    0.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 7 12",
                "ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n5 * 7 = 35 (left: 7 11 35)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n7 - 1 = 6 (left: 6 11 35)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n11 / 2 = 5.5 (left: 6 7 5.5)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 0 6 12)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12 12)\n12 / 0 = Error (no solution)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5 6)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n"
                ]
            }
        ],
        "idx": 986,
        "ys": [
            "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
            "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
            "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
            "2 * 1 = 2 (left: 1 7 12)\n7 - 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
            "7 - 1 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n4 + 6 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 5 6)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n",
                    "5 - 1 = 4 (left: 1 4 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 4 4 7)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 6",
                "ys": [
                    "2 + 5 = 7 (left: 4 4 7)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 4 8 7)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n4 * 2 = 8 (left: 4 7 8)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n3 + 1 = 4 (left: 4 3 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 + 5 = 9 (left: 5 6 9)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 * 4 = 20 (left: 6 9 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n6 - 4 = 2 (left: 1 5 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 - 1 = 4 (left: 2 4 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n20 / 4 = 5 (left: 2 4 5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 + 2 = 7 (left: 3 5 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n20 - 5 = 15 (left: 3 5 15)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 5 = 7 (left: 5 8)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n5 * 2 = 10 (left: 2 8 10)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n8 - 2 = 6 (left: 2 5 6)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n5 - 2 = 3 (left: 1 3 6)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n6 / 2 = 3 (left: 1 3 3)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n3 * 2 = 6 (left: 1 3 6)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n2 + 3 = 5 (left: 3 5 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n8 - 3 = 5 (left: 2 5 5)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n2 + 8 = 10 (left: 5 5 10)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n5 * 2 = 10 (left: 1 5 10)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n1 + 5 = 6 (left: 5 6 10)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n5 - 1 = 4 (left: 1 4 10)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n10 / 2 = 5 (left: 1 4 5)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6 4)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8 4)\n",
                    "8 / 2 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    20.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 6",
                "ys": [
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n"
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "5 - 2 = 3 (left: 2 3 8)\n3 * 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n2 + 5 = 7 (left: 5 7 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n5 * 2 = 10 (left: 2 10 20)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n2 + 20 = 22 (left: 5 7 22)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n5 / 1 = 5 (left: 1 5 22)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 2 = 18 (left: 1 5 18)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n5 + 18 = 23 (left: 5 23 5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n5 * 3 = 15 (left: 5 8 15)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5 8)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n5 / 1 = 5 (left: 3 5 5)\n8 / 3 = 2.67 (left: 2 5 2.67)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "4 * 2 = 8 (left: 2 5 8)\n2 + 8 = 10 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 6",
                "ys": [
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n2 + 7 = 9 (left: 7 9 15)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n7 - 2 = 5 (left: 2 5 14)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 5 8)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n2 + 15 = 17 (left: 5 8 17)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n5 * 2 = 10 (left: 2 8 10)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n8 - 2 = 6 (left: 2 6 10)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n5 + 18 = 23 (left: 18 5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n18 - 5 = 13 (left: 13 5)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n5 * 2 = 10 (left: 13 10)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n13 - 2 = 11 (left: 10 11)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n10 / 1 = 10 (left: 10 11)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n11 + 1 = 12 (left: 10 12)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n8 - 2 = 6 (left: 2 6 10)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n7 - 2 = 5 (left: 2 5 14)\n",
                    "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n13 - 2 = 11 (left: 10 11)\n"
                ]
            }
        ],
        "idx": 987,
        "ys": [
            "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n8 - 2 = 6 (left: 2 6 10)\n",
            "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
            "2 + 5 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
            "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n20 - 5 = 15 (left: 2 7 15)\n7 - 2 = 5 (left: 2 5 14)\n",
            "2 + 4 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 2 5 20)\n1 * 5 = 5 (left: 5 18 5)\n13 - 2 = 11 (left: 10 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 5 8 13)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n",
                    "13 - 5 = 8 (left: 5 5 8 40)\n",
                    "40 / 5 = 8 (left: 5 5 8 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 5 8 13)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 13",
                "ys": [
                    "5 + 5 = 10 (left: 5 5 8 13)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 5 8 13)\n5 + 5 = 10 (left: 5 5 8 13)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n5 * 8 = 40 (left: 5 5 13 40)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n5 - 5 = 0 (left: 0 5 13 40)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n13 / 5 = 2.6 (left: 2.6 5 13 40)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n5 + 13 = 18 (left: 5 8 18 40)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n13 - 5 = 8 (left: 5 5 8 40)\n",
                    "5 + 5 = 10 (left: 5 5 8 13)\n40 / 5 = 8 (left: 5 5 8 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n4 5 = 9 (left: 5 9 13)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n5 + 5 = 10 (left: 5 10 13)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n5 * 40 = 200 (left: 5 8 200)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n0 + 5 = 5 (left: 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n5 * 0 = 0 (left: 0 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n40 / 0 = Error (no solution)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n0 + 13 = 13 (left: 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 + 0 = 13 (left: 5 13 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n5 * 13 = 65 (left: 40 65)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n40 - 5 = 35 (left: 35 65)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n65 / 13 = 5 (left: 35 5)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 40 = Error (no solution)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n5 * 2.6 = 13 (left: 13 40 13)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n7.6 / 2.6 = 3 (left: 3 5 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n5 + 2.6 = 7.6 (left: 3 7.6 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n35 - 13 = 22 (left: 3 7.6 22)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n7.6 * 3 = 22.8 (left: 3 22.8 22)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n3 + 5 = 8 (left: 8 22.8 22)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n4 + 8 = 12 (left: 5 12 18)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n8 * 5/2 = 10 (left: 5 10 18)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n18 - 8 = 10 (left: 5 10 32)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n40 - 18 = 22 (left: 5 10 22)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n5 + 40/2 = 25 (left: 10 22 25)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n10 * 5 = 50 (left: 5 22 50)\n",
                    "5 + 13 = 18 (left: 5 8 18 40)\n22 - 10 = 12 (left: 5 12 50)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 13",
                "ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n"
                ],
                "new_ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 * 8 = 40 (left: 8 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 - 3 = 5 (left: 5 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n40 / 8 = 5 (left: 5 5)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n3 * 0 = 0 (left: 0 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n40 - 3 = 37 (left: 0 37)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 40 = 40 (left: 37 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n3 / 1 = 3 (left: 0 3 37)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n5 + 7.6 = 12.6 (left: 7.6 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n7.6 / 2.4 = 3.17 (left: 2.4 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n40 - 5 = 35 (left: 7.6 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n5 * 7.6 = 38 (left: 2.4 38)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n7.6 - 2.4 = 5.2 (left: 5.2 38)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n2.6 + 5 = 7.6 (left: 5 7.6 40)\n38 / 5.2 = 7.31 (left: 5.2 7.31)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n2.6 + 7.6 = 10.2 (left: 7.6 10.2 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n7.6 / 2.6 = 3 (left: 3 7.6 35)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n35 - 7.6 = 27.4 (left: 3 10.2 27.4)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n10.2 + 3 = 13.2 (left: 7.6 13.2 27.4)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n7.6 * 3 = 22.8 (left: 3 35 22.8)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n3 - 1.8 = 1.2 (left: 1.2 3 22.8)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 8 13",
                "ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n"
                ],
                "new_ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 / 1 = 5 (left: 1 5 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n40 + 5 = 45 (left: 5 40 45)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n40 * 1 = 40 (left: 5 40 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 - 1 = 4 (left: 1 4 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n8 + 10 = 18 (left: 10 18)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2 18)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n18 / 2 = 9 (left: 2 9)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n2 * 10 = 20 (left: 9 10 20)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 9 20)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n9 + 8 = 17 (left: 1 8 17)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n3 + 40 = 43 (left: 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n40 / 3 = 13.33 (left: 13.33 40)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n40 - 3 = 37 (left: 3 37)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\n3 * 40 = 120 (left: 40 120)\n",
                    "5 - 5 = 0 (left: 0 5 13 40)\n13 - 5 = 8 (left: 0 3 40)\n0 + 3 = 3 (left: 3 40)\nFinal problem:\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n1.2 + 7.6 = 8.8 (left: 7.6 3 8.8)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n7.6 / 1.2 = 6.333 (left: 0.867 3 6.333)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n3 * 1.2 = 3.6 (left: 7.6 3.6 6.333)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n7.6 - 3 = 4.6 (left: 1.2 3 4.6)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n3 / 0.867 = 3.46 (left: 1.2 3.46 4.6)\n",
                    "13 / 5 = 2.6 (left: 2.6 5 13 40)\n40 - 5 = 35 (left: 2.6 7.6 35)\n22.8 / 3 = 7.6 (left: 1.2 7.6 3)\n3 + 1.2 = 4.2 (left: 7.6 4.2 4.6)\n"
                ],
                "values": [
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n8 + 10 = 18 (left: 10 18)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n18 / 2 = 9 (left: 2 9)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
                    "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n"
                ]
            }
        ],
        "idx": 988,
        "ys": [
            "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n",
            "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n8 + 10 = 18 (left: 10 18)\n",
            "5 * 8 = 40 (left: 5 5 13 40)\n40 / 5 = 8 (left: 5 8 8)\n8 * 5/2 = 10 (left: 8 10)\n18 / 2 = 9 (left: 2 9)\n",
            "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n5 * 8 = 40 (left: 5 8 40)\n",
            "5 * 8 = 40 (left: 5 5 13 40)\n13 - 5 = 8 (left: 5 5 8)\n5 + 5 = 10 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5 40)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n",
                    "10 / 2 = 5 (left: 1 2 5)\n",
                    "2 + 1 = 3 (left: 1 3 5)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 - 1 = 2 (left: 1 2 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 10",
                "ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n"
                ],
                "new_ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "1 * 3 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 1 3 3)\n",
                    "3 / 1 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 1 2 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 10 = 12 (left: 3 7 12)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 / 1 = 3 (left: 1 3 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n7 - 2 = 5 (left: 1 3 5)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n1 * 3 = 3 (left: 3 5 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 + 1 = 4 (left: 2 4 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 / 3 = 1 (left: 1 2 3)\n",
                    "3 * 2 = 6 (left: 2 3 10)\nFinal problem:\n",
                    "3 - 1 = 2 (left: 1 2 10)\n1 + 2 = 3 (left: 2 10)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n2 * 1 = 2 (left: 1 10)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n10 - 1 = 9 (left: 1 2 9)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n1 + 10 = 11 (left: 2 9 11)\n",
                    "3 - 1 = 2 (left: 1 2 10)\n2 + 9 = 11 (left: 1 9 11)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 10",
                "ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n"
                ],
                "new_ys": [
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 + 8 = 13 (left: 8 10 13)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n8 * 1.25 = 10 (left: 5 10 13)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 + 5 = 15 (left: 5 8 15)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n3 * 2 = 6 (left: 1 5 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 4)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n3 + 2 = 5 (left: 1 5 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n8 - 7 = 1 (left: 1 3 5)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n2 + 3 = 5 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 2 6 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 10 = 12 (left: 6 8 12)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 1.5 3 6)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 1.5 3 4)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 1 5 7)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 4)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n4 * 2 = 8 (left: 3 8 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n3 + 2 = 5 (left: 1 5 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n10 - 3 = 7 (left: 2 3 7)\n8 - 7 = 1 (left: 1 3 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    1.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 3 10",
                "ys": [
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 8 10 14)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n8 * 1.5 = 12 (left: 6 10 12)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n5 * 3 = 15 (left: 3 10 15)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n10 - 3 = 7 (left: 3 5 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n3 + 10 = 13 (left: 5 7 13)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n10 / 3 = 3.33 (left: 1.67 3 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 + 4 = 9 (left: 1 5 9)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 * 1 = 5 (left: 4 5 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 - 4 = 1 (left: 1 1 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n1 + 7 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n"
                ]
            }
        ],
        "idx": 989,
        "ys": [
            "3 * 2 = 6 (left: 2 3 10)\n3 * 2 = 6 (left: 2 6 10)\n2 + 6 = 8 (left: 6 8 10)\n10 - 2 = 8 (left: 6 8 8)\n",
            "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n",
            "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 3 5 10)\n5 - 3 = 2 (left: 2 3 7)\n",
            "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
            "1 2 + 3 = 5 (left: 3 5 10)\n3 + 5 = 8 (left: 5 8 10)\n5 / 1 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 8 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n",
                    "8 - 3 = 5 (left: 3 5 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.001
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 8 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 12",
                "ys": [
                    "3 + 4 = 7 (left: 4 8 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 - 4 = 4 (left: 4 8)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n3 + 8 = 11 (left: 8 11 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n12 - 3 = 9 (left: 8 9 9)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n3 * 4 = 12 (left: 8 8 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n4 + 8 = 12 (left: 8 11 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n8 - 4 = 4 (left: 4 11 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n11 - 8 = 3 (left: 3 4 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n4 * 3/2 = 6 (left: 2 4 6)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n6 / 2 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 12",
                "ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n"
                ],
                "new_ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n1.5 + 2.67 = 4.17 (left: 2.67 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n4 * 1.5 = 6 (left: 6 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n5 - 1.5 = 3.5 (left: 3.5 4)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n4 / 1.5 = 2.67 (left: 2.67 3.5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n3 + 8 = 11 (left: 8 11 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n12 - 3 = 9 (left: 8 9 9)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n3 * 4 = 12 (left: 8 8 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 4 8 7)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 * 2 = 8 (left: 4 7 8)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n3 + 1 = 4 (left: 4 3 6)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n6 / 2 = 3 (left: 3 3 3)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12 8)\n",
                    "3 + 4 = 7 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n3 + 4 = 7 (left: 8 7)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 8 12",
                "ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n"
                ],
                "new_ys": [
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n2.67 + 10.5 = 13.17 (left: 10.5 5.34 13.17)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n10.5 / 2.67 = 3.94 (left: 0.56 3.94 5.34)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n5.34 - 10.5 = -5.16 (left: 2.67 3.94 -5.16)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n2.67 * 5.34 = 14.23 (left: 10.5 3.94 14.23)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n10.5 + 2.67 = 13.17 (left: 7.83 3.94 13.17)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n3.94 - 2.67 = 1.27 (left: 1.16 1.27 7.83)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n7.83 / 3.94 = 2 (left: 0.89 1.27 2)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n5 - 1 = 4 (left: 4 9)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n9 / 3 = 3 (left: 3 4 9)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n5 + 3 = 8 (left: 3 8 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n3 / 0.5 = 6 (left: 6 8 5)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n1.5 + 2.67 = 4.17 (left: 2.67 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n",
                    "3 + 8 = 11 (left: 4 8 11)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n12 - 1.5 = 10.5 (left: 2.67 10.5 5.34)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "8 - 4 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 4 7)\n7 - 1 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n1.5 + 5.34 = 6.84 (left: 5.34 12 6.84)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n5.34 / 1.5 = 3.56 (left: 2.78 12 3.56)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n12 - 5.34 = 6.66 (left: 2.78 6.66 3.56)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n2.78 + 12 = 14.78 (left: 6.66 12 14.78)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n12 / 2.78 = 4.32 (left: 1.5 4.32 6.66)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n6.66 - 1.5 = 5.16 (left: 1.5 4.32 5.16)\n",
                    "4 * 3 = 12 (left: 3 8 12)\n8 / 3 = 2.67 (left: 1.5 2.67 12)\n2.67 / 0.5 = 5.34 (left: 1.5 5.34 12)\n4.32 + 1.5 = 5.82 (left: 1.5 12 5.82)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.001,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n5 + 3 = 8 (left: 3 8 5)\n",
                    "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n3 / 0.5 = 6 (left: 6 8 5)\n"
                ]
            }
        ],
        "idx": 990,
        "ys": [
            "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
            "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n9 - 4 = 5 (left: 3 4 5)\n",
            "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n4 * 1.25 = 5 (left: 3 5 5)\n",
            "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n5 + 3 = 8 (left: 3 8 5)\n",
            "12 / 3 = 4 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n1.5 + 4 = 5.5 (left: 4 5)\n3 / 0.5 = 6 (left: 6 8 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n",
                    "6 / 1 = 6 (left: 1 4 6)\n",
                    "4 - 1 = 3 (left: 1 3 6)\n",
                    "6 - 2 = 4 (left: 1 3 4)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 11",
                "ys": [
                    "1 2 = 3 (left: 3 4 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n"
                ],
                "new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n4 * 3/2 = 6 (left: 1 6 7)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n1 + 6 = 7 (left: 4 7 3)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n4 - 1 = 3 (left: 3 6 3)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "2 * 3 = 6 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n1 + 4 = 5 (left: 4 5 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n4 * 1 = 4 (left: 1 4 6)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n6 - 1 = 5 (left: 1 4 5)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n1 + 6 = 7 (left: 4 5 7)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n4 - 1 = 3 (left: 1 3 5)\n",
                    "3 + 1 = 4 (left: 1 4 6)\n5 - 4 = 1 (left: 1 1 3)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 11",
                "ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n"
                ],
                "new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "6 - 2 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 11",
                "ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n"
                ],
                "new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 4 8 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 * 3/2 = 6 (left: 1.5 6 8)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n3 * 8/4 = 6 (left: 1.5 4 6)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 1.5 7 7)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n1.5 + 8 = 9.5 (left: 7 7 9.5)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n1.5 + 3 = 4.5 (left: 3 3 4.5)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 - 1.5 = 1.5 (left: 1.5 1.5 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n1.5 + 3 = 4.5 (left: 3 4.5 6)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n6 - 1.5 = 4.5 (left: 3 4.5 4.5)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0
                ],
                "select_new_ys": [
                    "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
                    "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
                    "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n"
                ]
            }
        ],
        "idx": 991,
        "ys": [
            "1 2 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 4 6 7)\n12 - 4 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 1.5 4 5)\n",
            "1 2 = 3 (left: 3 4 6)\n6 / 2 = 3 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n3 * 0.5 = 1.5 (left: 1.5 3 3)\n",
            "1 2 = 3 (left: 3 4 6)\n3 * 2 = 6 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n3 * 0.5 = 1.5 (left: 1.5 3 6)\n",
            "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
            "4 + 2 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n",
                    "2 + 9 = 11 (left: 6 8 11)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n",
                    "8 - 6 = 2 (left: 3 2 8)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n",
                    "8 + 2 = 10 (left: 3 10 18)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 9",
                "ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n2 + 6 = 8 (left: 6 8 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 / 2 = 3 (left: 3 6 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n14 + 2 = 16 (left: 6 12 16)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n8 - 2 = 6 (left: 2 4 6)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n6 * 3/2 = 4.5 (left: 1.5 4.5 8)\n",
                    "6 / 2 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 1.5 4.5 5)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n3 + 8 = 11 (left: 8 11 18)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n8 * 3 = 24 (left: 3 8 24)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n18 - 8 = 10 (left: 3 8 10)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n8 / 2 = 4 (left: 1.5 4 10)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n10 + 3 = 13 (left: 1.5 4 13)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n1.5 * 8 = 12 (left: 4 12 13)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n2 + 8 = 10 (left: 8 10 16)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n8 / 2 = 4 (left: 4 8 16)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n16 - 2 = 14 (left: 8 8 14)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n2 * 8 = 16 (left: 8 16 16)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n8 - 2 = 6 (left: 6 8 16)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n16 / 2 = 8 (left: 6 8 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n8 - 2 = 6 (left: 4 6 8)\n"
                ],
                "values": [
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 9",
                "ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n4 + 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n2 + 12 = 14 (left: 12 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n12 / 2 = 6 (left: 6 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 - 2 = 14 (left: 12 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n2 * 12 = 24 (left: 16 24)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n12 - 2 = 10 (left: 10 16)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 - 12 = 4 (left: 2 4)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n6 + 12 = 18 (left: 12 14 18)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n14 - 6 = 8 (left: 6 9 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n6 + 14 = 20 (left: 12 12 20)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 - 6 = 6 (left: 0 6 6)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 - 2 = 2 (left: 2 4)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 2 = 6 (left: 8 6)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    20.0,
                    0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.001,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 8 9",
                "ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 - 2 = 4 (left: 4 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 / 2 = 3 (left: 3 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n12 + 2 = 14 (left: 6 6 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n12 + 12 = 24 (left: 4 12 24)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n4 * 3 = 12 (left: 3 12 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n3 + 9 = 12 (left: 6 9 12)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n9 / 1.5 = 6 (left: 2 6 6)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n6 - 2 = 4 (left: 2 4 6)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n6 * 2 = 12 (left: 2 4 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 10 18)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 18)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n18 / 2 = 9 (left: 2 9)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n2 * 10 = 20 (left: 9 10 20)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n10 - 2 = 8 (left: 8 9 20)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n6 * 2 = 12 (left: 2 12 16)\n16 / 2 = 8 (left: 8 10)\n9 + 8 = 17 (left: 1 8 17)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n9 + 12 = 21 (left: 12 14 21)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n12 / 3 = 4 (left: 4 12 14)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n14 - 9 = 5 (left: 5 12 4)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n12 - 4 = 8 (left: 8 4 5)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n4 * 2 = 8 (left: 8 5 8)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n5 + 8 = 13 (left: 8 8 13)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n8 / 1 = 8 (left: 7 8 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "2 + 2 = 4 (left: 4 2 8)\n2 * 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n"
                ],
                "values": [
                    20.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
                    "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n4 * 3 = 12 (left: 3 12 12)\n",
                    "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n12 / 3 = 4 (left: 4 12 14)\n"
                ]
            }
        ],
        "idx": 992,
        "ys": [
            "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 6 12)\n",
            "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n",
            "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 / 2 = 6 (left: 6 6 12)\n6 * 2 = 12 (left: 6 12 14)\n",
            "2 * 9 = 18 (left: 3 8 18)\n4 * 3 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 12)\n4 * 3 = 12 (left: 3 12 12)\n",
            "8 - 2 = 6 (left: 2 6 16)\n16 - 2 = 14 (left: 6 12 14)\n12 * 3/2 = 9 (left: 9 12 14)\n12 / 3 = 4 (left: 4 12 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n",
                    "5 / 1 = 5 (left: 1 5 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n",
                    "5 * 1 = 5 (left: 1 5 5)\n",
                    "Final problem:\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 7",
                "ys": [
                    "1 5 = 6 (left: 5 6 7)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n"
                ],
                "new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n6 * 5/2 = 15 (left: 1 7 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n7 - 5 = 2 (left: 1 6 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n1 + 6 = 7 (left: 6 7 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n6 / 3 = 2 (left: 1 2 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n15 - 7 = 8 (left: 1 2 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n1 * 2 = 2 (left: 2 2 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n6 * 2 = 12 (left: 4 7 12)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n7 - 1 = 6 (left: 4 6 12)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 4 12)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n4 + 1 = 5 (left: 3 5 12)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n12 - 4 = 8 (left: 3 5 8)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n3 * 4 = 12 (left: 5 8 12)\n",
                    "5 + 1 = 6 (left: 4 6 7)\n5 + 2 = 7 (left: 3 7 8)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 * 6 = 30 (left: 5 5 30)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 - 6 = -1 (left: 5 -1 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n5 - 1 = 4 (left: 3 4 7)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n7 - 2 = 5 (left: 3 4 5)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 * 1 = 3 (left: 3 4 5)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n4 + 1 = 5 (left: 3 3 5)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n1 + 2 = 3 (left: 2 5)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n2 * 1 = 2 (left: 1 5)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n2 + 1 = 3 (left: 1 4)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n1 * 2 = 2 (left: 2 4)\n",
                    "7 - 5 = 2 (left: 1 2 5)\n4 - 2 = 2 (left: 1 2)\n"
                ],
                "values": [
                    20.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.001,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 7",
                "ys": [
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n"
                ],
                "new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n5 * 6 = 30 (left: 5 5 30)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n5 - 6 = -1 (left: 5 -1 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 10 6)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n5 * 6 = 30 (left: 5 5 30)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n5 - 6 = -1 (left: 5 -1 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "1 + 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 7 8 12)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7 35)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n7 / 1 = 7 (left: 3 7 7)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n3 + 7 = 10 (left: 7 10 7)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n7 * 3 = 21 (left: 7 21 7)\n",
                    "6 - 1 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 5 7 8)\n7 - 3 = 4 (left: 4 7 21)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 7",
                "ys": [
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ],
                "new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 + 5 = 11 (left: 5 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 * 2 = 10 (left: 10 7 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n7 - 1 = 6 (left: 5 6 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n5 - 1 = 4 (left: 4 6 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 / 1 = 11 (left: 4 6 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n6 * 2 = 12 (left: 4 12 11)\n",
                    "1 5 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n11 - 4 = 7 (left: 4 6 7)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 + 6 = 10 (left: 8 8 10)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            }
        ],
        "idx": 993,
        "ys": [
            "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
            "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
            "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
            "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
            "1 5 = 6 (left: 5 6 7)\n2 + 5 = 7 (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 8 10 11)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n",
                    "3 + 10 = 13 (left: 2 10 13)\n",
                    "2 * 5 = 10 (left: 10 10 13)\n",
                    "10 / 2 = 5 (left: 5 5 13)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 10 11",
                "ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n10 - 3 = 7 (left: 7 11 13)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n10 - 3 = 7 (left: 2 7 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n10 / 2 = 5 (left: 5 7 6)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 5 5 6)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n5 * 6 = 30 (left: 5 5 30)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n5 - 6 = -1 (left: 5 -1 5)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "11 - 5 = 6 (left: 5 5 6)\n5 + 1 = 6 (left: 5 5 6)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n8 + 10 = 18 (left: 10 11 18)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n10 - 8 = 2 (left: 2 11 18)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n11 - 10 = 1 (left: 1 2 18)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n18 / 2 = 9 (left: 1 2 9)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n2 * 11 = 22 (left: 1 9 22)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n1 + 9 = 10 (left: 1 10 22)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n9 - 1 = 8 (left: 1 8 22)\n",
                    "5 + 8 = 13 (left: 8 10 11)\n22 / 1 = 22 (left: 1 8 22)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n2 + 3 = 5 (left: 3 5 11)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n3 * 2 = 6 (left: 2 6 11)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 5 8)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n2 + 11 = 13 (left: 5 8 13)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n5 - 2 = 3 (left: 1 3 8)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n8 / 2 = 4 (left: 1 3 4)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n3 * 1 = 3 (left: 1 3 4)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n1 + 4 = 5 (left: 3 5 5)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n3 - 1 = 2 (left: 1 2 5)\n",
                    "10 - 8 = 2 (left: 2 3 11)\n5 / 1 = 5 (left: 1 2 5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 10 11",
                "ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n8 * 1 = 8 (left: 1 8 10)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n8 / 4 = 2 (left: 2 2 2)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n2 * 4 = 8 (left: 2 8 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n8 - 2 = 6 (left: 2 6 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n2 + 5 = 7 (left: 5 7 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5 5)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n5 / 1 = 5 (left: 1 5 5)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 + 2 = 5 (left: 2 5 10)\n5 + 2 = 7 (left: 1 5 7)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n6 + 10 = 16 (left: 0 10 16)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 6 = 4 (left: 0 4 10)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 / 2 = 5 (left: 0 2 5)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n6 * 1 = 6 (left: 0 2 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n0 + 6 = 6 (left: 2 6 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n2 + 10 = 12 (left: 6 10 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n6 * 1 = 6 (left: 6 8 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n6 + 7 = 13 (left: 7 6 13)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 - 1 = 6 (left: 6 6 13)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n6 * 2 = 12 (left: 7 6 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n6 + 2 = 8 (left: 7 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 - 1 = 6 (left: 6 6 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n7 + 12 = 19 (left: 12 19 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n12 / 3 = 4 (left: 4 12 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n12 - 4 = 8 (left: 8 12 4)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n4 + 7 = 11 (left: 12 11 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    20.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 10 11",
                "ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 8 16)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 16 16)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n1 + 7 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 + 4 = 16 (left: 8 12 16)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n4 * 3 = 12 (left: 3 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 / 2 = 6 (left: 1 6 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n1 + 12 = 13 (left: 6 8 13)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n6 - 1 = 5 (left: 5 6 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n8 - 6 = 2 (left: 2 5 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n8 * 2 = 16 (left: 6 8 16)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 * 3 = 6 (left: 6 10)\n10 - 2 = 8 (left: 6 8 8)\n2 * 4 = 8 (left: 4 8 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 6 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 6 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 2 4 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 4 6)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n2 + 12 = 14 (left: 4 6 14)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n4 * 3 = 12 (left: 1 4 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n3 * 2 = 6 (left: 6 7 6)\n7 / 3 = 2 (left: 2 6 12)\n1 + 12 = 13 (left: 4 6 13)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    20.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n4 * 3 = 12 (left: 3 8 12)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 / 2 = 6 (left: 1 6 8)\n",
                    "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n6 - 1 = 5 (left: 5 6 8)\n",
                    "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n"
                ]
            }
        ],
        "idx": 994,
        "ys": [
            "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 - 4 = 8 (left: 4 8 12)\n",
            "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n4 * 3 = 12 (left: 3 8 12)\n",
            "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n12 / 2 = 6 (left: 1 6 8)\n",
            "11 - 1 = 10 (left: 3 2 10)\n2 + 10 = 12 (left: 7 12 6)\n6 * 2 = 12 (left: 12 12 4)\n6 - 1 = 5 (left: 5 6 8)\n",
            "8 - 5 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 7 8 10)\n10 - 2 = 8 (left: 1 8 8)\n8 / 1 = 8 (left: 1 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n",
                    "4 / 2 = 2 (left: 2 4 8)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "2 + 4 = 6 (left: 6 8 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n"
                ],
                "values": [
                    20.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 9 12",
                "ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "4 + 4 = 8 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n4 * 2 = 8 (left: 8 4)\n",
                    "12 - 4 = 8 (left: 4 8 8)\nFinal problem:\n",
                    "4 * 2 = 8 (left: 2 8 11)\n2 + 8 = 10 (left: 8 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n8 - 2 = 6 (left: 2 6 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 / 1 = 6 (left: 1 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n5 * 2 = 10 (left: 1 6 10)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 - 1 = 5 (left: 1 5 5)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n11 / 1 = 11 (left: 1 5 11)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n4 + 12 = 16 (left: 12 16 36)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n12 / 4 = 3 (left: 3 12 36)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n36 - 12 = 24 (left: 3 12 24)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n12 * 2 = 24 (left: 3 24 24)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n3 + 12 = 15 (left: 12 15 24)\n",
                    "4 * 9 = 36 (left: 4 12 36)\n24 / 4 = 6 (left: 6 12 24)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 9 12",
                "ys": [
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n"
                ],
                "new_ys": [
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 + 8 = 16 (left: 0 16)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n0 * 8 = 0 (left: 0 8)\n",
                    "12 - 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8)\n8 - 0 = 8 (left: 0 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n6 / 1 = 6 (left: 1 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n5 * 2 = 10 (left: 1 6 10)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n6 - 1 = 5 (left: 1 5 5)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 6 6 11)\n11 / 1 = 11 (left: 1 5 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n6 * 1 = 6 (left: 1 6 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n6 * 5/2 = 15 (left: 1 7 15)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 1 6 15)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n1 + 7 = 8 (left: 6 8 15)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n6 / 3 = 2 (left: 1 2 15)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n15 - 7 = 8 (left: 1 2 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    0.0,
                    20.0,
                    0,
                    0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 9 12",
                "ys": [
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n5 * 7 = 35 (left: 7 11 35)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n7 - 1 = 6 (left: 6 11 35)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n11 / 2 = 5.5 (left: 6 7 5.5)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 7 = 13 (left: 7 11 13)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 * 2 = 14 (left: 6 11 14)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 1 5 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n6 + 1 = 7 (left: 1 5 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n2 + 6 = 8 (left: 6 8 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 + 2 = 11 (left: 1 3 11)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 3 = 4 (left: 3 4 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 * 1 = 3 (left: 1 3 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 1 3 6)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n1 + 7 = 8 (left: 3 6 8)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n3 / 1 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
                    "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
                    "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n"
                ]
            }
        ],
        "idx": 995,
        "ys": [
            "8 - 2 = 6 (left: 6 6 11)\n6 * 1 = 6 (left: 1 6 11)\n1 + 6 = 7 (left: 6 7 11)\n1 + 7 = 8 (left: 5 8 7)\n",
            "8 - 2 = 6 (left: 6 6 11)\n1 + 6 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 6 7 11)\n7 / 1 = 7 (left: 6 5 7)\n",
            "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n",
            "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n9 - 2 = 7 (left: 2 6 7)\n",
            "4 * 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 2 6 9)\n6 / 2 = 3 (left: 1 3 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 5 = 7 (left: 2 7 6)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "2 * 5 = 10 (left: 3 5 7)\n",
                    "5 - 2 = 3 (left: 1 3 5)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "1 5 = 7 (left: 2 7 6)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 6",
                "ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n",
                    "1 5 = 7 (left: 2 7 6)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n3 * 2 = 6 (left: 2 4 6)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 4 = 6 (left: 3 3 6)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n3 - 1 = 2 (left: 2 2 3)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 3 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 3 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n5 - 2 = 3 (left: 1 3 3.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3.5 * 2 = 7 (left: 1 3 7)\n",
                    "1 5 = 7 (left: 2 7 6)\n2 + 7 = 9 (left: 7 9 6)\n",
                    "1 5 = 7 (left: 2 7 6)\n7 * 2 = 14 (left: 2 14 6)\n",
                    "1 5 = 7 (left: 2 7 6)\n6 - 2 = 4 (left: 2 4 14)\n",
                    "1 5 = 7 (left: 2 7 6)\n2 + 6 = 8 (left: 4 8 14)\n",
                    "1 5 = 7 (left: 2 7 6)\n14 / 2 = 7 (left: 2 4 7)\n",
                    "1 5 = 7 (left: 2 7 6)\n4 * 2 = 8 (left: 2 8 7)\n",
                    "1 5 = 7 (left: 2 7 6)\n7 - 2 = 5 (left: 2 5 8)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n6 * 2 = 12 (left: 2 12)\n",
                    "2 * 6 = 12 (left: 2 6 6)\n6 - 2 = 4 (left: 2 4)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n2 + 4 = 6 (left: 4 6)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 2 4 4)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n2 * 6 = 12 (left: 4 4 12)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n4 + 2 = 6 (left: 2 6 6)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    0.001,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 6",
                "ys": [
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "6 - 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 * 1.5 = 6 (left: 3 6 5)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 3 4 2)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 4 5 12)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n4 + 3 = 7 (left: 3 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n7 - 2 = 5 (left: 2 5 6)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n2 + 7 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n3.5 + 2 = 5.5 (left: 2 5.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n5 - 2 = 3 (left: 3.5 3 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n5 / 1 = 5 (left: 3.5 3 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 6 6",
                "ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 * 4 = 20 (left: 7 9 20)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n5 - 1 = 4 (left: 3 4 9)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n9 / 3 = 3 (left: 3 4 3)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 / 1 = 7 (left: 5 6 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 12)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 * 2 = 14 (left: 2 7 14)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 2 7 10)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n2 + 7 = 9 (left: 7 9 10)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n6 * 2 = 12 (left: 2 7 12)\n7 / 2 = 3.5 (left: 1.5 3.5 10)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n3.5 + 5 = 8.5 (left: 5 8.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n5 * 0.7 = 3.5 (left: 2.5 3.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n5 - 1.5 = 3.5 (left: 2.5 3.5 3.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n3.5 / 0.7 = 5 (left: 2.5 5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n5 + 2.5 = 7.5 (left: 2.5 7.5 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n2.5 * 1.5 = 3.75 (left: 1.25 3.75 5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n1 2 = 4 (left: 3.5 5)\n5 - 2.5 = 2.5 (left: 1.25 2.5 3.75)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n5.5 + 5 = 10.5 (left: 5 7 10.5)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n5 * 7 = 35 (left: 5 5 35)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n5 - 5 = 0 (left: 0 5 7)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n7 / 2 = 3.5 (left: 2 3.5 5)\n2 * 3.5 = 7 (left: 5.5 5 7)\n7 / 1.5 = 4.67 (left: 0 4.67 5)\n"
                ],
                "values": [
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
                    "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n"
                ]
            }
        ],
        "idx": 996,
        "ys": [
            "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
            "6 / 2 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5 9)\n",
            "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n6 + 7 = 13 (left: 7 8 13)\n",
            "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n7 * 2 = 14 (left: 6 8 14)\n",
            "5 + 2 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 2 6 7)\n2 + 6 = 8 (left: 6 7 8)\n8 - 1 = 7 (left: 5 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1  + 2  = 3  (left: 4 9 12)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 9 12",
                "ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n"
                ],
                "new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n8 - 2 = 6 (left: 2 6 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 / 1 = 7 (left: 1 6 7)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n6 * 2 = 12 (left: 1 2 12)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n1 + 7 = 8 (left: 2 8 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n4 + 9 = 13 (left: 9 8)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n9 - 4 = 5 (left: 5 8)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n8 / 2 = 4 (left: 5 4)\n",
                    "2 * 4  = 8  (left: 4 9 8)\n9 - 5 = 4 (left: 4 4)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n4 + 9 = 13 (left: 9 12 13)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 / 1.5 = 6 (left: 3.5 6 12)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n12 - 4 = 8 (left: 5.5 6 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n6 * 1.5 = 9 (left: 3.5 5.5 9)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n4 + 7 = 11 (left: 7 8 11)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n7 * 4 = 28 (left: 8 11 28)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n8 - 4 = 4 (left: 4 7 28)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n7 - 1 = 6 (left: 4 6 28)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n4 + 1 = 5 (left: 5 6 28)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n6 * 4 = 24 (left: 5 28 24)\n",
                    "9 - 2  = 7  (left: 4 7 8)\n28 / 4 = 7 (left: 5 7 24)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n2 + 4 = 6 (left: 4 6 9)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n4 * 2 = 8 (left: 2 8 9)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n9 - 2 = 7 (left: 2 4 7)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n2 + 9 = 11 (left: 4 7 11)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n4 / 2 = 2 (left: 1 2 7)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n9 - 4 = 5 (left: 1 2 5)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n2 * 9 = 18 (left: 1 5 18)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n1 + 9 = 10 (left: 2 5 10)\n",
                    "7 + 2  = 9  (left: 2 4 9)\n5 / 1 = 5 (left: 1 2 5)\n"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    1.0,
                    1.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 9 12",
                "ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n"
                ],
                "new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 7 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 8 11)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 8 10 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 1 2 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n8 / 1 = 8 (left: 1 7 8)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n5.5 + 5.5 = 11 (left: 0.5 11 13)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n0.5 * 2 = 1 (left: 1 11 13)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n11 - 1 = 10 (left: 0.5 10 13)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n13 / 1 = 13 (left: 0.5 10 13)\n",
                    "1  + 2  = 3  (left: 4 9 12)\n9 + 4 = 13 (left: 5.5 5.5 13)\n0.5 + 13 = 13.5 (left: 10 13.5)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n6 + 10 = 16 (left: 10 14 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n10 - 6 = 4 (left: 4 14 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 * 2 = 8 (left: 4 8 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n4 + 6 = 10 (left: 8 8 10)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    20.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 9 12",
                "ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n"
                ],
                "new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n8 - 1 = 7 (left: 7 9 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 / 3 = 3 (left: 3 7 15)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n7 * 3 = 21 (left: 3 9 21)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 - 1 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 7 8 9)\n9 + 2 = 11 (left: 3 7 11)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 4 = 8 (left: 4 8 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 * 2 = 8 (left: 4 8 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 + 4 = 8 (left: 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 * 2 = 8 (left: 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n16 / 2 = 8 (left: 4 4 8)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 8 = 14 (left: 8 14)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 * 2 = 16 (left: 6 16)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 * 2 = 12 (left: 8 12)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n8 - 2 = 6 (left: 4 6)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n6 + 2 = 8 (left: 4 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    1.0
                ],
                "select_new_ys": [
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
                ]
            }
        ],
        "idx": 997,
        "ys": [
            "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 + 1 = 5 (left: 3 4 5)\n",
            "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 8 14)\n4 * 2 = 8 (left: 8 8)\n",
            "4 - 2  = 2  (left: 2 7 8)\n2 + 8 = 10 (left: 6 10 14)\n14 - 10 = 4 (left: 4 4 16)\n4 - 1 = 3 (left: 3 4 4)\n",
            "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
            "4 - 2  = 2  (left: 2 7 8)\n7 * 2 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 8 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 8 = 12 (left: 8 11 13)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n",
                    "11 - 4 = 7 (left: 4 8 7)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n",
                    "4 * 2 = 8 (left: 8 11 7)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    1.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 4 5 7)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 8 11 13",
                "ys": [
                    "13 - 8 = 5 (left: 4 5 7)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n5 * 4 = 20 (left: 1 7 20)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n7 - 4 = 3 (left: 1 5 3)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n5 - 1 = 4 (left: 1 4 3)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n3 * 4 = 12 (left: 1 4 12)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 - 1 = 3 (left: 1 3 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n4 + 8 = 12 (left: 8 6 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n8 / 2 = 4 (left: 4 4 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n12 - 8 = 4 (left: 4 6 4)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n6 + 4 = 10 (left: 8 4 10)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n4 * 3 = 12 (left: 8 6 12)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n4 + 7 = 11 (left: 7 6 11)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n6 * 2 = 12 (left: 3 7 12)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n6 + 4 = 10 (left: 3 7 10)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 1 = 6 (left: 3 6 6)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n8 + 11 = 19 (left: 11 6 19)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n11 - 8 = 3 (left: 3 6 19)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n6 * 2 = 12 (left: 3 12 19)\n",
                    "13 + 4 = 17 (left: 8 11 6)\n19 / 3 = 6 (left: 3 6 6)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n8 + 11 = 19 (left: 11 13 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n13 - 11 = 2 (left: 2 8 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n19 / 13 = 1.46 (left: 1.46 8 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n8 * 1.46 = 11.68 (left: 11.68 13 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n13 - 8 = 5 (left: 5 11.68 19)\n",
                    "4 + 8 = 12 (left: 8 11 13)\n19 - 13 = 6 (left: 5 6 11.68)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    1.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 8 11 13",
                "ys": [
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n"
                ],
                "new_ys": [
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n8 + 4 = 12 (left: 4 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n12 - 8 = 4 (left: 4 4)\n",
                    "11 / 1 = 11 (left: 4 8 6)\n6 * 2 = 12 (left: 8 4 12)\n4 / 2 = 2 (left: 2 4)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 7 9 12)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 * 5/2 = 10.5 (left: 5 7 10.5)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 2 4 7)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 2 = 5 (left: 1 5 5)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 9/7 = 6.43 (left: 3 6.43 7)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n4 + 3 = 7 (left: 3 7 8)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n3 * 4 = 12 (left: 12 8)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n8 / 2 = 4 (left: 4 5 8)\n",
                    "13 - 8 = 5 (left: 4 5 7)\n1 + 7 = 8 (left: 4 3 8)\n4 + 1 = 5 (left: 3 5 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n7 - 3 = 4 (left: 3 6 4)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 4 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 1.5 4 4.5)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 * 7 = 21 (left: 4 4.5 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 + 3 = 9 (left: 1.5 4.5 9)\n"
                ],
                "values": [
                    0.001,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0.001,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 8 11 13",
                "ys": [
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n"
                ],
                "new_ys": [
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 * 3/2 = 9 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n7 * 3 = 21 (left: 9 10 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n7 - 1 = 6 (left: 3 6 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n3 + 9 = 12 (left: 6 12 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n6 + 3 = 9 (left: 3 7 9)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 7 9 13)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 - 2 = 5 (left: 4 5 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n8 / 2 = 4 (left: 4 5 4)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 3 = 6 (left: 4 5 6)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n1.5 + 4.5 = 6 (left: 4.5 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n4.5 / 0.75 = 6 (left: 3.75 7)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n6 * 3/2 = 4.5 (left: 1.5 4.5 7)\n7 - 1.5 = 5.5 (left: 3.75 5.5)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
                    "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
                ]
            }
        ],
        "idx": 998,
        "ys": [
            "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n",
            "8 - 1 = 7 (left: 4 7 6)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n6 + 1 = 7 (left: 5 7 8)\n",
            "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n7 * 3 = 21 (left: 6 9 21)\n",
            "8 - 1 = 7 (left: 4 7 6)\n7 / 1 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 6 7 9)\n9 - 1 = 8 (left: 6 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    },
    {
        "sum(accs)": 0,
        "cnt_avg": 0.0,
        "cnt_any": 0
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 9 = 13 (left: 9 10 13)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n",
                    "9 - 1 = 8 (left: 2 6 8)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n",
                    "8 + 1 = 9 (left: 2 7 9)\n",
                    "2 * 4 = 8 (left: 2 3 8)\n",
                    "3 - 1 = 2 (left: 1 2 3)\n",
                    "3 / 1 = 3 (left: 1 2 3)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    1.0,
                    20.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 2 6 8)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n",
                    "4 9 = 13 (left: 9 10 13)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 10 13",
                "ys": [
                    "9 - 1 = 8 (left: 2 6 8)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n",
                    "4 9 = 13 (left: 9 10 13)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 6 8)\n",
                    "9 - 1 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 2 12)\n",
                    "9 - 1 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n2 + 8 = 10 (left: 8 10 12)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n12 - 2 = 10 (left: 8 8 10)\n",
                    "4 9 = 13 (left: 9 10 13)\n9 + 10 = 19 (left: 10 13 19)\n",
                    "4 9 = 13 (left: 9 10 13)\n10 - 3 = 7 (left: 7 13 19)\n",
                    "4 9 = 13 (left: 9 10 13)\n13 / 1 = 13 (left: 7 10 13)\n",
                    "4 9 = 13 (left: 9 10 13)\n10 * 9 = 90 (left: 7 13 90)\n",
                    "4 9 = 13 (left: 9 10 13)\n13 + 9 = 22 (left: 7 10 22)\n",
                    "4 9 = 13 (left: 9 10 13)\n7 - 2 = 5 (left: 5 10 22)\n",
                    "4 9 = 13 (left: 9 10 13)\n10 / 2 = 5 (left: 5 5 22)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n5 + 10 = 15 (left: 10 13 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n10 - 3 = 7 (left: 5 7 13)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 - 5 = 8 (left: 5 8 7)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n5 * 2 = 10 (left: 10 13 7)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n10 + 5 = 15 (left: 5 13 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n5 - 3 = 2 (left: 2 5 13)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 - 5 = 8 (left: 2 5 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    1.0,
                    1.0,
                    0.0,
                    20.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 10 13",
                "ys": [
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n"
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "6 * 2 = 12 (left: 2 8 12)\n8 / 2 = 4 (left: 4 8 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 5 = 10 (left: 5 10 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3 3 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n3 * 2 = 6 (left: 6 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3 3)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n9 / 3 = 3 (left: 3 6 3)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 6 = 12 (left: 6 12 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 * 3 = 18 (left: 6 18 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n27 - 6 = 21 (left: 6 12 21)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 / 2 = 3 (left: 3 6 21)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n6 + 3 = 9 (left: 3 9 21)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n3 * 7 = 21 (left: 3 9 21)\n"
                ],
                "values": [
                    0,
                    0.001,
                    0,
                    0,
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 10 13",
                "ys": [
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 + 5 = 10 (left: 5 10 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 + 4 = 9 (left: 1 5 9)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 * 1 = 5 (left: 4 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 - 4 = 1 (left: 1 1 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n5 + 6 = 11 (left: 6 10 11)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n6 * 5/2 = 15 (left: 5 10 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n6 + 5 = 11 (left: 10 11)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 * 2 = 10 (left: 5 10 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 + 4 = 9 (left: 1 5 9)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 * 1 = 5 (left: 4 5 5)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n5 - 4 = 1 (left: 1 1 5)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n6 * 3/2 = 4.5 (left: 3 4.5 9)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6 6)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n3 * 9 = 27 (left: 6 6 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9 27)\n",
                    "10 - 4 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    1.0,
                    0,
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0,
                    1.0,
                    0.001,
                    1.0,
                    1.0,
                    0.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
                    "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n"
                ]
            }
        ],
        "idx": 999,
        "ys": [
            "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n",
            "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n",
            "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 + 1 = 6 (left: 5 6 10)\n",
            "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n5 * 1 = 5 (left: 5 5 15)\n5 / 1 = 5 (left: 5 5 10)\n",
            "9 + 4 = 13 (left: 5 10 13)\n13 / 1 = 13 (left: 5 5 15)\n15 - 5 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 5 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": "llama3"
    }
]